DDR0 ;SF/DCM-FileMan Delphi Components' RPCs ;2013-03-22  1:46 PM
 ;;22.2;VA FileMan;**24**;Jan 05, 2016;Build 3
 ;;Per VA Directive 6402, this routine should not be modified.
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
 ;;Licensed under the terms of the Apache License, Version 2.0.
 ;
 Q
FINDC(DDRDATA,DDR) ; -- broker callback to get list data
 N DDRFILE,DDRIENS,DDRFLDS,DDRFLAGS,DDRVAL,DDRMAX,DDRXREF,DDRSCRN,DDRID,DDRROOT,DDRERR,DDRRSLT,DDROPT,DDROUT
 ; -- parse array to parameters
 D PARSE(.DDR)
 S DDROUT=""
 D FIND^DIC(DDRFILE,DDRIENS,DDRFLDS,DDRFLAGS,DDRVAL,DDRMAX,DDRXREF,DDRSCRN,DDRID,DDROUT,"DDRERR")
 I $G(DDRFLAGS)["P" D
 . Q:'$D(^TMP("DILIST",$J))
 . N COUNT S COUNT=$G(^TMP("DILIST",$J,0)) Q:'COUNT  D 1 ;added $G() ;p24
 . I XWBAPVER>1 S ^(.3)="[MAP]",^TMP("DILIST",$J,.4)=^TMP("DILIST",$J,0,"MAP")
 . K ^TMP("DILIST",$J,0) S ^(.5)="[BEGIN_diDATA]",^(COUNT+1)="[END_diDATA]"
 . Q
 I $G(DDRFLAGS)'["P" D
 . Q:'$D(^TMP("DILIST",$J))
 . N COUNT S COUNT=$G(^TMP("DILIST",$J,0)) Q:'COUNT  ;added $G() ;p24
 . D 1,UNPACKED
 . Q
 D 3,4
 Q
FINDI(DDRDATA,DDR) ; -- improved broker callback to find data,it can handle compound index
 N DDRFILE,DDRIENS,DDRFLDS,DDRFLAGS,DDRVAL,DDRMAX,DDRXREF,DDRSCRN,DDRID,DDRROOT,DDRERR,DDRRSLT,DDROPT,DDROUT
 ; -- parse array to parameters
 D PARSE(.DDR)
 IF DDRVAL[U DO
 .N I,DDRTMP
 .S DDRTMP=DDRVAL
 .K DDRVAL
 .F I=1:1:$L(DDRTMP,U) S DDRVAL(I)=$P(DDRTMP,U,I)
 S DDROUT=""
 D FIND^DIC(DDRFILE,DDRIENS,DDRFLDS,DDRFLAGS,.DDRVAL,DDRMAX,DDRXREF,DDRSCRN,DDRID,DDROUT,"DDRERR")
 I $G(DDRFLAGS)["P" D
 . Q:'$D(^TMP("DILIST",$J))
 . N COUNT S COUNT=$G(^TMP("DILIST",$J,0)) Q:'COUNT  D 1 ;added $G() ;p24
 . I XWBAPVER>1 S ^(.3)="[MAP]",^TMP("DILIST",$J,.4)=^TMP("DILIST",$J,0,"MAP")
 . K ^TMP("DILIST",$J,0) S ^(.5)="[BEGIN_diDATA]",^(COUNT+1)="[END_diDATA]"
 . Q
 I $G(DDRFLAGS)'["P" D
 . Q:'$D(^TMP("DILIST",$J))
 . N COUNT S COUNT=$G(^TMP("DILIST",$J,0)) Q:'COUNT  ;added $G() ;p24
 . D 1,UNPACKED
 . Q
 D 3,4
 Q
1 Q:'$P(COUNT,U,3)
 S ^TMP("DILIST",$J,.1)="[Misc]",^(.2)="MORE"
 Q
3 I $D(DIERR) D ERROR
 Q
4 S DDRDATA=$NA(^TMP("DILIST",$J))
 Q
PARSE(DDR) ; -- array parsing
 S DDRFILE=$G(DDR("FILE"))
 S DDRIENS=$G(DDR("IENS"))
 S DDRFLDS=$G(DDR("FIELDS"))
 S DDRFLAGS=$G(DDR("FLAGS"))
 S DDRMAX=$G(DDR("MAX"),"*")
 S DDRVAL=$G(DDR("VALUE"))
 S DDRXREF=$G(DDR("XREF"))
 S DDRSCRN=$G(DDR("SCREEN"))
 S DDRID=$G(DDR("ID"))
 S DDRROOT=$G(DDR("ROOT"))
 S DDROPT=$G(DDR("OPTIONS"))
 Q
ERROR ;
 N I S I=1
 D Z("[BEGIN_diERRORS]")
 N A S A=0 F  S A=$O(DDRERR("DIERR",A)) Q:'A  D
 . N HD,PARAM,B,C,TEXT,TXTCNT,D,FILE,FIELD,IENS
 . S HD=DDRERR("DIERR",A)
 . I $D(DDRERR("DIERR",A,"PARAM",0)) D
 . . S (B,D)=0 F C=1:1 S B=$O(DDRERR("DIERR",A,"PARAM",B)) Q:B=""  D
 . . . I B="FILE" S FILE=DDRERR("DIERR",A,"PARAM","FILE")
 . . . I B="FIELD" S FIELD=DDRERR("DIERR",A,"PARAM","FIELD")
 . . . I B="IENS" S IENS=DDRERR("DIERR",A,"PARAM","IENS")
 . . . S D=D+1,PARAM(D)=B_U_DDRERR("DIERR",A,"PARAM",B)
 . S C=0 F  S C=$O(DDRERR("DIERR",A,"TEXT",C)) Q:'C  S TEXT(C)=DDRERR("DIERR",A,"TEXT",C),TXTCNT=C
 . S HD=HD_U_TXTCNT_U_$G(FILE)_U_$G(IENS)_U_$G(FIELD)_U_$G(D) D Z(HD)
 . S B=0 F  S B=$O(PARAM(B)) Q:'B  S %=PARAM(B) D Z(%)
 . S B=0 F  S B=$O(TEXT(B)) Q:'B  S %=TEXT(B) D Z(%)
 . Q
 D Z("[END_diERRORS]")
 Q
Z(%) ;
 S ^TMP("DILIST",$J,"ZERR",I)=%,I=I+1
 Q
UNPACKED ;
 K ^TMP("DILIST",$J,0)
 S ^TMP("DILIST",$J,.5)="[BEGIN_diDATA]" K ^TMP("DILIST",$J,1)
 S ^TMP("DILIST",$J,2,.1)="BEGIN_IENs",^(COUNT+1)="END_IENs"
 I DDRFLDS]"",$D(^TMP("DILIST",$J,"ID")) D
 . N Z,FLD,FLDCNT S Z=0,FLD="",FLDCNT=0
 . F  S Z=$O(^TMP("DILIST",$J,"ID",1,Z)) Q:'Z   S FLD=FLD_Z_";",FLDCNT=FLDCNT+1
 . Q:'FLDCNT
 . S ^TMP("DILIST",$J,"ID",0)="BEGIN_IDVALUES",^(.1)=FLD_U_FLDCNT,^(COUNT+1)="END_IDVALUES"
 E  D
 . N Z S Z=0 F  S Z=$O(^TMP("DILIST",$J,"ID",Z)) Q:'Z  K ^TMP("DILIST",$J,"ID",Z)
 I $G(DDROPT)["WID",$D(^TMP("DILIST",$J,"ID","WRITE")) D
 . N Z,N,I,IEN,WIDCNT S (N,I)=0
 . M Z=^TMP("DILIST",$J,"ID","WRITE") K ^TMP("DILIST",$J,"ID","WRITE")
 . S ^TMP("DILIST",$J,"ID","WID",0)="BEGIN_WIDVALUES",N=N+1
 . F  S I=$O(Z(I)) Q:'I  S IEN=$G(^TMP("DILIST",$J,2,I)) D
 . . N J S (J,WIDCNT)=0 F  S J=$O(Z(I,J)) Q:'J  S WIDCNT=WIDCNT+1
 . . S ^TMP("DILIST",$J,"ID","WID",N)="WID"_U_IEN_U_WIDCNT,N=N+1
 . . N J S J=0 F J=1:1:WIDCNT S ^TMP("DILIST",$J,"ID","WID",N)=Z(I,J),N=N+1
 . S ^TMP("DILIST",$J,"ID","WID",N)="END_WIDVALUES"
 I $G(DDROPT)'["WID" K ^TMP("DILIST",$J,"ID","WRITE")
 S ^TMP("DILIST",$J,"IDZ")="[END_diDATA]"
 Q
