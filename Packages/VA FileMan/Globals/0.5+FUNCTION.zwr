OSEHRA ZGO Export: FUNCTION
ZWR
^DD("FUNC",0)="FUNCTION^.5^211^166"
^DD("FUNC",1,0)="SQUAREROOT"
^DD("FUNC",1,1)="D SQR^DIXC S X=$S(X'>0:"""",1:Y)"
^DD("FUNC",2,0)="TIME"
^DD("FUNC",2,1)="S X=$E($P(X,""."",2)_""0000"",1,4),%=X>1159 S:X>1259 X=X-1200 S X=X\100_"":""_$E(X#100+100,2,3)_"" ""_$E(""AP"",%+1)_""M"""
^DD("FUNC",3,0)="MONTH"
^DD("FUNC",3,1)="S X=$E(X,1,5)_0_0 S:'X X="""""
^DD("FUNC",3,2)="D^D"
^DD("FUNC",4,0)="YEAR"
^DD("FUNC",4,1)="S X=$E(X,1,3)_""0000"" S:'X X="""""
^DD("FUNC",4,2)="D^D"
^DD("FUNC",5,0)="DATE"
^DD("FUNC",5,1)="S X=$P(X,""."",1)"
^DD("FUNC",5,2)="D^D"
^DD("FUNC",6,0)="DAYOFWEEK"
^DD("FUNC",6,1)="D DW^%DTC"
^DD("FUNC",6,2)="^D"
^DD("FUNC",7,0)="CLOSE"
^DD("FUNC",7,1)="C X S X="""""
^DD("FUNC",8,0)="ABS"
^DD("FUNC",8,1)="S:X<0 X=-X"
^DD("FUNC",9,0)="INTERNAL"
^DD("FUNC",9,1)="S X=X"
^DD("FUNC",10,0)="MAX"
^DD("FUNC",10,1)="S:X1>X X=X1"
^DD("FUNC",10,2)="O"
^DD("FUNC",10,3)=2
^DD("FUNC",10,9)="MAXIMUM OF 2 VALUES"
^DD("FUNC",11,0)="MIN"
^DD("FUNC",11,1)="S:X1<X X=X1"
^DD("FUNC",11,2)="O"
^DD("FUNC",11,3)=2
^DD("FUNC",11,9)="MINIMUM OF TWO VALUES"
^DD("FUNC",12,0)="REVERSE"
^DD("FUNC",12,1)="S X=$RE(X)"
^DD("FUNC",12,9)="DATA CHARACTERS IN RIGHT-TO-LEFT ORDER"
^DD("FUNC",13,0)="UPPERCASE"
^DD("FUNC",13,1)="S X=$$UP^DILIBF(X)"
^DD("FUNC",14,0)="LOWERCASE"
^DD("FUNC",14,1)="X ""F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)"""
^DD("FUNC",15,0)="CENTER"
^DD("FUNC",15,1)="S X=$J("""",$S($D(DIWR)+$D(DIWL)=2:DIWR-DIWL+1,$D(IOM):IOM,1:80)-$L(X)\2-$X)_X"
^DD("FUNC",15,10)="W"
^DD("FUNC",16,0)="UNDERLINE"
^DD("FUNC",16,1)="S %="""",Y=$S($D(IOST)[0:-1,$A(IOST)-80:-1,1:$L(X)<83) X:Y+1 ""F Y=1:1:$L(X) ""_$S(Y:""S %=$C(8)_%"",1:""W $E(X,Y),$C(8)"")_""_""""_"""""" S:Y+1 X=$S(%]"""":X_%,1:%)"
^DD("FUNC",16,9)="UNDERLINE (ARG) IF OUTPUTTING TO A PRINTER DEVICE"
^DD("FUNC",16,10)="W"
^DD("FUNC",17,0)="PAGEFEED"
^DD("FUNC",17,1)="S %Y=1,%=$S($D(DIWF):$F(DIWF,""B""),1:0) X:% ""F %Y=%:1 Q:$E(DIWF,%Y)'?1N"" S:$D(DIWF) DIWF=$E(DIWF,1,%-2)_$E(DIWF,%Y,999)_""B""_(X\1) X:X>(IOSL-$Y)&$D(^UTILITY($J,1))&'$D(^(""W""))&'$D(DIWF) ^(1) S X="""""
^DD("FUNC",17,9)="START NEW PAGE IF <ARG LINES LEFT"
^DD("FUNC",17,10)="W"
^DD("FUNC",18,0)="BREAKABLE"
^DD("FUNC",18,1)="D:'$D(DISYS) OS^DII X ^DD(""OS"",DISYS,1)"
^DD("FUNC",18,9)="OUTPUT DEVICE CAN BE INTERRUPTED IF ARGUMENT IS NON-ZERO"
^DD("FUNC",19,0)="NUMMONTH"
^DD("FUNC",19,1)="S X=+$E(X,4,5)"
^DD("FUNC",19,2)="^D"
^DD("FUNC",19,9)="MONTH NUMBER (0-12) FOR A DATE"
^DD("FUNC",20,0)="NUMDAY"
^DD("FUNC",20,1)="S X=+$E(X,6,7)"
^DD("FUNC",20,2)="^D"
^DD("FUNC",20,9)="DAY NUMBER (0-31) FOR A DATE"
^DD("FUNC",21,0)="NUMYEAR"
^DD("FUNC",21,1)="S:X X=$E(X,2,3)"
^DD("FUNC",21,2)="^D"
^DD("FUNC",21,9)="YEAR NUMBER (00-99) FOR A DATE"
^DD("FUNC",22,0)="NUMDATE"
^DD("FUNC",22,1)="S:X X=$E(X,4,5)_""/""_$E(X,6,7)_""/""_$E(X,2,3)"
^DD("FUNC",22,2)="^D"
^DD("FUNC",22,9)="DATE IN 'NN/NN/NN' FORMAT"
^DD("FUNC",23,0)="REPLACE"
^DD("FUNC",23,1)="X ""F %=0:0 S %=$F(X2,X1,%) Q:%<2  S X2=$E(X2,1,%-$L(X1)-1)_X_$E(X2,%,999),%=%-$L(X1)+$L(X)"" S X=X2"
^DD("FUNC",23,3)=3
^DD("FUNC",23,9)="THE 1ST ARGUMENT, WITH ALL OCCURRENCES OF THE 2ND ARGUMENT REPLACED BY THE 3RD"
^DD("FUNC",24,0)="NOW"
^DD("FUNC",24,1)="N %I,%H,% D NOW^%DTC S X=%"
^DD("FUNC",24,2)="D"
^DD("FUNC",24,3)=0
^DD("FUNC",24,9)="CURRENT DATE/TIME"
^DD("FUNC",25,0)="TODAY"
^DD("FUNC",25,1)="N %I,%H,% D NOW^%DTC"
^DD("FUNC",25,2)="D"
^DD("FUNC",25,3)=0
^DD("FUNC",25,9)="CURRENT DATE"
^DD("FUNC",26,0)="PAGE"
^DD("FUNC",26,1)="S X=$G(DC)"
^DD("FUNC",26,3)=0
^DD("FUNC",26,9)="PAGE NUMBER (OF OUTPUT)"
^DD("FUNC",27,0)="SETTAB"
^DD("FUNC",27,1)="S DIWT=X,X="""" F %=1:1 S Y=""X""_% Q:'$D(@Y)  S DIWT=@Y_"",""_DIWT"
^DD("FUNC",27,3)="VARIABLE"
^DD("FUNC",27,9)="SET TAB STOPS"
^DD("FUNC",27,10)="W"
^DD("FUNC",28,0)="RIGHT-JUSTIFY"
^DD("FUNC",28,1)="S X="""" S:'$D(DIWF) DIWF="""" S:DIWF'[""R"" DIWF=DIWF_""R"""
^DD("FUNC",28,3)=0
^DD("FUNC",28,10)="W"
^DD("FUNC",29,0)="DOUBLE-SPACE"
^DD("FUNC",29,1)="S X="""" S:'$D(DIWF) DIWF="""" S:DIWF'[""D"" DIWF=DIWF_""D"""
^DD("FUNC",29,3)=0
^DD("FUNC",29,10)="W"
^DD("FUNC",30,0)="SINGLE-SPACE"
^DD("FUNC",30,1)="S:'$D(DIWF) DIWF="""" S X="""",DIWF=$P(DIWF,""D"",1)_$P(DIWF,""D"",2)"
^DD("FUNC",30,3)=0
^DD("FUNC",30,10)="W"
^DD("FUNC",31,0)="BLANK"
^DD("FUNC",31,1)="X ""F I=1:1:X ""_$S($D(^UTILITY($J,""W"")):""S X="""" |TAB|"""" D L^DIWP"",1:""W !"") S X="""""
^DD("FUNC",31,9)="SKIP (ARG) NUMBER OF LINES"
^DD("FUNC",31,10)="W"
^DD("FUNC",32,0)="MONTHNAME"
^DD("FUNC",32,1)="S X=$P(""JANUARY^FEBRUARY^MARCH^APRIL^MAY^JUNE^JULY^AUGUST^SEPTEMBER^OCTOBER^NOVEMBER^DECEMBER"",""^"",+X)"
^DD("FUNC",32,9)="TURNS ""1"" INTO ""JANUARY"", ""2"" INTO ""FEBRUARY"", ETC."
^DD("FUNC",33,0)="SETPAGE"
^DD("FUNC",33,1)="S DC=X,X="""""
^DD("FUNC",33,9)="PAGE NUMBER ON NEXT PAGE WILL BE (ARG)+1"
^DD("FUNC",33,10)="W"
^DD("FUNC",34,0)="INDENT"
^DD("FUNC",34,1)="S:'$D(DIWF) DIWF="""" S %Y=1,%=$F(DIWF,""I"") X:% ""F %Y=%:1 Q:$E(DIWF,%Y)'?1N"" S DIWF=$E(DIWF,1,%-2)_$E(DIWF,%Y,999)_""I""_(X\1),X="""""
^DD("FUNC",34,9)="INDENT FOLLOWING TEXT (ARG) SPACES"
^DD("FUNC",34,10)="W"
^DD("FUNC",35,0)="SITENUMBER"
^DD("FUNC",35,1)="S X=^DD(""SITE"",1)"
^DD("FUNC",35,3)=0
^DD("FUNC",35,9)="NUMBER IDENTIFYING YOUR SITE (FROM INITIALIZATION)"
^DD("FUNC",36,0)="WIDTH"
^DD("FUNC",36,1)="S:'$D(DIWF) DIWF="""" S %Y=1,%=$F(DIWF,""C"") X:% ""F %Y=%:1 Q:$E(DIWF,%Y)'?1N"" S DIWF=$E(DIWF,1,%-2)_$E(DIWF,%Y,999)_""C""_(X\1),X="""""
^DD("FUNC",36,9)="DISPLAY FOLLOWING TEXT (ARG) COLUMNS ACROSS"
^DD("FUNC",36,10)="W"
^DD("FUNC",37,0)="PAGESTART"
^DD("FUNC",37,1)="S:'$D(DIWF) DIWF="""" S %Y=1,%=$F(DIWF,""T"") X:% ""F %Y=%:1 Q:$E(DIWF,%Y)'?1N"" S DIWF=$E(DIWF,1,%-2)_$E(DIWF,%Y,999)_""T""_(X\1),X="""""
^DD("FUNC",37,9)="START NEW OUTPUT TEXT ON LINE (ARG) OF PAGE"
^DD("FUNC",37,10)="W"
^DD("FUNC",38,0)="NOWRAP"
^DD("FUNC",38,1)="S:'$D(DIWF) DIWF="""" S:DIWF'[""N"" DIWF=DIWF_""N"" S X="""""
^DD("FUNC",38,3)=0
^DD("FUNC",38,9)="DISPLAY LINE-FOR-LINE AS INPUT"
^DD("FUNC",38,10)="W"
^DD("FUNC",39,0)="WRAP"
^DD("FUNC",39,1)="S DIWF=$P(DIWF,""N"",1)_$P(DIWF,""N"",2),X="""""
^DD("FUNC",39,3)=0
^DD("FUNC",39,9)="RETURN TO 'WRAP-AROUND' OUTPUT"
^DD("FUNC",39,10)="W"
^DD("FUNC",40,0)="MINUTES"
^DD("FUNC",40,1)="S Y=$E(X1_""000"",9,10)-$E(X_""000"",9,10)*60+$E(X1_""00000"",11,12)-$E(X_""00000"",11,12),X2=X,X=$P(X,""."",1)'=$P(X1,""."",1) D ^%DTC:X S X=X*1440+Y"
^DD("FUNC",40,3)=2
^DD("FUNC",40,9)="DIFFERENCE BETWEEN 2 DATE/TIMES IN MINUTES"
^DD("FUNC",41,0)="MODULO"
^DD("FUNC",41,1)="S X=X1#X"
^DD("FUNC",41,3)=2
^DD("FUNC",41,9)="FIRST ARGUMENT MOD SECOND ARGUMENT (MUMPS '#' OPERATOR)"
^DD("FUNC",42,0)="SET"
^DD("FUNC",42,1)="S:X]""""&(X'[U)&(X'[""$C(94)"") @X=X1,X=X1"
^DD("FUNC",42,3)=2
^DD("FUNC",42,9)="TAKES THE VALUE OF 1ST ARGUMENT, BUT ALSO PUTS IT INTO THE VARIABLE NAMED BY THE 2ND ARGUMENT"
^DD("FUNC",43,0)="BETWEEN"
^DD("FUNC",43,1)="S:X<X1 %=X1,X1=X,X=% S X=X2'>X&(X2'<X1)"
^DD("FUNC",43,3)=3
^DD("FUNC",43,9)="EQUALS '1' IF 1ST ARGUMENT LIES BETWEEN 2ND AND 3RD, '0' OTHERWISE"
^DD("FUNC",44,0)="TOP"
^DD("FUNC",44,1)="S DIFF=1 X:$D(^UTILITY($J,1)) ^(1) S X="""""
^DD("FUNC",44,3)=0
^DD("FUNC",44,9)="TOP-OF-FORM"
^DD("FUNC",44,10)="W"
^DD("FUNC",45,0)="NOBLANKLINE"
^DD("FUNC",45,1)="S X="""",DIWF=$S($D(DIWF):DIWF_"" "",1:"" "")"
^DD("FUNC",45,3)=0
^DD("FUNC",45,9)="SUPPRESSES PRINTING OF A SINGLE ALL-BLANK LINE"
^DD("FUNC",45,10)="W"
^DD("FUNC",46,0)="RANGEDATE"
^DD("FUNC",46,1)="S %Y=X3,Y=X2,X2=X S:X>X1 X2=X1,X1=X S:Y>%Y %Y=Y,Y=X3 S:Y>X2 X2=Y S:%Y<X1 X1=%Y D ^%DTC S X=$S(%Y=0:0,X<0:0,1:X+1) K %Y,X3"
^DD("FUNC",46,3)=4
^DD("FUNC",46,9)="TAKES 2 DATE RANGES, RETURNS THE NUMBER OF DAYS BY WHICH THEY OVERLAP, OR 0 IF OVERLAP IS INDEFINITE"
^DD("FUNC",47,0)="SETPARAM"
^DD("FUNC",47,1)="S:X]""""&(X?.ANP)&(X1'[U)&(X1'[""$C(94)"") DIPA($E(X,1,30))=X1 S X="""""
^DD("FUNC",47,3)=2
^DD("FUNC",47,9)="RETURNS NOTHING, BUT SETS PARAMETER NAMED BY 2ND ARGUMENT TO 1ST ARGUMENT"
^DD("FUNC",48,0)="PARAM"
^DD("FUNC",48,1)="S X=$S(X=""""!(X'?.ANP):"""",$D(DIPA($E(X,1,30))):DIPA($E(X,1,30)),1:"""")"
^DD("FUNC",48,9)="RETURNS VALUE OF PARAMETER NAMED BY ARGUMENT"
^DD("FUNC",49,0)="IOM"
^DD("FUNC",49,1)="S X=$G(IOM,80)"
^DD("FUNC",49,3)=0
^DD("FUNC",49,9)="RETURNS THE NUMBER OF COLUMN POSITIONS ON THE PAGE OR SCREEN (E.G., 80)"
^DD("FUNC",50,0)="DUP"
^DD("FUNC",50,1)="S %=X,X="""" S:X1]"""" $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%)"
^DD("FUNC",50,3)=2
^DD("FUNC",50,9)="DUPLICATES THE 1ST ARGUMENT INTO AN 'N'-BYTE STRING, WHERE 'N' IS 2ND ARGUMENT"
^DD("FUNC",51,0)="STRIPBLANKS"
^DD("FUNC",51,1)="X:X["" "" ""F %=0:0 Q:$A(X)-32  S X=$E(X,2,999)"",""F %=0:0 S %=$L(X) Q:$A(X,%)-32  S X=$E(X,1,%-1)"""
^DD("FUNC",51,9)="DELETES LEADING AND TRAILING SPACES FROM THE ARGUMENT STRING"
^DD("FUNC",52,0)="TRANSLATE"
^DD("FUNC",52,1)="S X=$TR(X2,X1,X)"
^DD("FUNC",52,3)=3
^DD("FUNC",52,9)="REPLACES, IN ARG1, EACH OCCURRENCE OF EACH CHAR IN ARG2 WITH THE CORRESPONDING CHAR IN ARG3"
^DD("FUNC",53,0)="PADRIGHT"
^DD("FUNC",53,1)="S:$L(X1)<X X1=X1_$J("""",X-$L(X1)) S X=X1"
^DD("FUNC",53,3)=2
^DD("FUNC",53,9)="RETURNS 'ARG1', WITH SPACES ADDED TO GENERATE A STRING 'ARG2' BYTES LONG"
^DD("FUNC",54,0)="FILE"
^DD("FUNC",54,1)="S X=$S('X:X,X'[""("":X,'$D(@(U_$E($P(X,+X,2,99),2,99)_""0)"")):X,1:$P(^(0),U))"
^DD("FUNC",54,3)=1
^DD("FUNC",54,9)="Names file for variable pointer type fields."
^DD("FUNC",55,0)="USER"
^DD("FUNC",55,1)="S %=$S($D(^VA(200,+DUZ,0)):^(0),1:""""),X=$S('DUZ:""??"",X=""#"":DUZ,X=""N"":$P(%,U,1),X=""I"":$P(%,U,2),X=""T"":$S($D(^DIC(3.1,+$P(%,U,9),0)):$P(^(0),U,1),1:""""),X=""NN"":$S($D(^VA(200,+DUZ,.1)):$P(^(.1),U,4),1:""""),1:""??"") K %"
^DD("FUNC",55,3)=1
^DD("FUNC",55,9)="RETURNS USER ATTRIBUTES: #=NUMBER,N=NAME,I=INITIAL,T=TITLE,NN=NICKNAME"
^DD("FUNC",56,0)="VAR"
^DD("FUNC",56,1)="Q:X  Q:$NA(@X)[U  S X=$G(@X)"
^DD("FUNC",56,3)=1
^DD("FUNC",56,9)="RETURNS VALUE OF A LOCAL VARIABLE IF IT'S THERE"
^DD("FUNC",57,0)="DUPLICATED"
^DD("FUNC",57,1)="S X=X"
^DD("FUNC",57,3)=1
^DD("FUNC",57,9)="Takes as argument the name of a CROSS-REFERENCED field.  Returns BOOLEAN value, 1=field value is duplicated in another entry, """"=field value is unique"
^DD("FUNC",58,0)="NOON"
^DD("FUNC",58,1)="N %DT,Y S %DT=""XR"",X=""T@NOON"" D ^%DT S X=+Y"
^DD("FUNC",58,2)="D"
^DD("FUNC",58,3)=0
^DD("FUNC",58,9)="RETURNS THE CURRENT DATE AND THE TIME VALUE OF 12:OO."
^DD("FUNC",59,0)="MID"
^DD("FUNC",59,1)="N %DT,Y S %DT=""XR"",X=""T@MID"" D ^%DT S X=+Y"
^DD("FUNC",59,2)="D"
^DD("FUNC",59,3)=0
^DD("FUNC",59,9)="RETURNS THE CURRENT DATE AND THE TIME VALUE OF 24:00."
^DD("FUNC",60,0)="NUMDATE4"
^DD("FUNC",60,1)="S:X X=$E(X,4,5)_""/""_$E(X,6,7)_""/""_(1700+$E(X,1,3))"
^DD("FUNC",60,2)="X"
^DD("FUNC",60,9)="DATE IN 'MM/DD/YYYY' FORMAT"
^DD("FUNC",61,0)="NUMYEAR4"
^DD("FUNC",61,1)="S:X X=1700+$E(X,1,3)"
^DD("FUNC",61,2)="X"
^DD("FUNC",61,9)="YEAR NUMBER (YYYY) FOR A DATE"
^DD("FUNC",62,0)="FB REF PROV NPI"
^DD("FUNC",62,1)="S X=$$REFNPI^FBCH78(X)"
^DD("FUNC",62,3)=1
^DD("FUNC",62,9)="Returns the NPI for this REFERRING PROVIDER in file 162.4 VA FORM 10-7078"
^DD("FUNC",90,0)="PRIORVALUE"
^DD("FUNC",90,9)="Takes name of an Audited Field.  Returns as a multiple all prior values of the field, most recent first."
^DD("FUNC",91,0)="PRIORDATE"
^DD("FUNC",91,3)="VARIABLE"
^DD("FUNC",91,9)="When it has an argument (Fieldname), returns as a multiple all prior Date/Times of auditing, most recent first.  Without an argument, it is most recent audited Date/Time for the Entry"
^DD("FUNC",92,0)="PRIORUSER"
^DD("FUNC",92,3)="VARIABLE"
^DD("FUNC",92,9)="When it has an argument (Fieldname), returns as a multiple all prior audited Users, most recent first.  Without an argument, it is most recent audited User for the Entry"
^DD("FUNC",93,0)="MAXIMUM"
^DD("FUNC",93,9)="Takes multiple-valued field or expression as argument.  Returns the maximum value of all the multiples."
^DD("FUNC",94,0)="MINIMUM"
^DD("FUNC",94,9)="Takes multiple-valued field or expression as argument.  Returns the minimum value of all the multiples."
^DD("FUNC",95,0)="NEXT"
^DD("FUNC",95,9)="Takes name of a Field. Returns the value that that field has in the next entry or sub-entry."
^DD("FUNC",96,0)="PREVIOUS"
^DD("FUNC",96,9)="Takes name of a Field. Returns the value that that field has in the previous entry or sub-entry."
^DD("FUNC",97,0)="TOTAL"
^DD("FUNC",97,9)="Takes multiple-valued field or expression as argument.  Returns the total of all the multiple values."
^DD("FUNC",98,0)="COUNT"
^DD("FUNC",98,9)="Takes multiple-valued field or expression as argument.  Returns the number of multiples currently existing."
^DD("FUNC",99,0)="LAST"
^DD("FUNC",99,9)="Takes multiple-valued field or expression as argument.  Returns the value of the last multiple."
^DD("FUNC",100,0)="XUSER"
^DD("FUNC",100,1)="S X=$S($D(^VA(200,+DUZ,0)):$P(^(0),U,1),1:"""")"
^DD("FUNC",100,2)="X"
^DD("FUNC",100,3)=0
^DD("FUNC",100,9)="RETURNS THE CURRENT USER'S NAME"
^DD("FUNC",101,0)="XUWORKDAY"
^DD("FUNC",101,1)="D ^XUWORKDY"
^DD("FUNC",101,3)=2
^DD("FUNC",101,9)="Takes 2 date-valued arguments, returns number of days between them, excluding weekends and holidays (uses HOLIDAY file, #40.5)"
^DD("FUNC",102,0)="XUDELTATIME"
^DD("FUNC",102,1)="S X=$S(X&X1:X,1:"""") Q:'X  D H^%DTC S XUS1=%H*86400+%T,X=X1 D H^%DTC S XUS2=%H*86400+%T,X=$S(XUS1>XUS2:XUS1-XUS2,1:XUS2-XUS1)"
^DD("FUNC",102,2)="X"
^DD("FUNC",102,3)=2
^DD("FUNC",102,9)="RETURN THE NUMBER OF SECONDS BETWEEN TWO FILEMAN DATES"
^DD("FUNC",103,0)="XUPRINTSECONDS"
^DD("FUNC",103,1)="S %=X,X=$S(%\86400:%\86400_"" "",1:""""),%=%#86400,X=X_$E(%\3600_""00"",1,2)_"":""_$E(%#3600\60_""00"",1,2)_"":""_$E(%#60_""00"",1,2)"
^DD("FUNC",103,3)=1
^DD("FUNC",103,9)="Return formatted number of seconds"
^DD("FUNC",104,0)="XUGBLSIZE"
^DD("FUNC",104,1)="D:X]"""" ENCOUNT^%ZTBKC"
^DD("FUNC",104,3)=1
^DD("FUNC",104,9)="Return the size of a global root passed in X."
^DD("FUNC",105,0)="XUFILESIZE"
^DD("FUNC",105,1)="S X=$S($D(^DIC(+$O(^DIC(""B"",X,0)),0,""GL"")):^(""GL""),1:"""") D:X]"""" ENCOUNT^%ZTBKC"
^DD("FUNC",105,3)=1
^DD("FUNC",105,9)="Return the size of a VA Fileman file."
^DD("FUNC",106,0)="XUFAA"
^DD("FUNC",106,1)="D PRFAA^XUAPURGE"
^DD("FUNC",106,2)="X"
^DD("FUNC",106,3)=2
^DD("FUNC",106,9)="To decode the text of FAA."
^DD("FUNC",107,0)="XUDASH"
^DD("FUNC",107,1)="S %=$L(X),%1=$X,$P(%2,""-"",%)=""-"" W X,!,?%1,%2 K %1,%2 S X="""""
^DD("FUNC",107,3)=1
^DD("FUNC",107,9)="Write an argument and on the next line write DASHes under it."
^DD("FUNC",108,0)="XUDOTTAB"
^DD("FUNC",108,1)="S %=$X,%1=$S(X>%:X-%,1:0),%="""",$P(%,""."",%1)=""."" W %,X1 K %,%1 S (X,X1)="""""
^DD("FUNC",108,3)=2
^DD("FUNC",108,9)="Writes dots untill $X equals the 2nd argument."
^DD("FUNC",109,0)="XUBAR"
^DD("FUNC",109,1)="S X3="""",$P(X3,""*"",$S(X2>X1:X1,1:X2)/X1*X)="""",X4=$X+X W ""|"",X3,?X4,""| "",X2 S X="""""
^DD("FUNC",109,3)=3
^DD("FUNC",109,9)="WRITE A BAR GRAPH. XUBAD(VALUE,MAX VALUE,BAR WIDTH) will use 3 char plus value."
^DD("FUNC",110,0)="XUVT"
^DD("FUNC",110,1)="X ""F I=$Y:1:X W !"" S X="""""
^DD("FUNC",110,3)=1
^DD("FUNC",110,9)="Vertical tab, Move to line (arg)"
^DD("FUNC",110,10)="W"
^DD("FUNC",111,0)="XUTIME"
^DD("FUNC",111,1)="S X=X_""000000"",Y(1)=$E(X,9,10),Y(3)=$E(X,11,12),Y(4)=$E(X,13,14),Y(2)=$S($E(X,8,12)>.12:Y(1)-12,1:Y(1)),X="""",Y(5)="""" S:X1[""H"" X=$S(X1[24:Y(1),1:Y(2))_"":"" S:X1[""M"" X=X_Y(3) S:X1[""S"" X=X_Y(4)"
^DD("FUNC",111,3)=2
^DD("FUNC",111,9)="Allow the print of time in many ways XUTIME(""HMS24"",date)"
^DD("FUNC",112,0)="XUFIELDNAME"
^DD("FUNC",112,1)="Q:'$L(X1)!'$L(X)  S X=$P(^DD(X1,X,0),""^"",1)"
^DD("FUNC",112,2)="X"
^DD("FUNC",112,3)=2
^DD("FUNC",112,9)="Given a file and field number return the field name."
^DD("FUNC",113,0)="XUFMTOEX"
^DD("FUNC",113,1)="S X=$$FMTE^XLFDT(X1,X)"
^DD("FUNC",113,2)="X"
^DD("FUNC",113,3)=2
^DD("FUNC",113,9)="This Function calls the Extrinsic FMTE^XLFDT to convert a VA FM date to external form."
^DD("FUNC",114,0)="XMVCODE"
^DD("FUNC",114,1)="S XMVT=X5,XMVL=X4,XMVD=X3,XMVSP=X2,XMVTRIM=X1,XMVIGN=X D ^XMVCODE S X=XMVCD"
^DD("FUNC",114,2)="X"
^DD("FUNC",114,3)=6
^DD("FUNC",114,9)="Create extract code"
^DD("FUNC",115,0)="XMV-ALL-HERE"
^DD("FUNC",115,1)="S X=(X5]""""&(X4]"""")&(X3]"""")&(X2]"""")&(X1]"""")&(X]""""))"
^DD("FUNC",115,2)="X"
^DD("FUNC",115,3)=6
^DD("FUNC",115,9)="""1"" if the arguments are all non-null; ""0"" otherwise."
^DD("FUNC",116,0)="XTLN"
^DD("FUNC",116,1)="S %X=X D LN^XTFN S X=%LN"
^DD("FUNC",116,3)=1
^DD("FUNC",116,9)="XTLN(X) = Log e (X)"
^DD("FUNC",117,0)="XTEXP"
^DD("FUNC",117,1)="S %X=X D EXP^XTFN S X=%E"
^DD("FUNC",117,3)=1
^DD("FUNC",117,9)="XTEXP(X) = e to the power X"
^DD("FUNC",118,0)="XTPWR"
^DD("FUNC",118,1)="S %Y=X,%X=X1 D PWR^XTFN S X=%P"
^DD("FUNC",118,3)=2
^DD("FUNC",118,9)="XTPWR(X,Y) = X to the Y power"
^DD("FUNC",119,0)="XTLOG"
^DD("FUNC",119,1)="S %X=X D LOG^XTFN S X=%L"
^DD("FUNC",119,3)=1
^DD("FUNC",119,9)="XTLOG(X) = Log 10 (X)"
^DD("FUNC",120,0)="XTTAN"
^DD("FUNC",120,1)="S %X=X D TAN^XTFN S X=%Y"
^DD("FUNC",120,3)=1
^DD("FUNC",120,9)="XTTAN(X) = Tangent of X radians"
^DD("FUNC",121,0)="XTSIN"
^DD("FUNC",121,1)="S %X=X D SIN^XTFN S X=%Y"
^DD("FUNC",121,3)=1
^DD("FUNC",121,9)="XTSIN(X) = Sin of X radians"
^DD("FUNC",122,0)="XTCOS"
^DD("FUNC",122,1)="S %Y=X D COS^XTFN S X=%Y"
^DD("FUNC",122,3)=1
^DD("FUNC",122,9)="XTCOS(X) = Cosin of X radians"
^DD("FUNC",123,0)="XTDTR"
^DD("FUNC",123,1)="S %X=X D DTR^XTFN S X=%X"
^DD("FUNC",123,3)=1
^DD("FUNC",123,9)="Convert X degrees to radians"
^DD("FUNC",124,0)="XTRTD"
^DD("FUNC",124,1)="S %X=X D RTD^XTFN S X=%X"
^DD("FUNC",124,3)=1
^DD("FUNC",124,9)="Convert X radians to degrees"
^DD("FUNC",125,0)="XTRTEST"
^DD("FUNC",125,1)="X ^%ZOSF(""TEST"") S X=$T"
^DD("FUNC",125,3)=1
^DD("FUNC",125,9)="Tests if the routine passed as an argument is present in the current account."
^DD("FUNC",126,0)="XTBASE8"
^DD("FUNC",126,1)="S X1=8 D CNV^XTBASE S X=Y"
^DD("FUNC",126,3)=1
^DD("FUNC",126,9)="Converts a decimal number to octal."
^DD("FUNC",127,0)="XTEST"
^DD("FUNC",127,1)="S SUM=X,X1=D0 S:$D(^UTILITY($J,9999,X1))=0 ^UTILITY($J,9999,X1)=0 S ^UTILITY($J,9999,X1)=^UTILITY($J,9999,X1)+SUM S X=^UTILITY($J,9999,X1)"
^DD("FUNC",127,2)="X"
^DD("FUNC",127,3)=1
^DD("FUNC",127,9)="CALCULATES SUM WHEN USED IN SORT FUNCTION; CUMULATIVE TOTAL IN PRINT ROUTINE"
^DD("FUNC",128,0)="ENGSPACE"
^DD("FUNC",128,1)="S X1=$E(X,1) I $A(X1)<65 S X=""A""_X I $A(X1)>65 S X=X"
^DD("FUNC",128,9)="Triggering room # field"
^DD("FUNC",129,0)="GMTS COMPONENT NAME"
^DD("FUNC",129,1)="S X=$S($L($P(DIP(1),U,9)):$P(DIP(1),U,9),1:$P(DIP(1),U))"
^DD("FUNC",129,2)="X"
^DD("FUNC",129,3)=1
^DD("FUNC",129,9)="Writes HEADER NAME or DEFAULT HEADER NAME or COMPONENT NAME"
^DD("FUNC",130,0)="DGWARDWHEN"
^DD("FUNC",130,1)="S DGT=$$DGT^DGPMSTAT(X),DFN=D0 D ^DGPMSTAT S X=$S($D(^DIC(42,+DG1,0)):$P(^(0),U,1),1:"""")"
^DD("FUNC",130,2)="X"
^DD("FUNC",130,3)=1
^DD("FUNC",130,9)="Returns the ward location for the specified date/time. If no time is given, location will be as of 12:01am.  Any VA Fileman-acceptable format may be used and must be in quotes, eg: DGWARDWHEN(""4/1/85@11"")."
^DD("FUNC",131,0)="DGFYD"
^DD("FUNC",131,1)="S X1=X,X2=$E(X1,1,3)_""1001"" S:+$E(X1,4,5)<10 X2=X2-10000 D D^%DTC S X=X+1"
^DD("FUNC",131,2)="X"
^DD("FUNC",131,3)=1
^DD("FUNC",131,9)="FISCAL DAY"
^DD("FUNC",132,0)="DGNUMINMNTH"
^DD("FUNC",132,1)="S DG1=X,X=0 X ""F I=1:1:31 S:$E(DG1,I) X=X+1"""
^DD("FUNC",132,3)=1
^DD("FUNC",132,9)="For Inpatient days totals the number in a month"
^DD("FUNC",133,0)="DGDAYSINMONTH"
^DD("FUNC",133,1)="S X1=X,X=+$E(X,4,5),X=$S(""^1^3^5^7^8^10^12^""[(U_X_U):31,X'=2:30,$E(X1,1,3)#4:28,1:29)"
^DD("FUNC",133,2)="X"
^DD("FUNC",133,3)=1
^DD("FUNC",133,9)="DAYS IN MONTH"
^DD("FUNC",134,0)="DGAGE"
^DD("FUNC",134,1)="S X=$S($D(^DPT(D0,0)):+$P(^(0),""^"",3),1:0) S:'X!('Y) X=0 S:X X=$E(Y,1,3)-$E(X,1,3)-($E(Y,4,7)<$E(X,4,7))"
^DD("FUNC",134,2)="X"
^DD("FUNC",134,9)="FOR A PATIENT, TAKES THE ARGUMENT (DATE) AND RETURNS THE AGE OF THE PATIENT ON THAT DATE, I.E., 'DGAGE(DATE OF DEATH)' WOULD RETURN THE PATIENTS AGE ON HIS DATE OF DEATH."
^DD("FUNC",135,0)="DGPM WARD AT DISCHARGE"
^DD("FUNC",135,1)="S X1=X,X="""" I $D(^DGPM(+X1,0)) S X2=+$P(^(0),U,3) X ""F %=0:0 S %=$O(^DGPM(""""APMV"""",X2,X1,%)) Q:'%  I $D(^DGPM(+$O(^(%,0)),0)),$D(^DIC(42,+$P(^(0),U,6),0)) S X=$P(^(0),U) Q"" K X1,X2"
^DD("FUNC",135,3)=1
^DD("FUNC",135,9)="Determines ward of patient at discharge for admission(X)."
^DD("FUNC",136,0)="DGMT LAST MEANS TEST"
^DD("FUNC",136,1)="S X1=$$LST^DGMTU(D0,DT),Y=$P(X1,U,2) D DD^%DT S X=Y"
^DD("FUNC",137,0)="SDNUMBEROFDAY"
^DD("FUNC",137,1)="D H^%DTC S X=%Y"
^DD("FUNC",138,0)="SD PROCEDURE REIMBURSEMENT"
^DD("FUNC",138,1)="S X="""""
^DD("FUNC",138,2)="X"
^DD("FUNC",138,3)=0
^DD("FUNC",138,9)="Function is no longer supported."
^DD("FUNC",139,0)="SD PROCEDURE RAM GROUP"
^DD("FUNC",139,1)="S X="""""
^DD("FUNC",139,2)="X"
^DD("FUNC",139,3)=0
^DD("FUNC",139,9)="Function is no longer supported."
^DD("FUNC",140,0)="SD PROCEDURE STATUS"
^DD("FUNC",140,1)="D STATUS^SDAMBAE4"
^DD("FUNC",140,2)="X"
^DD("FUNC",140,3)=2
^DD("FUNC",140,9)="Returns status value for procedure (X) on date (X1)."
^DD("FUNC",141,0)="SD PROCEDURE COST"
^DD("FUNC",141,1)="S X="""""
^DD("FUNC",141,2)="X"
^DD("FUNC",141,3)=0
^DD("FUNC",141,9)="Function is no longer supported."
^DD("FUNC",142,0)="IB CPT BILLING CHARGE"
^DD("FUNC",142,1)="S IBCDX=X,IBDTX=X1 D FCC^IBEFUNC1 S X=IBCHGX K IBCDX,IBDTX,IBCHGX"
^DD("FUNC",142,3)=2
^DD("FUNC",142,9)="Returns the charge for procedure (X) on date (X1)."
^DD("FUNC",143,0)="IB CPT BILLING STATUS"
^DD("FUNC",143,1)="S IBCDX=X,IBDTX=X1 D FCBS^IBEFUNC1 S X=$P(IBSTX,""^"",2) K IBCDX,IBDTX,IBSTX"
^DD("FUNC",143,3)=2
^DD("FUNC",143,9)="Returns the billing status for procedure (X) on date (X1)."
^DD("FUNC",144,0)="IBNEXTAPPT"
^DD("FUNC",144,1)="S X=$$DAT1^IBOUTL($O(^DPT(D0,""S"",DT)))"
^DD("FUNC",144,2)="X"
^DD("FUNC",144,3)=1
^DD("FUNC",144,9)="Determines next appointment date from today.  Use only on files where D0 = dfn"
^DD("FUNC",145,0)="PRCA BALANCE"
^DD("FUNC",145,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:0) S:X X=$G(^PRCA(430,X,7)),X=$J($P(X,""^"")+$P(X,""^"",2)+$P(X,""^"",3)+$P(X,""^"",4)+$P(X,""^"",5),0,2)"
^DD("FUNC",145,2)="X"
^DD("FUNC",145,3)=0
^DD("FUNC",145,9)="Current balance of bill"
^DD("FUNC",146,0)="PRCA AR PHONE"
^DD("FUNC",146,1)="S X=$P($$SADD^RCFN01(4),U,7)"
^DD("FUNC",146,2)="X"
^DD("FUNC",146,3)=0
^DD("FUNC",146,9)="Returns the phone number of the accounts receivable section"
^DD("FUNC",147,0)="PRCA AR HOURS"
^DD("FUNC",147,1)="S X=$P($$SADD^RCFN01(4),U,8)"
^DD("FUNC",147,2)="X"
^DD("FUNC",147,3)=0
^DD("FUNC",147,9)="Returns the hours of operation for the accounts receivable section"
^DD("FUNC",148,0)="PRCA ADMIN"
^DD("FUNC",148,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:"""") S:X X=$P($G(^PRCA(430,+X,0)),""^"",10) S:X X=$J(+$$ADM^RCMSFN01(X),0,2)"
^DD("FUNC",148,2)="X"
^DD("FUNC",148,3)=0
^DD("FUNC",148,9)="Returns the admin charge for a bill"
^DD("FUNC",149,0)="PRCA INTEREST"
^DD("FUNC",149,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:"""") S:X X=$P($G(^PRCA(430,+X,0)),""^"",10) S:X X=+$$INT^RCMSFN01(X)*100"
^DD("FUNC",149,2)="X"
^DD("FUNC",149,3)=0
^DD("FUNC",149,9)="Returns the rate of interest for a bill"
^DD("FUNC",150,0)="PRCA PENALTY"
^DD("FUNC",150,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:"""") S:X X=$P($G(^PRCA(430,+X,0)),""^"",10) S:X X=+$$PEN^RCMSFN01(X)*100"
^DD("FUNC",150,2)="X"
^DD("FUNC",150,3)=0
^DD("FUNC",150,9)="Returns the rate of penalty for a bill."
^DD("FUNC",151,0)="PRCA RESULTING"
^DD("FUNC",151,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:"""") S:X X=$P($G(^PRCA(430,X,0)),""^"",5) S:X X=$P($G(^PRCA(430.6,X,0)),""^"",2)"
^DD("FUNC",151,2)="X"
^DD("FUNC",151,3)=0
^DD("FUNC",151,9)="Bill resulting from reason"
^DD("FUNC",152,0)="PRCA IRS TOTAL"
^DD("FUNC",152,1)="S X=$S($G(RCIRSTOT):$J(RCIRSTOT,0,2),1:""       "")"
^DD("FUNC",152,2)="X"
^DD("FUNC",152,3)=0
^DD("FUNC",152,9)="Used to fill in the total amount due to IRS in the IRS Offset letter.  When testing letter thru menu option, blanks are inserted in place of the total value."
^DD("FUNC",152,10)="W"
^DD("FUNC",153,0)="PRCA LAST ACTIVITY"
^DD("FUNC",153,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:"""") S:X X=$$ACT^PRCADEL(X) S:X<0 X="""""
^DD("FUNC",153,2)="D"
^DD("FUNC",153,3)=0
^DD("FUNC",153,9)="Return last date of activity for a bill"
^DD("FUNC",154,0)="PSODX"
^DD("FUNC",154,1)="S PSODX=X S:PSODX="""" X1="""" W:$X ""   "" W:($X+$L(PSODX)+$L(X1))>IOM ! W X1 K PSODX"
^DD("FUNC",154,2)="O"
^DD("FUNC",154,3)=2
^DD("FUNC",154,9)="Call this function by using PSODX(field label,field name). e.g. PSODX(""DRUG: "",DRUG).  Prints a carriage return if the label and field are too long to print on the current line."
^DD("FUNC",155,0)="RT RECORDS CHARGED"
^DD("FUNC",155,1)="D COUNT^RTDPA3"
^DD("FUNC",155,2)="X"
^DD("FUNC",155,3)=1
^DD("FUNC",155,9)="Use to count the number of records charged to Borrower"
^DD("FUNC",156,0)="PSGW BO LOCATION"
^DD("FUNC",156,1)="S X=$P(^PSI(58.3,D0,0),""^"",1),DIC(0)=""N"",DIC=""^PSI(58.1,D1,1,"" D ^DIC Q:Y<0  S X=$S($D(^PSI(58.1,D1,1,+Y,0)):$P(^(0),""^"",8),1:"""")"
^DD("FUNC",156,3)=0
^DD("FUNC",156,9)="Lookup and then print the AOU item location for a backordered item"
^DD("FUNC",157,0)="VAQ DASH SSN"
^DD("FUNC",157,1)="Q:'$D(X)  Q:(X'?9N)!(X'?9N1""P"")  S X=$E(X,1,3)_""-""_$E(X,4,5)_""-""_$E(X,6,10)"
^DD("FUNC",157,2)="X"
^DD("FUNC",157,3)=1
^DD("FUNC",157,9)="Properly formats an SSN with dashes (XXXXXXXXX -> XXX-XX-XXXX)"
^DD("FUNC",158,0)="VAQ FORMAT DATE"
^DD("FUNC",158,1)="Q:'$D(X)  Q:(X="""")  S X=$E(X,4,5)_""-""_$E(X,6,7)_""-""_(+$E(X,1,3)+1700)"
^DD("FUNC",158,2)="X"
^DD("FUNC",158,3)=1
^DD("FUNC",158,9)="Converts a FileMan date to MM-DD-YYYY"
^DD("FUNC",159,0)="VAQ FORMAT TIME"
^DD("FUNC",159,1)="Q:'$D(X)  Q:($P(X,""."",2)="""")  S X=$P(X,""."",2)_""000000"",X=(+$E(X,1,2))_"":""_$E(X,3,4)_"" ""_$S((+$E(X,1,6))>115959:""PM"",1:""AM"") S:(+$P(X,"":"",1))=0 $P(X,"":"",1)=12"
^DD("FUNC",159,2)="X"
^DD("FUNC",159,3)=1
^DD("FUNC",159,9)="Converts a FileMan time to HH:mm AM (or PM).  Full FileMan date/time must be passed."
^DD("FUNC",160,0)="VAQ GET LIFE"
^DD("FUNC",160,1)="S X=+$O(^VAT(394.81,0)) S X=+$G(^VAT(394.81,X,""LIFE"")) S:(X=0) X=30 I 1"
^DD("FUNC",160,2)="X"
^DD("FUNC",160,3)=0
^DD("FUNC",160,9)="Retrieves allowable age for a PDX Transaction (defaults to 30)"
^DD("FUNC",165,0)="QARNAME"
^DD("FUNC",165,1)="D ENNAME^QARUTL"
^DD("FUNC",165,2)="X"
^DD("FUNC",165,3)=1
^DD("FUNC",165,9)="Convert `LAST,FIRST' name to `First Last' name"
^DD("FUNC",166,0)="YSPARAM"
^DD("FUNC",166,1)="S X=$S(X=""""!(X'?.ANP):"""",$D(YSDIPA($E(X,1,30))):YSDIPA($E(X,1,30)),1:"""")"
^DD("FUNC",166,9)="RETURNS VALUE OF PARAMETER NAMED BY ARGUMENT"
^DD("FUNC",167,0)="YSTIME"
^DD("FUNC",167,1)="I $P(X,""."",2) S X=$E($P(X,""."",2)_""0000"",1,4),%=X>1159 S:X>1259 X=X-1200 S X=X\100_"":""_$E(X#100+100,2,3)_"" ""_$E(""AP"",%+1)_""M"""
^DD("FUNC",168,0)="YSCENTER"
^DD("FUNC",168,1)="S X=$J("""",$S($D(IOM):IOM,1:80)-$L(X)\2-$X)_X"
^DD("FUNC",168,10)="W"
^DD("FUNC",169,0)="RACAT"
^DD("FUNC",169,1)="D ^RAUTL1"
^DD("FUNC",170,0)="IMRVAL"
^DD("FUNC",170,1)="S X=$$VAL^IMRCDCPX(X1,X)"
^DD("FUNC",170,3)=2
^DD("FUNC",170,9)="IMRVAL(X1,X)=""|N|"" (WHERE N IS VALUE X) IF X IS VALUE OF FIELD X1 IN FILE 158 or =""| |"" IF X IS NOT THE VALUE OF FIELD X1"
^DD("FUNC",171,0)="IMRDAT"
^DD("FUNC",171,1)="S X=$$DAT^IMRCDCPX(X)"
^DD("FUNC",171,3)=1
^DD("FUNC",171,9)="RETURNS DATE AS 'MM  YY' FOR PRINTING"
^DD("FUNC",172,0)="PRCA LITIGATION FEE"
^DD("FUNC",172,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:"""") S:X X=$P($G(^PRCA(430,+X,0)),""^"",10) S:X X=$J(+$$LIT^RCMSFN01(X),0,2)"
^DD("FUNC",172,2)="X"
^DD("FUNC",172,3)=0
^DD("FUNC",172,9)="Returns the current annual Litigation Fee"
^DD("FUNC",173,0)="ONCOLASTNAME"
^DD("FUNC",173,1)="S X=$P(X,"","",1)"
^DD("FUNC",173,3)=0
^DD("FUNC",173,9)="SELECTS LAST NAME"
^DD("FUNC",174,0)="ONCOFIRSTNAME LASTNAME"
^DD("FUNC",174,1)="S X=$$FLNAME^ONCFUNC(X)"
^DD("FUNC",174,3)=0
^DD("FUNC",174,9)="REORDERS NAME to first name last name"
^DD("FUNC",175,0)="ONCO.SPACE"
^DD("FUNC",175,1)="S X=X_$C(10,10)"
^DD("FUNC",175,3)=1
^DD("FUNC",175,9)="2 LINES AFTER DATA"
^DD("FUNC",176,0)="ONCODAMSTAT"
^DD("FUNC",176,1)="S X=$S(X=4:1,X=5:2,X=6:1,X=7:2,X=9:9,1:X),X=$S(X=1:""No evidence this cancer"",X=2:""Evidence of this cancer"",X=9:""Unknown this cancer present"",1:""Not stated"")"
^DD("FUNC",176,3)=1
^DD("FUNC",176,9)="Converts MRS tumor statuses to conform to the DAM."
^DD("FUNC",177,0)="RMPRNUM"
^DD("FUNC",177,1)="S X=$P(X,""-"",3)"
^DD("FUNC",178,0)="RMPRS"
^DD("FUNC",178,1)="S X=$S(X=""M"":""Mr."",X=""F"":""Ms."",1:"""")"
^DD("FUNC",178,9)="letter"
^DD("FUNC",179,0)="RMPRNAME"
^DD("FUNC",179,1)="S X=$P(^RMPR(665,DA,0),""^"",2)_$P(^RMPR(665,DA,0),""^"",1)"
^DD("FUNC",179,9)="PUT LAST NAME LAST FOR PROST LETTERS"
^DD("FUNC",180,0)="QAMDFN"
^DD("FUNC",180,1)="S ^TMP(""QAM"",$J,+$O(^DPT(""B"",X,0)))=X"
^DD("FUNC",180,2)="X"
^DD("FUNC",180,3)=1
^DD("FUNC",180,9)="Create TMP global of patient IEN's."
^DD("FUNC",182,0)="TIU UNKNOWN DATA"
^DD("FUNC",182,1)="S:X="""" X=""UNKNOWN"""
^DD("FUNC",182,2)="X"
^DD("FUNC",182,3)=1
^DD("FUNC",182,9)="Returns ""UNKNOWN"" when no field is empty"
^DD("FUNC",183,0)="TIU NAME FORMAT"
^DD("FUNC",183,1)="S X=$$NAME^TIULS(X,X1)"
^DD("FUNC",183,2)="X"
^DD("FUNC",183,3)=2
^DD("FUNC",183,9)="Formats names as TIU NAME FORMAT(""LAST, FIRST MI"",NAME)"
^DD("FUNC",184,0)="TIU VISIT ID"
^DD("FUNC",184,1)="S X=$$IEN2VID^VSIT(X)"
^DD("FUNC",184,2)="X"
^DD("FUNC",184,3)=1
^DD("FUNC",184,9)="RETURNS VISIT ID BASED ON VISIT FILE POINTER"
^DD("FUNC",185,0)="SCENI LASTFOUR"
^DD("FUNC",185,1)="S X=$S($E(X,$L(X))=""P"":$E(X,$L(X)-4,$L(X)),1:$E(X,$L(X)-3,$L(X)))"
^DD("FUNC",185,3)=1
^DD("FUNC",185,9)="EXTRACTS LAST FOUR FROM SSN"
^DD("FUNC",188,0)="ANRVPTCOUNTY"
^DD("FUNC",188,1)="S X1=$S($D(^DPT(D0,.11)):^(.11),1:""""),X=$S($D(^DIC(5,+$P(X1,""^"",5),1,+$P(X1,""^"",7),0)):$P(^(0),""^"",1),1:"""")"
^DD("FUNC",188,2)="X"
^DD("FUNC",188,9)="COUNTY NAME"
^DD("FUNC",189,0)="SCRPWDATA"
^DD("FUNC",189,1)="S X=$$DATA^SCRPW21(X)"
^DD("FUNC",189,3)=1
^DD("FUNC",189,9)="From within the OUTPATIENT ENCOUNTER file (#409.68), returns any of the data elements defined in the ACRP REPORT TEMPLATE PARAMETER file (#409.92)."
^DD("FUNC",190,0)="XM NEXT SEQUENCE NUMBER"
^DD("FUNC",190,1)="S X=$O(^XMB(3.7,DA(2),2,DA(1),1,""C"",""""),-1)+1"
^DD("FUNC",190,3)=0
^DD("FUNC",190,9)="Gets the next sequence number in the basket for a new message"
^DD("FUNC",191,0)="XLFMTNAME"
^DD("FUNC",191,1)="N XUNAME S XUNAME(""FILE"")=X4,XUNAME(""IENS"")=X2_$E("","",($E(X2,$L(X2))'="","")),XUNAME(""FIELD"")=X3 S X=$$NAMEFMT^XLFNAME(.XUNAME,X1,X)"
^DD("FUNC",191,2)="X"
^DD("FUNC",191,3)=5
^DD("FUNC",191,9)="Format NEW PERSON file name for printing"
^DD("FUNC",191,10)=""
^DD("FUNC",192,0)="PRCA PRINCIPAL BALANCE"
^DD("FUNC",192,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:0) S:X X=$G(^PRCA(430,X,7)),X=$J($P(X,""^""),0,2)"
^DD("FUNC",192,2)="X"
^DD("FUNC",192,3)=0
^DD("FUNC",192,9)="Current principal of bill"
^DD("FUNC",193,0)="PRCA INTEREST BALANCE"
^DD("FUNC",193,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:0) S:X X=$G(^PRCA(430,X,7)),X=$J($P(X,""^"",2),0,2)"
^DD("FUNC",193,2)="X"
^DD("FUNC",193,3)=0
^DD("FUNC",193,9)="Current interest of bill"
^DD("FUNC",194,0)="PRCA ADMIN BALANCE"
^DD("FUNC",194,1)="S X=$S($G(PRCABN):PRCABN,$G(D0):D0,1:0) S:X X=$G(^PRCA(430,X,7)),X=$J($P(X,""^"",3)+$P(X,""^"",4)+$P(X,""^"",5),0,2)"
^DD("FUNC",194,2)="X"
^DD("FUNC",194,3)=0
^DD("FUNC",194,9)="Current administrative charges of bill"
^DD("FUNC",206,0)="RORPTSTATUS"
^DD("FUNC",206,1)="S X=$S(X>0:+$P($G(^RORDATA(798,+X,0)),U),1:0),X=$S(X'>0:9,$P($G(^RORDATA(798.4,X,1)),U,4)>0:2,1:1)"
^DD("FUNC",206,3)=1
^DD("FUNC",206,9)="Returns patient's status (1-Alive, 2-Dead, 9-Unknown)"
^DD("FUNC",207,0)="XUSEC ISO ARTIFICIAL"
^DD("FUNC",207,1)="S X=$S($E($P($G(^VA(200,D0,1)),""^"",9),1,5)[""00000"":1,1:0)"
^DD("FUNC",207,2)="X"
^DD("FUNC",207,3)=0
^DD("FUNC",207,9)="WILL BRING A 1 BACK IF THIS PERSON HAS 5 LEADING ZEROS IN THEIR SSN OR A 0 IF NOT"
^DD("FUNC",208,0)="XUSEC ISO VISITED"
^DD("FUNC",208,1)="S X=+$$ACTIVE^XUSER(D0)"
^DD("FUNC",208,2)="X"
^DD("FUNC",208,3)=0
^DD("FUNC",208,9)="Will bring back a 1 if this person is an active user on the system."
^DD("FUNC",209,0)="XUSEC ISO ZZD OUT"
^DD("FUNC",209,1)="S X=$E($P($G(^VA(200,D0,0)),""^"",1),1,2),X=$S(X[""ZZ"":1,X[""zz"":1,X[""XX"":1,X[""xx"":1,1:0)"
^DD("FUNC",209,2)="X"
^DD("FUNC",209,3)=0
^DD("FUNC",209,9)="BRINGS BACK A 1 IF NAME STARTS WILL ZZ OR zz OR XX OR xx."
^DD("FUNC",210,0)="LRRESULT"
^DD("FUNC",210,1)="S X=$$GETLAB^LRFRSLT(X,X1,X2,X3)"
^DD("FUNC",210,3)=4
^DD("FUNC",210,9)="Lab result retriever -- used with the format of LRFRSLT(a,b,c,d) where a is referenced as INTERNAL(PATIENT), b is the specimen file 61 IEN, c is the lab file 60 test IEN, and d is the number of days to search back"
^DD("FUNC",211,0)="IBUC ELIG GROUP"
^DD("FUNC",211,1)="S X=$$GETELGP^IBECEA36(X,X1)"
^DD("FUNC",211,3)=2
^DD("FUNC",211,9)="Get eligibility group for this patient on this event date."
^DD("FUNC","B","ABS",8)=""
^DD("FUNC","B","ANRVPTCOUNTY",188)=""
^DD("FUNC","B","BETWEEN",43)=""
^DD("FUNC","B","BLANK",31)=""
^DD("FUNC","B","BREAKABLE",18)=""
^DD("FUNC","B","CENTER",15)=""
^DD("FUNC","B","CLOSE",7)=""
^DD("FUNC","B","COUNT",98)=""
^DD("FUNC","B","DATE",5)=""
^DD("FUNC","B","DAYOFWEEK",6)=""
^DD("FUNC","B","DGAGE",134)=""
^DD("FUNC","B","DGDAYSINMONTH",133)=""
^DD("FUNC","B","DGFYD",131)=""
^DD("FUNC","B","DGMT LAST MEANS TEST",136)=""
^DD("FUNC","B","DGNUMINMNTH",132)=""
^DD("FUNC","B","DGPM WARD AT DISCHARGE",135)=""
^DD("FUNC","B","DGWARDWHEN",130)=""
^DD("FUNC","B","DOUBLE-SPACE",29)=""
^DD("FUNC","B","DUP",50)=""
^DD("FUNC","B","DUPLICATED",57)=""
^DD("FUNC","B","ENGSPACE",128)=""
^DD("FUNC","B","FB REF PROV NPI",62)=""
^DD("FUNC","B","FILE",54)=""
^DD("FUNC","B","GMTS COMPONENT NAME",129)=""
^DD("FUNC","B","IB CPT BILLING CHARGE",142)=""
^DD("FUNC","B","IB CPT BILLING STATUS",143)=""
^DD("FUNC","B","IBNEXTAPPT",144)=""
^DD("FUNC","B","IBUC ELIG GROUP",211)=""
^DD("FUNC","B","IMRDAT",171)=""
^DD("FUNC","B","IMRVAL",170)=""
^DD("FUNC","B","INDENT",34)=""
^DD("FUNC","B","INTERNAL",9)=""
^DD("FUNC","B","IOM",49)=""
^DD("FUNC","B","LAST",99)=""
^DD("FUNC","B","LOWERCASE",14)=""
^DD("FUNC","B","LRRESULT",210)=""
^DD("FUNC","B","MAX",10)=""
^DD("FUNC","B","MAXIMUM",93)=""
^DD("FUNC","B","MID",59)=""
^DD("FUNC","B","MIN",11)=""
^DD("FUNC","B","MINIMUM",94)=""
^DD("FUNC","B","MINUTES",40)=""
^DD("FUNC","B","MODULO",41)=""
^DD("FUNC","B","MONTH",3)=""
^DD("FUNC","B","MONTHNAME",32)=""
^DD("FUNC","B","NEXT",95)=""
^DD("FUNC","B","NOBLANKLINE",45)=""
^DD("FUNC","B","NOON",58)=""
^DD("FUNC","B","NOW",24)=""
^DD("FUNC","B","NOWRAP",38)=""
^DD("FUNC","B","NUMDATE",22)=""
^DD("FUNC","B","NUMDATE4",60)=""
^DD("FUNC","B","NUMDAY",20)=""
^DD("FUNC","B","NUMMONTH",19)=""
^DD("FUNC","B","NUMYEAR",21)=""
^DD("FUNC","B","NUMYEAR4",61)=""
^DD("FUNC","B","ONCO.SPACE",175)=""
^DD("FUNC","B","ONCODAMSTAT",176)=""
^DD("FUNC","B","ONCOFIRSTNAME LASTNAME",174)=""
^DD("FUNC","B","ONCOLASTNAME",173)=""
^DD("FUNC","B","PADRIGHT",53)=""
^DD("FUNC","B","PAGE",26)=""
^DD("FUNC","B","PAGEFEED",17)=""
^DD("FUNC","B","PAGESTART",37)=""
^DD("FUNC","B","PARAM",48)=""
^DD("FUNC","B","PRCA ADMIN",148)=""
^DD("FUNC","B","PRCA ADMIN BALANCE",194)=""
^DD("FUNC","B","PRCA AR HOURS",147)=""
^DD("FUNC","B","PRCA AR PHONE",146)=""
^DD("FUNC","B","PRCA BALANCE",145)=""
^DD("FUNC","B","PRCA INTEREST",149)=""
^DD("FUNC","B","PRCA INTEREST BALANCE",193)=""
^DD("FUNC","B","PRCA IRS TOTAL",152)=""
^DD("FUNC","B","PRCA LAST ACTIVITY",153)=""
^DD("FUNC","B","PRCA LITIGATION FEE",172)=""
^DD("FUNC","B","PRCA PENALTY",150)=""
^DD("FUNC","B","PRCA PRINCIPAL BALANCE",192)=""
^DD("FUNC","B","PRCA RESULTING",151)=""
^DD("FUNC","B","PREVIOUS",96)=""
^DD("FUNC","B","PRIORDATE",91)=""
^DD("FUNC","B","PRIORUSER",92)=""
^DD("FUNC","B","PRIORVALUE",90)=""
^DD("FUNC","B","PSGW BO LOCATION",156)=""
^DD("FUNC","B","PSODX",154)=""
^DD("FUNC","B","QAMDFN",180)=""
^DD("FUNC","B","QARNAME",165)=""
^DD("FUNC","B","RACAT",169)=""
^DD("FUNC","B","RANGEDATE",46)=""
^DD("FUNC","B","REPLACE",23)=""
^DD("FUNC","B","REVERSE",12)=""
^DD("FUNC","B","RIGHT-JUSTIFY",28)=""
^DD("FUNC","B","RMPRNAME",179)=""
^DD("FUNC","B","RMPRNUM",177)=""
^DD("FUNC","B","RMPRS",178)=""
^DD("FUNC","B","RORPTSTATUS",206)=""
^DD("FUNC","B","RT RECORDS CHARGED",155)=""
^DD("FUNC","B","SCENI LASTFOUR",185)=""
^DD("FUNC","B","SCRPWDATA",189)=""
^DD("FUNC","B","SD PROCEDURE COST",141)=""
^DD("FUNC","B","SD PROCEDURE RAM GROUP",139)=""
^DD("FUNC","B","SD PROCEDURE REIMBURSEMENT",138)=""
^DD("FUNC","B","SD PROCEDURE STATUS",140)=""
^DD("FUNC","B","SDNUMBEROFDAY",137)=""
^DD("FUNC","B","SET",42)=""
^DD("FUNC","B","SETPAGE",33)=""
^DD("FUNC","B","SETPARAM",47)=""
^DD("FUNC","B","SETTAB",27)=""
^DD("FUNC","B","SINGLE-SPACE",30)=""
^DD("FUNC","B","SITENUMBER",35)=""
^DD("FUNC","B","SQUAREROOT",1)=""
^DD("FUNC","B","STRIPBLANKS",51)=""
^DD("FUNC","B","TIME",2)=""
^DD("FUNC","B","TIU NAME FORMAT",183)=""
^DD("FUNC","B","TIU UNKNOWN DATA",182)=""
^DD("FUNC","B","TIU VISIT ID",184)=""
^DD("FUNC","B","TODAY",25)=""
^DD("FUNC","B","TOP",44)=""
^DD("FUNC","B","TOTAL",97)=""
^DD("FUNC","B","TRANSLATE",52)=""
^DD("FUNC","B","UNDERLINE",16)=""
^DD("FUNC","B","UPPERCASE",13)=""
^DD("FUNC","B","USER",55)=""
^DD("FUNC","B","VAQ DASH SSN",157)=""
^DD("FUNC","B","VAQ FORMAT DATE",158)=""
^DD("FUNC","B","VAQ FORMAT TIME",159)=""
^DD("FUNC","B","VAQ GET LIFE",160)=""
^DD("FUNC","B","VAR",56)=""
^DD("FUNC","B","WIDTH",36)=""
^DD("FUNC","B","WRAP",39)=""
^DD("FUNC","B","XLFMTNAME",191)=""
^DD("FUNC","B","XM NEXT SEQUENCE NUMBER",190)=""
^DD("FUNC","B","XMV-ALL-HERE",115)=""
^DD("FUNC","B","XMVCODE",114)=""
^DD("FUNC","B","XTBASE8",126)=""
^DD("FUNC","B","XTCOS",122)=""
^DD("FUNC","B","XTDTR",123)=""
^DD("FUNC","B","XTEST",127)=""
^DD("FUNC","B","XTEXP",117)=""
^DD("FUNC","B","XTLN",116)=""
^DD("FUNC","B","XTLOG",119)=""
^DD("FUNC","B","XTPWR",118)=""
^DD("FUNC","B","XTRTD",124)=""
^DD("FUNC","B","XTRTEST",125)=""
^DD("FUNC","B","XTSIN",121)=""
^DD("FUNC","B","XTTAN",120)=""
^DD("FUNC","B","XUBAR",109)=""
^DD("FUNC","B","XUDASH",107)=""
^DD("FUNC","B","XUDELTATIME",102)=""
^DD("FUNC","B","XUDOTTAB",108)=""
^DD("FUNC","B","XUFAA",106)=""
^DD("FUNC","B","XUFIELDNAME",112)=""
^DD("FUNC","B","XUFILESIZE",105)=""
^DD("FUNC","B","XUFMTOEX",113)=""
^DD("FUNC","B","XUGBLSIZE",104)=""
^DD("FUNC","B","XUPRINTSECONDS",103)=""
^DD("FUNC","B","XUSEC ISO ARTIFICIAL",207)=""
^DD("FUNC","B","XUSEC ISO VISITED",208)=""
^DD("FUNC","B","XUSEC ISO ZZD OUT",209)=""
^DD("FUNC","B","XUSER",100)=""
^DD("FUNC","B","XUTIME",111)=""
^DD("FUNC","B","XUVT",110)=""
^DD("FUNC","B","XUWORKDAY",101)=""
^DD("FUNC","B","YEAR",4)=""
^DD("FUNC","B","YSCENTER",168)=""
^DD("FUNC","B","YSPARAM",166)=""
^DD("FUNC","B","YSTIME",167)=""
