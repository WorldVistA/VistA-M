OSEHRA ZGO Export: IB FORM FIELD CONTENT
ZWR
^IBA(364.7,0)="IB FORM FIELD CONTENT^364.7IP^1015^1686"
^IBA(364.7,1,0)="1^N^54^^^^N"
^IBA(364.7,1,3,0)="^364.73^2^2^3071129^^"
^IBA(364.7,1,3,1,0)="This is CI2-2."
^IBA(364.7,1,3,2,0)="FileMan Extract - CURRENT BILL PAYER SEQUENCE (Field .21, File 399)"
^IBA(364.7,2,0)="4^N^2^^^^N"
^IBA(364.7,2,1)="S IBXSAVE(""INM"")=$$NAME^IBCEFG1(IBXDATA) K IBXDATA"
^IBA(364.7,2,3,0)="^^2^2^3071129^"
^IBA(364.7,2,3,1,0)="Changes data element (name) into LAST^FIRST^MIDDLE^CRED^SUFFIX format."
^IBA(364.7,2,3,2,0)="Saves data in IBXSAVE array for use by later fields.  No output."
^IBA(364.7,4,0)="6^N^4^^^^N"
^IBA(364.7,4,1)="S IBXSAVE(""IADR"")=IBXDATA"
^IBA(364.7,4,3,0)="^364.73^1^1^3070703^^^^"
^IBA(364.7,4,3,1,0)="Saves off data element in IBXSAVE array.  No output."
^IBA(364.7,5,0)="7^N^5^^^^N"
^IBA(364.7,5,1)="S IBXDATA=$TR($P($G(IBXSAVE(""IADR"")),U,2),""-/.,()'"",""  "")"
^IBA(364.7,5,3,0)="2^364.73^2^2^3070703^^^^"
^IBA(364.7,5,3,1,0)="Retrieves insured city data from IBXSAVE array previously extracted.  If"
^IBA(364.7,5,3,2,0)="data element's value is null, do not output."
^IBA(364.7,6,0)="3^N^5^^^^N"
^IBA(364.7,6,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""ADDR2""))"
^IBA(364.7,6,3,0)="^364.73^2^2^3090213^^"
^IBA(364.7,6,3,1,0)="PRV-11"
^IBA(364.7,6,3,2,0)="Billing provider address line 2"
^IBA(364.7,7,0)="9^N^5^^^^N"
^IBA(364.7,7,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,4)"
^IBA(364.7,7,3,0)="^364.73^2^2^3070703^^^^"
^IBA(364.7,7,3,1,0)="Retrieves insured zip code address data from IBXSAVE array previously"
^IBA(364.7,7,3,2,0)="extracted.  If data element's value is null, do not output."
^IBA(364.7,8,0)="10^N^6^^^^N"
^IBA(364.7,8,1)="S IBXSAVE(""IDEM"")=$$DT^IBCEFG1($P(IBXDATA,U),"""",""D8"")_U_$P(IBXDATA,U,2)_U_$$NOPUNCT^IBCEF($P(IBXDATA,U,3),1) K IBXDATA"
^IBA(364.7,8,3,0)="^^3^3^2991115^^^^"
^IBA(364.7,8,3,1,0)="Saves off data element in IBXSAVE array with the first '^' piece of the"
^IBA(364.7,8,3,2,0)="data reformatted to a date format of CCYYMMDD and phone # stripped of"
^IBA(364.7,8,3,3,0)="punctuation.  No output."
^IBA(364.7,9,0)="11^N^5^^^^N"
^IBA(364.7,9,1)="S IBXDATA=$P($G(IBXSAVE(""IDEM"")),U,2)"
^IBA(364.7,9,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,9,3,1,0)="Retrieves insured demographics from IBXSAVE array previously extracted.  If"
^IBA(364.7,9,3,2,0)="data element's value is null, do not output."
^IBA(364.7,10,0)="12^N^5^^^^N"
^IBA(364.7,10,1)="S IBXDATA=$P($G(IBXSAVE(""IDEM"")),U,3)"
^IBA(364.7,10,3,0)="^^2^2^2991007^^^^"
^IBA(364.7,10,3,1,0)="Retrieves insured demographics from IBXSAVE array previously extracted.  If"
^IBA(364.7,10,3,2,0)="data element's value is null, do not output."
^IBA(364.7,11,0)="13^N^7^^^^N"
^IBA(364.7,11,1)="S IBXSAVE(""EMP"")=IBXDATA K IBXDATA"
^IBA(364.7,11,3,0)="^^1^1^3000107^^^^"
^IBA(364.7,11,3,1,0)="Saves off data element in IBXSAVE array.  Do not output."
^IBA(364.7,12,0)="1015^N^5^^^^N"
^IBA(364.7,12,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,2)),U,1)"
^IBA(364.7,12,3,0)="^364.73^7^7^3101108^^^^"
^IBA(364.7,12,3,1,0)="EI=Employer ID;SY=Social Security Number;0B=State License Number;"
^IBA(364.7,12,3,2,0)="1A = Blue Cross Number;1B=Blue Shield Number;1C=Medicare Number;"
^IBA(364.7,12,3,3,0)="1D = Medicaid Number;1G=UPIN Number;1H=TRICARE ID Number;"
^IBA(364.7,12,3,4,0)="B3 = PPO Number;BQ=HMO Code Number;U3=USIN Number;G2=Commercial Number;"
^IBA(364.7,12,3,5,0)="FH = Clinic Number;X5=State Industrial Accident Provider Number;"
^IBA(364.7,12,3,6,0)="LU=Location Number"
^IBA(364.7,12,3,7,0)="This is the X12 interpretation of the type of billing provider id for this insurance co.  It is calculated from the electronic type of plan. Refer to the 837 V4010 (professional) fields 2010BB/REF(2)/01 and 2000B/SBR/09 for details."
^IBA(364.7,13,0)="1016^N^5^^^^N^0"
^IBA(364.7,13,1)="S IBXDATA=$P($G(IBXSAVE(""INM"")),U,5)"
^IBA(364.7,13,3,0)="^364.73^3^3^3030910^^^^"
^IBA(364.7,13,3,1,0)="INSURED NAME SUFFIX also known as SUBSCRIBER NAME SUFFIX. It is extracted "
^IBA(364.7,13,3,2,0)="using a function call, $$SETSTR^VALM1 to get the full name then an IB"
^IBA(364.7,13,3,3,0)="function to format it, $$NAME^IBCEFG1."
^IBA(364.7,14,0)="17^N^5^^^^N"
^IBA(364.7,14,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,5)"
^IBA(364.7,14,3,0)="^364.73^2^2^3070703^^^^"
^IBA(364.7,14,3,1,0)="Retrieves insured address data from IBXSAVE array previously extracted.  If"
^IBA(364.7,14,3,2,0)="data element's value is null, do not output."
^IBA(364.7,15,0)="16^N^5^^^^N"
^IBA(364.7,15,1)="S IBXDATA=$P($G(IBXSAVE(""IDEM"")),U)"
^IBA(364.7,15,3,0)="^^2^2^3000217^^^^"
^IBA(364.7,15,3,1,0)="Retrieves insured demographics data from IBXSAVE array previously extracted."
^IBA(364.7,15,3,2,0)=" "
^IBA(364.7,16,0)="18^N^5^^^^N"
^IBA(364.7,16,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""EMP"")),U)"
^IBA(364.7,16,3,0)="^364.73^2^2^3170719^^^^"
^IBA(364.7,16,3,1,0)="Retrieves insured employment info from IBXSAVE array previously extracted."
^IBA(364.7,16,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,19,0)="22^N^5^^^^N"
^IBA(364.7,19,1)="S IBXDATA=$P($G(IBXSAVE(""INM"")),U,2)"
^IBA(364.7,19,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,19,3,1,0)="Pull off first name of insured from IBXSAVE array previously extracted."
^IBA(364.7,19,3,2,0)="Don't output data element if its value is null."
^IBA(364.7,20,0)="26^N^5^^^^N"
^IBA(364.7,20,1)="S IBXDATA=$P($G(IBXSAVE(""INM"")),U)"
^IBA(364.7,20,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,20,3,1,0)="Pull off last name of insured from IBXSAVE array previously extracted."
^IBA(364.7,20,3,2,0)="Don't output data element if its value is null."
^IBA(364.7,21,0)="27^N^5^^^^N"
^IBA(364.7,21,1)="S IBXDATA=$P($G(IBXSAVE(""INM"")),U,3)"
^IBA(364.7,21,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,21,3,1,0)="Pull off middle name of insured from IBXSAVE array previously extracted."
^IBA(364.7,21,3,2,0)="Don't output data element if its value is null."
^IBA(364.7,24,0)="28^N^25^^^^N"
^IBA(364.7,24,1)="S IBXDATA=$$PRELCNV^IBCNSP1(IBXDATA,1)"
^IBA(364.7,24,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,24,3,1,0)="Calculates the X12 code for relationship from the DHCP code extracted."
^IBA(364.7,24,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,25,0)="60^N^93^^^^N"
^IBA(364.7,25,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,25,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,25,3,1,0)="Format data element in CCYYMMDD date format.  If data element's value is"
^IBA(364.7,25,3,2,0)="null, do not output."
^IBA(364.7,26,0)="61^N^94^^^^N"
^IBA(364.7,26,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,26,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,26,3,1,0)="Format data element in CCYYMMDD date format.  If data element's value is"
^IBA(364.7,26,3,2,0)="null, do not output."
^IBA(364.7,27,0)="92^N^86^^^^N"
^IBA(364.7,27,1)="N A,C,R,Z,E,D M A=IBXDATA S (Z,R)=0,C=1 K IBXDATA F  S Z=$O(A(Z)) Q:'Z  S A=$TR($P($$ICD9^IBACSV(+A(Z),$$BDATE^IBACSV(IBXIEN)),U),""."") I A'="""" D ID1^IBCEF2(.R,.A,.C,.D,.E) Q:C=""""  I A'="""" S IBXDATA(R)=A"
^IBA(364.7,27,3,0)="^^8^8^3151207^"
^IBA(364.7,27,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,27,3,2,0)="possible for the data element in the IBXDATA array.  Each diagnosis code"
^IBA(364.7,27,3,3,0)="name is stripped of its decimal point and is output on its own DCn entry"
^IBA(364.7,27,3,4,0)="where n is a record count that will allow it to be mapped into one of the"
^IBA(364.7,27,3,5,0)="12 available pieces of the 837 diagnosis code record correctly.  This is"
^IBA(364.7,27,3,6,0)="done to accommodate Austin's translator and one of its shortcomings.  Save"
^IBA(364.7,27,3,7,0)="off the extract sequence # of each diagnosis output in the global array"
^IBA(364.7,27,3,8,0)="^TMP(""IBXSAVE"",$J,""DX"") for later use."
^IBA(364.7,28,0)="56^N^5^^^^N"
^IBA(364.7,28,1)="S IBXDATA=$G(IBXSAVE(""DISDT"")) I IBXDATA S IBXDATA=$$DT^IBCEFG1(IBXDATA\1,"""",""D8"")"
^IBA(364.7,28,3,0)="^^4^4^3160108^"
^IBA(364.7,28,3,1,0)="Extract only date from date/time retrieved from IBXSAVE array previously"
^IBA(364.7,28,3,2,0)="extracted.  For an outpatient claim not related to an inpatient episode,"
^IBA(364.7,28,3,3,0)="If data element's value is null, do not output. IB*547 Removed the data "
^IBA(364.7,28,3,4,0)="for outpatient statement discharge date."
^IBA(364.7,29,0)="59^N^90^^^^N"
^IBA(364.7,29,1)="K IBXDATA"
^IBA(364.7,29,3,0)="^364.73^2^2^3140425^^^^"
^IBA(364.7,29,3,1,0)="Format data element in CCYYMMDD date format.  If data element's value is"
^IBA(364.7,29,3,2,0)="null, do not output."
^IBA(364.7,30,0)="76^N^285^^^^N"
^IBA(364.7,30,1)="I IBXDATA'="""" S IBXDATA=$$DT^IBCEFG1(IBXDATA,,""D8"")"
^IBA(364.7,30,3,0)="^^1^1^2991130^^^^"
^IBA(364.7,30,3,1,0)="Format the date in X12 8-digit format if data not null."
^IBA(364.7,31,0)="75^N^284^^^^N"
^IBA(364.7,31,1)="I IBXDATA="""",$$WNRBILL^IBEFUNC(IBXIEN),$$FT^IBCEF(IBXIEN)=2!($$FT^IBCEF(IBXIEN)=7) S IBXDATA=""31"""
^IBA(364.7,36,0)="42^N^10^^^^N"
^IBA(364.7,36,1)="S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)"
^IBA(364.7,36,3,0)="^^1^1^2980922^^^^"
^IBA(364.7,36,3,1,0)="If data element's value is null, do not output.  Remove any punctuation."
^IBA(364.7,37,0)="139^N^16^^^^N"
^IBA(364.7,37,1)="K:$$FT^IBCEF(IBXIEN)=2!($$FT^IBCEF(IBXIEN)=7)!'$$INPAT^IBCEF(IBXIEN) IBXDATA N Z S Z=0 F  S Z=$O(IBXDATA(Z)) K:'Z IBXDATA Q:'Z  I '$D(IBXDATA(Z,""M"")) S IBXSAVE(""PROC"",Z)=IBXDATA(Z) I Z'<25 K IBXDATA Q"
^IBA(364.7,37,3,0)="^364.73^6^6^3170501^^^^"
^IBA(364.7,37,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,37,3,2,0)="possible for the data element in the IBXDATA array.  If an institutional"
^IBA(364.7,37,3,3,0)="bill or if the bill is professional and the procedure being extracted was"
^IBA(364.7,37,3,4,0)="not added as a result of being a modifier with a 5-digit code starting with"
^IBA(364.7,37,3,5,0)="0 (""M"" node does not exist), save in an IBXSAVE array for later use.  No"
^IBA(364.7,37,3,6,0)="output."
^IBA(364.7,38,0)="86^N^5^^^^N"
^IBA(364.7,38,1)="K IBXDATA N Q,R,S,Z,IBZ S (Z,R)=0 D F^IBCEF(""N-PROCEDURE CODING METHD"",""IBZ"",,IBXIEN) F  S Z=$O(IBXSAVE(""PROC"",Z)) Q:'Z  S Q=$$PROC^IBCEF1($P(IBXSAVE(""PROC"",Z),U),$S(IBZ=9:""ICD"",1:"""")) S:Q'="""" R=R+1,IBXDATA(R)=Q"
^IBA(364.7,38,3,0)="^^3^3^2991013^^^^"
^IBA(364.7,38,3,1,0)="Each procedure code found in the IBXSAVE array previously extracted is"
^IBA(364.7,38,3,2,0)="formatted into the name of the CPT or ICD procedure or the code from the"
^IBA(364.7,38,3,3,0)="procedure modifier."
^IBA(364.7,39,0)="85^N^5^^^^N"
^IBA(364.7,39,1)="K IBXDATA N Z,Z0,Z1,R S (Z,Z1,R)=0 F  S Z=$O(IBXSAVE(""PROC"",Z)) Q:'Z  S Z0=$$DT^IBCEFG1($P(IBXSAVE(""PROC"",Z),U,2),"""",""D8"") I Z0'="""" S Z1=Z1+1,IBXDATA(Z1)=Z0 D ID^IBCEF2(Z1,""PC""_$$M^IBCEF2(.R))"
^IBA(364.7,39,3,0)="^^5^5^2991115^^^^"
^IBA(364.7,39,3,1,0)="Each procedure date found in the IBXSAVE array previously extracted is"
^IBA(364.7,39,3,2,0)="formatted into CCYYMMDD date format and is output on its own PCn entry where"
^IBA(364.7,39,3,3,0)="n is a record count that will allow it to be mapped into one of the 12"
^IBA(364.7,39,3,4,0)="available pieces of the 837 procedure code record correctly.  This is done"
^IBA(364.7,39,3,5,0)="to accommodate Austin's translator and one of its shortcomings."
^IBA(364.7,40,0)="87^N^5^^^^N"
^IBA(364.7,40,1)="K IBXDATA N Z,Z0,Z1,Z2 S Z=0 F  S Z=$O(IBXSAVE(""PROC"",Z)) Q:'Z  S Z0=$O(IBXSAVE(""PROC"",Z),-1),Z1=IBXSAVE(""PROC"",Z),Z2=$S(Z1[""ICD"":$$ICD0VER^IBACSV(+Z1),1:0) S IBXDATA(Z)=$S('Z0:$S(Z1[""CPT"":""BP"",Z2=2:""BR"",1:""BBR""),Z1[""CPT"":""BO"",Z2=2:""BQ"",1:""BBQ"")"
^IBA(364.7,40,3,0)="^364.73^5^5^3101221^^"
^IBA(364.7,40,3,1,0)="If there are any procedures (not relating to charges) on the bill, output"
^IBA(364.7,40,3,2,0)="the type of procedure here:"
^IBA(364.7,40,3,3,0)=" "
^IBA(364.7,40,3,4,0)="BR = principal procedure and is an ICD code"
^IBA(364.7,40,3,5,0)="BQ = not principal procedure, but is an ICD code"
^IBA(364.7,41,0)="93^N^5^^^^N"
^IBA(364.7,41,1)="K IBXDATA N Z S Z=0 F  S Z=$O(^TMP(""DCX"",$J,1,Z)) Q:'Z  S IBXDATA(Z)=$P(^TMP(""DCX"",$J,1,Z),U,2)"
^IBA(364.7,41,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,41,3,1,0)="This is diagnosis qualifier."
^IBA(364.7,42,0)="29^N^5^^^^N"
^IBA(364.7,42,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,42,3,0)="^364.73^2^2^3140425^^^^"
^IBA(364.7,42,3,1,0)="Calculates the X12 code for employment status from the DHCP code extracted."
^IBA(364.7,42,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,43,0)="31^N^5^^^^N"
^IBA(364.7,43,1)="S IBXDATA=$P($G(IBXSAVE(""PTNM"")),U,2)"
^IBA(364.7,43,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,43,3,1,0)="Retrieves patient's first name from IBXSAVE array previously extracted."
^IBA(364.7,43,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,44,0)="30^N^5^^^^N"
^IBA(364.7,44,1)="S IBXDATA=$P($G(IBXSAVE(""PTNM"")),U)"
^IBA(364.7,44,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,44,3,1,0)="Retrieves patient's last name from IBXSAVE array previously extracted."
^IBA(364.7,44,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,45,0)="32^N^5^^^^N"
^IBA(364.7,45,1)="S IBXDATA=$P($G(IBXSAVE(""PTNM"")),U,3)"
^IBA(364.7,45,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,45,3,1,0)="Retrieves patient's middle name from IBXSAVE array previously extracted."
^IBA(364.7,45,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,46,0)="140^N^65^^^^N"
^IBA(364.7,46,1)="S IBXSAVE(""PTNM"")=$$NAME^IBCEFG1(IBXDATA) K IBXDATA"
^IBA(364.7,46,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,46,3,1,0)="Changes data element (name) into LAST^FIRST^MIDDLE format.  Saves data in"
^IBA(364.7,46,3,2,0)="IBXSAVE array.  No output."
^IBA(364.7,47,0)="67^N^76^^^^N"
^IBA(364.7,47,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,47,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,48,0)="47^N^97^^^^N"
^IBA(364.7,48,1)="I $$FT^IBCEF(IBXIEN)=3 K IBXDATA"
^IBA(364.7,48,3,0)="^^1^1^2991001^^^^"
^IBA(364.7,48,3,1,0)="If an institutional bill or data element's value is null, no output."
^IBA(364.7,49,0)="141^N^190^^^^N"
^IBA(364.7,49,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 K IBXSAVE(""OCC""),IBXSAVE(""OCCS"")"
^IBA(364.7,49,3,0)="^364.73^1^1^3171102^^^^"
^IBA(364.7,49,3,1,0)="No output."
^IBA(364.7,50,0)="81^N^5^^^^N"
^IBA(364.7,50,1)="K IBXDATA N Z,Z0,R S (Z,R)=0 F  S Z=$O(IBXSAVE(""OCC"",Z)) Q:'Z  S Z0=$$DT^IBCEFG1($P(IBXSAVE(""OCC"",Z),U,2),"""",""D8"") I Z0'="""" D ID^IBCEF2(Z,""OC""_$$M^IBCEF2(.R)) S IBXDATA(Z)=Z0"
^IBA(364.7,50,3,0)="^^5^5^2991115^^^^"
^IBA(364.7,50,3,1,0)="Each occurrence code date found in the IBXSAVE array previously extracted"
^IBA(364.7,50,3,2,0)="is formatted into CCYYMMDD date format and is output on its own OCn entry"
^IBA(364.7,50,3,3,0)="where n is a record count that will allow it to be mapped into one of the"
^IBA(364.7,50,3,4,0)="12 available pieces of the 837 occurrence code record correctly.  This is"
^IBA(364.7,50,3,5,0)="done to accommodate Austin's translator and one of its shortcomings."
^IBA(364.7,51,0)="82^N^5^^^^N"
^IBA(364.7,51,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OCC"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OCC"",Z),U) S:Z0'="""" IBXDATA(Z)=Z0"
^IBA(364.7,51,3,0)="^^2^2^2991014^^^^"
^IBA(364.7,51,3,1,0)="Each occurrence code found in the IBXSAVE array previously extracted is"
^IBA(364.7,51,3,2,0)="output."
^IBA(364.7,52,0)="58^N^232^^^^N"
^IBA(364.7,52,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,52,3,0)="^^2^2^3000302^^^^"
^IBA(364.7,52,3,1,0)="Format data element in CCYYMMDD date format.  If data element's value is"
^IBA(364.7,52,3,2,0)="null, do not output."
^IBA(364.7,53,0)="945^N^5^^^^N"
^IBA(364.7,53,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,""NAME"")),U,1)"
^IBA(364.7,53,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,53,3,1,0)=" "
^IBA(364.7,53,3,2,0)="Operating provider last name"
^IBA(364.7,54,0)="38^N^66^^^^N"
^IBA(364.7,54,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,54,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,54,3,1,0)="Format date returned as CCYYMMDD.  If data element's value is null, do not"
^IBA(364.7,54,3,2,0)="output."
^IBA(364.7,55,0)="35^N^61^^^^N"
^IBA(364.7,55,1)="I $G(IBXDATA)'="""" S IBXDATA=$TR(IBXDATA,""-/.,()'"",""  "")"
^IBA(364.7,55,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,55,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,56,0)="36^N^62^^^^N"
^IBA(364.7,56,1)="S IBXDATA=$$STATE^IBCEFG1(IBXDATA)"
^IBA(364.7,56,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,56,3,1,0)="Format data as state's 2-character abbreviation.  If data element's value"
^IBA(364.7,56,3,2,0)="is null, do not output."
^IBA(364.7,57,0)="37^N^63^^^^N"
^IBA(364.7,57,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,57,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,58,0)="33^N^59^^^^N"
^IBA(364.7,58,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,58,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,59,0)="34^N^60^^^^N"
^IBA(364.7,59,3,0)="^^1^1^2960815^^^"
^IBA(364.7,59,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,60,0)="39^N^67^^^^N"
^IBA(364.7,60,1)="S IBXDATA=$$SEX^IBCEFG1(IBXDATA)"
^IBA(364.7,60,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,60,3,1,0)="Calculates the X12 code for sex from the DHCP code extracted. If data"
^IBA(364.7,60,3,2,0)="element's value is null, do not output."
^IBA(364.7,61,0)="40^N^5^^^^N"
^IBA(364.7,61,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,61,3,0)="^364.73^1^1^3140425^^^^"
^IBA(364.7,61,3,1,0)="Calculates the X12 code for marital status from the DHCP code extracted."
^IBA(364.7,62,0)="41^N^5^^^^N"
^IBA(364.7,62,1)="K IBXDATA"
^IBA(364.7,62,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,62,3,1,0)="This element is blank."
^IBA(364.7,63,0)="43^N^5^^^^N"
^IBA(364.7,63,3,0)="^364.73^1^1^3140425^^^^"
^IBA(364.7,63,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,64,0)="64^N^9^^^^N"
^IBA(364.7,65,0)="44^N^210^^^^N"
^IBA(364.7,65,3,0)="^^3^3^2990722^^^^"
^IBA(364.7,65,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,65,3,2,0)="If this is a request for an MRA, append the batch number as the 3rd '-'"
^IBA(364.7,65,3,3,0)="piece of the patient control number."
^IBA(364.7,66,0)="45^N^222^^^^N"
^IBA(364.7,66,3,0)="^^1^1^2981008^^^^"
^IBA(364.7,66,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,67,0)="46^N^74^^^^N"
^IBA(364.7,67,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,67,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,68,0)="48^N^23^^^^N"
^IBA(364.7,68,1)="S IBXDATA=$S($$ROIDTCK^IBCEU7(IBXIEN):""Y"",1:""I"")"
^IBA(364.7,68,3,0)="^364.73^1^1^3190107^^^^"
^IBA(364.7,68,3,1,0)="Converts release of information indicator from DHCP to X12 format."
^IBA(364.7,69,0)="66^N^5^^^^N"
^IBA(364.7,69,1)="K IBXDATA"
^IBA(364.7,69,3,0)="^364.73^1^1^3140807^^"
^IBA(364.7,69,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,70,0)="83^N^5^^^^N"
^IBA(364.7,70,1)="K IBXDATA N Z,Z0,R S (Z,R)=0 F  S Z=$O(IBXSAVE(""OCCS"",Z)) Q:'Z  S Z0=$$DT^IBCEFG1($P(IBXSAVE(""OCCS"",Z),U,2),"""",""D8"") I Z0'="""" S IBXDATA(Z)=Z0 D ID^IBCEF2(Z,""OS""_$$M^IBCEF2(.R))"
^IBA(364.7,70,3,0)="^^6^6^2991115^^^^"
^IBA(364.7,70,3,1,0)="Each occurrence span code from date found in the IBXSAVE array previously"
^IBA(364.7,70,3,2,0)="extracted is formatted into CCYYMMDD date format and is output on its own"
^IBA(364.7,70,3,3,0)="OCSn entry where n is a record count that will allow it to be mapped into"
^IBA(364.7,70,3,4,0)="one of the 12 available pieces of the 837 occurrence span code records"
^IBA(364.7,70,3,5,0)="correctly.  This is done to accommodate Austin's translator and one of its"
^IBA(364.7,70,3,6,0)="shortcomings."
^IBA(364.7,71,0)="84^N^5^^^^N"
^IBA(364.7,71,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OCCS"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OCCS"",Z),U) S:Z0'="""" IBXDATA(Z)=Z0"
^IBA(364.7,71,3,0)="^^2^2^2991014^^^^"
^IBA(364.7,71,3,1,0)="Each occurrence span code found in the IBXSAVE array previously extracted is"
^IBA(364.7,71,3,2,0)="output."
^IBA(364.7,72,0)="49^N^24^^^^N"
^IBA(364.7,72,1)="S IBXDATA=$S(""Nn0""[IBXDATA&(IBXDATA'=""""):""N"",1:""Y"")"
^IBA(364.7,72,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,72,3,1,0)="Converts assignment of benefits indicator from DHCP to X12 format."
^IBA(364.7,73,0)="50^N^98^^^^N"
^IBA(364.7,73,1)="S IBXDATA=$S(1[IBXDATA:""00"",1:""15"")"
^IBA(364.7,73,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,73,3,1,0)="Converts bill submission status from DHCP to X12 format.  '00' is original"
^IBA(364.7,73,3,2,0)="submission, '15' is any subsequent submission of this bill."
^IBA(364.7,74,0)="51^N^71^^^^N"
^IBA(364.7,74,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,74,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,74,3,1,0)="Format date in CCYYMMDD format.  If data element's value is null, do not"
^IBA(364.7,74,3,2,0)="output."
^IBA(364.7,75,0)="52^N^173^^^^N"
^IBA(364.7,75,1)="S:$$FT^IBCEF(IBXIEN)=7 IBXDATA="""" S IBXNOREQ='$$REQ^IBCEF1(2,"""",IBXIEN) S IBXDATA=$$DOLLAR^IBCEFG1(IBXDATA)"
^IBA(364.7,75,3,0)="^364.73^2^2^3180419^^^^"
^IBA(364.7,75,3,1,0)="Format data element so it is numeric including cents, without the decimal."
^IBA(364.7,75,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,76,0)="53^N^95^^^^N"
^IBA(364.7,76,1)="S IBXDATA=$$DOLLAR^IBCEFG1(IBXDATA)"
^IBA(364.7,76,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,76,3,1,0)="Format data element so it is numeric including cents, without the decimal."
^IBA(364.7,76,3,2,0)="If data element's value is null, do not output."
^IBA(364.7,77,0)="54^N^5^^^^N"
^IBA(364.7,77,1)="S IBXDATA=$G(IBXSAVE(""ADMDT"")) S:$L(IBXDATA)=6 IBXDATA=$$DATE^IBCEU($E(IBXDATA,5,6)_$E(IBXDATA,1,4)) D:$S(IBXDATA="""":$$HHLTH^IBCEF1(IBXIEN,1),1:0) F^IBCEF(""N-STATEMENT COVERS FROM DATE"",,,IBXIEN) I IBXDATA S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,77,3,0)="^364.73^3^3^3161005^^^^"
^IBA(364.7,77,3,1,0)="If data exists from the previous extract of IBXSAVE(""ADMDT""), output it."
^IBA(364.7,77,3,2,0)="Format date in CCYYMMDD format.  IB*2.0*547 removed the Outpatient date."
^IBA(364.7,77,3,3,0)="IB*2.0*574 add Outpatient date for Hospice and Home Health Claims."
^IBA(364.7,78,0)="159^N^100^^^^N"
^IBA(364.7,78,1)="K IBXSAVE"
^IBA(364.7,78,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,78,3,1,0)="Cleans up IBXSAVE array.  No output."
^IBA(364.7,81,0)="156^N^100^^^^N"
^IBA(364.7,81,1)="K IBXSAVE,^TMP(""IBTX"",$J,IBXIEN)"
^IBA(364.7,81,3,0)="^^1^1^2990902^^^^"
^IBA(364.7,81,3,1,0)="Cleans up the IBXSAVE array.  No output."
^IBA(364.7,82,0)="155^N^100^^^^N"
^IBA(364.7,82,1)="K IBXSAVE"
^IBA(364.7,82,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,82,3,1,0)="Cleans up the IBXSAVE array.  No output."
^IBA(364.7,84,0)="153^N^100^^^^N"
^IBA(364.7,84,1)="K IBXSAVE,^TMP(""DCX"",$J)"
^IBA(364.7,84,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,84,3,1,0)="Cleans up IBXSAVE and ^TMP(""DCX"") arrays. No output."
^IBA(364.7,85,0)="152^N^100^^^^N"
^IBA(364.7,85,1)="K IBXSAVE"
^IBA(364.7,85,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,85,3,1,0)="Cleans up IBXSAVE array.  No output."
^IBA(364.7,86,0)="151^N^100^^^^N"
^IBA(364.7,86,1)="K IBXSAVE"
^IBA(364.7,86,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,86,3,1,0)="Cleans up the IBXSAVE array.  No output."
^IBA(364.7,87,0)="150^N^100^^^^N"
^IBA(364.7,87,1)="K IBXSAVE"
^IBA(364.7,87,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,87,3,1,0)="Cleans up IBXSAVE array.  No output."
^IBA(364.7,88,0)="1029^N^5^^^^N^0"
^IBA(364.7,88,1)="S IBXDATA="""""
^IBA(364.7,88,3,0)="^^1^1^3140416^"
^IBA(364.7,88,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,89,0)="1030^N^5^^^^N^0"
^IBA(364.7,89,1)="S IBXDATA="""""
^IBA(364.7,89,3,0)="^^1^1^3140416^"
^IBA(364.7,89,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,90,0)="147^N^100^^^^N"
^IBA(364.7,90,1)="K IBXSAVE"
^IBA(364.7,90,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,90,3,1,0)="Clean up IBXSAVE array.  No output."
^IBA(364.7,91,0)="146^N^100^^^^N"
^IBA(364.7,91,1)="K IBXSAVE"
^IBA(364.7,91,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,91,3,1,0)="Clean up the IBXSAVE array.  No output."
^IBA(364.7,92,0)="145^N^100^^^^N"
^IBA(364.7,92,1)="K IBXSAVE"
^IBA(364.7,92,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,92,3,1,0)="Cleans up the IBXSAVE array.  No output."
^IBA(364.7,93,0)="144^N^100^^^^N"
^IBA(364.7,93,1)="K IBXSAVE"
^IBA(364.7,93,3,0)="^^1^1^2990218^^^^"
^IBA(364.7,93,3,1,0)="Cleans up the IBXSAVE array ... no output."
^IBA(364.7,94,0)="70^N^88^^^^N"
^IBA(364.7,94,1)="K:'IBXDATA IBXDATA I $D(IBXDATA) S IBXSAVE(""CONDA"")=IBXDATA,IBXDATA=""AA"""
^IBA(364.7,94,3,0)="^^3^3^2960815^^^^"
^IBA(364.7,94,3,1,0)="If IBXDATA does not have a value that is greater than 0, no output.  If  "
^IBA(364.7,94,3,2,0)="data element > 0, save off value in IBXSAVE array for later use, output"
^IBA(364.7,94,3,3,0)="as 'AA'."
^IBA(364.7,95,0)="73^N^159^^^^N"
^IBA(364.7,95,1)="S IBXDATA=$$STATE^IBCEFG1(IBXDATA)"
^IBA(364.7,95,3,0)="^364.73^2^2^3061011^^^^"
^IBA(364.7,95,3,1,0)="Format data element as the 2-character state abbreviation.  If data element"
^IBA(364.7,95,3,2,0)="is null, no output."
^IBA(364.7,96,0)="71^N^87^^^^N"
^IBA(364.7,96,1)="K:'IBXDATA IBXDATA I $D(IBXDATA) S IBXDATA=""EM"""
^IBA(364.7,96,3,0)="^^2^2^2991006^^^^"
^IBA(364.7,96,3,1,0)="If IBXDATA does not have a value that is greater than 0, no output.  If"
^IBA(364.7,96,3,2,0)="data element > 0, output as 'EM'."
^IBA(364.7,97,0)="72^N^89^^^^N"
^IBA(364.7,97,1)="K:'IBXDATA IBXDATA I $D(IBXDATA) S IBXDATA=""OA"""
^IBA(364.7,97,3,0)="^^2^2^2960815^^^^"
^IBA(364.7,97,3,1,0)="If IBXDATA does not have a value that is greater than 0, no output.  If"
^IBA(364.7,97,3,2,0)="data element > 0, output as 'OA'."
^IBA(364.7,98,0)="142^N^78^^^^N"
^IBA(364.7,98,1)="N A,IBZ,%DT,Y,X S IBZ=$S($$FT^IBCEF(IBXIEN)=7:IBXDATA,$$HHLTH^IBCEF1(IBXIEN,1):IBXDATA,1:""""),A=$S(IBZ?6N:IBZ,1:"""") K IBXDATA S:A="""" Y=IBZ S X=A,%DT=""PX"" D:A'="""" ^%DT S IBXSAVE(""ADMDT"")=$S(Y>0:Y,1:"""")"
^IBA(364.7,98,3,0)="^364.73^3^3^3171017^^^^"
^IBA(364.7,98,3,1,0)="Save off data element's value in IBXSAVE array.  No output. IB*547 "
^IBA(364.7,98,3,2,0)="requirement to use only Inpatient Admission Date/Time."
^IBA(364.7,98,3,3,0)="IB*574 - added date for Outpatient Home health and hospice"
^IBA(364.7,99,0)="55^N^5^^^^N"
^IBA(364.7,99,1)="K IBXDATA S IBXDATA=$$ADMHR^IBCEU(IBXIEN,$G(IBXSAVE(""ADMDT"")))"
^IBA(364.7,99,3,0)="^^3^3^2991007^^^^"
^IBA(364.7,99,3,1,0)="Extract time from date/time retrieved from IBXSAVE array previously"
^IBA(364.7,99,3,2,0)="extracted.  Format time in HHMM format.  If data element's value is null,"
^IBA(364.7,99,3,3,0)="do not output."
^IBA(364.7,100,0)="143^N^81^^^^N"
^IBA(364.7,100,1)="S IBXSAVE(""DISDT"")=$S($$INPAT^IBCEF(IBXIEN,1):IBXDATA,1:"""") K IBXDATA"
^IBA(364.7,100,3,0)="^^2^2^3160108^"
^IBA(364.7,100,3,1,0)="Save off data element's value in IBXSAVE array.  No output. IB*547 "
^IBA(364.7,100,3,2,0)="requirement to use only Inpatient Discharge Date/Time"
^IBA(364.7,101,0)="57^N^5^^^^N"
^IBA(364.7,101,1)="K IBXDATA I $P(IBXSAVE(""DISDT""),""."",2)'="""" S IBXDATA=$E($P(IBXSAVE(""DISDT""),""."",2)_""0000"",1,4)"
^IBA(364.7,101,3,0)="^^3^3^2960815^^^^"
^IBA(364.7,101,3,1,0)="Extract time from date/time retrieved from IBXSAVE array previously"
^IBA(364.7,101,3,2,0)="extracted.  Format time in HHMM format.  If data element's value is null,"
^IBA(364.7,101,3,3,0)="do not output."
^IBA(364.7,102,0)="62^N^80^^^^N"
^IBA(364.7,102,1)="I IBXDATA="""",'$$INPAT^IBCEF(IBXIEN,1) S IBXDATA=2"
^IBA(364.7,102,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,102,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,103,0)="63^N^5^^^^N"
^IBA(364.7,103,1)="S IBXDATA=$P($G(^DGCR(399,IBXIEN,""U"")),U,8) S:'IBXDATA IBXDATA=9"
^IBA(364.7,103,3,0)="^^1^1^3110630^"
^IBA(364.7,103,3,1,0)="If data element's value is null, transmit 9."
^IBA(364.7,104,0)="91^N^11^^^^N"
^IBA(364.7,104,1)="K IBXDATA K:$O(IBFL(24,0))="""" IBFL(24) N Z,Z0,Z1,R S (Z,Z0,R)=0 F  S Z=$O(IBFL(24,Z)) K:'Z&'Z0 IBFL(24) Q:'Z  S Z1=IBFL(24,Z) K IBFL(24,Z) I Z1'="""" S Z0=Z0+1 S IBFL(24,Z0)=Z1 D ID^IBCEF2(Z0,""CC""_$$M^IBCEF2(.R))"
^IBA(364.7,104,3,0)="^^6^6^2960815^^^^"
^IBA(364.7,104,3,1,0)="Data element's array reference is IBFL(24), not default of IBXDATA.  This is"
^IBA(364.7,104,3,2,0)="a group data element so more than 1 occurrence of a value is possible for"
^IBA(364.7,104,3,3,0)="the data element in the IBFL(24) array.  Each entry found is output on its"
^IBA(364.7,104,3,4,0)="own CCn entry where n is a record count that will allow it to be mapped into"
^IBA(364.7,104,3,5,0)="one of the 12 available pieces of the 837 condition code record correctly."
^IBA(364.7,104,3,6,0)="This is done to accommodate Austin's translator and one of its shortcomings."
^IBA(364.7,105,0)="88^N^5^^^^N"
^IBA(364.7,105,1)="K IBXDATA,VC80 N R,VZ,Z,Z0 S (Z,R)=0,VC80=$$VC80CK^IBCEF2(IBIFN) F  S Z=$O(IBXSAVE(""VALUE"",Z)) Q:'Z  S VZ=IBXSAVE(""VALUE"",Z) S:+VC80 IBXSV(""VC80"",Z)=VZ S Z0=$P(VZ,U) I Z0'="""" S IBXDATA(Z)=Z0 D ID^IBCEF2(Z,""VC""_$$M^IBCEF2(.R))"
^IBA(364.7,105,3,0)="^364.73^5^5^3180406^^^^"
^IBA(364.7,105,3,1,0)="Each value code found in the IBXSAVE array previously extracted is"
^IBA(364.7,105,3,2,0)="output on its own VCn entry where n is a record count that will allow it"
^IBA(364.7,105,3,3,0)="to be mapped into one of the 12 available pieces of the 837 value code"
^IBA(364.7,105,3,4,0)="record correctly.  This is done to accommodate Austin's translator and one"
^IBA(364.7,105,3,5,0)="of its shortcomings."
^IBA(364.7,106,0)="161^N^374^^^^N"
^IBA(364.7,106,1)="K IBXDATA N Z K:$D(IBFL(39))=1 IBFL(39) S Z=0 F  S Z=$O(IBFL(39,Z)) K:'Z IBFL(39) Q:'Z  S IBXSAVE(""VALUE"",Z)=IBFL(39,Z)"
^IBA(364.7,106,3,0)="^364.73^4^4^3110216^^^^"
^IBA(364.7,106,3,1,0)="Data element's array reference is IBFL(39), not default of IBXDATA.  This is"
^IBA(364.7,106,3,2,0)="a group data element so more than 1 occurrence of a value is possible for"
^IBA(364.7,106,3,3,0)="the data element in the IBFL(39) array.  Save off values in IBXSAVE array"
^IBA(364.7,106,3,4,0)="for later use.  No output."
^IBA(364.7,107,0)="89^N^5^^^^N"
^IBA(364.7,107,1)="K IBXDATA D VALCODEFMT^IBCVC(.IBXSAVE,.IBXDATA)"
^IBA(364.7,107,3,0)="^364.73^7^7^3211213^^^"
^IBA(364.7,107,3,1,0)="Each value code amount found in the IBXSAVE array previously extracted is"
^IBA(364.7,107,3,2,0)="formatted according to its datatype."
^IBA(364.7,107,3,3,0)=" "
^IBA(364.7,107,3,4,0)="Dollar amounts are denoted by the setting of field #.19 in file #399.1 as "
^IBA(364.7,107,3,5,0)="""YES"""
^IBA(364.7,107,3,6,0)=" "
^IBA(364.7,107,3,7,0)="Other data types are defined by code in CHK^IBCVC and VALCODEFMT^IBCVC."
^IBA(364.7,110,0)="1031^N^5^^^^N^0"
^IBA(364.7,110,1)="S IBXDATA="""""
^IBA(364.7,110,3,0)="^^1^1^3140416^"
^IBA(364.7,110,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,111,0)="74^N^58^^^^N"
^IBA(364.7,111,1)="S:IBXDATA="""" IBXDATA=""N"""
^IBA(364.7,111,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,111,3,1,0)="If data element is null, output 'N'."
^IBA(364.7,112,0)="95^N^101^^^^N"
^IBA(364.7,112,1)="N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI1 "")"
^IBA(364.7,112,3,0)="^364.73^7^7^3040702^^^^"
^IBA(364.7,112,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,112,3,2,0)="possible for the data element in the IBXDATA array.  The IBXSAVE(1) variable"
^IBA(364.7,112,3,3,0)="holds the indicator of which insurance [(P)rimary/(S)econdary/(T)ertiary] is"
^IBA(364.7,112,3,4,0)="currently responsible for the bill.    Using this data as a guide, the next"
^IBA(364.7,112,3,5,0)="insurance for the primary is secondary, then tertiary.  For secondary, it's"
^IBA(364.7,112,3,6,0)="primary then tertiary, and for tertiary, it's primary, then secondary. For"
^IBA(364.7,112,3,7,0)="other than the first occurrence, the RECORD ID 'OI1 ' must be output."
^IBA(364.7,113,0)="96^N^46^^^^N"
^IBA(364.7,113,1)="N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S C=$$OTHINS1^IBCEF2(IBXIEN) F Z=1,2 I $G(IBZ(Z))'="""",$E(C,Z) S:$$WNRBILL^IBEFUNC(IBXIEN,$E(C,Z)) $P(IBZ(Z),U)=""MEDICARE"" S IBXSAVE(""OI#"",Z)=$P(IBZ(Z),U,2,3),IBXDATA(Z)=$P(IBZ(Z),U)"
^IBA(364.7,113,3,0)="^364.73^6^6^3000830^^^^"
^IBA(364.7,113,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,113,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance"
^IBA(364.7,113,3,3,0)="insurance company data is found, the data is formatted as the name of the"
^IBA(364.7,113,3,4,0)="insurance company from the insurance company file."
^IBA(364.7,113,3,5,0)="Saves the claim office id and payer id in IBXSAVE array."
^IBA(364.7,113,3,6,0)="If other insurance is MEDICARE WNR, output is MEDICARE."
^IBA(364.7,114,0)="97^N^35^^^^N"
^IBA(364.7,114,1)="N Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $G(IBZ(Z))'="""",$D(^DGCR(399,IBXIEN,""I""_(Z+1))) S Z0=$$PRELCNV^IBCNSP1(IBZ(Z),1) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,114,3,0)="^^4^4^2960815^^^^"
^IBA(364.7,114,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,114,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance"
^IBA(364.7,114,3,3,0)="is found, the output is formatted as the X12 code for the DHCP value for"
^IBA(364.7,114,3,4,0)="relationship."
^IBA(364.7,115,0)="98^N^33^^^^N"
^IBA(364.7,115,1)="N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S C=$$OTHINS1^IBCEF2(IBXIEN) F Z=1,2 I $G(IBZ(Z))'="""",$E(C,Z) S IBXDATA(Z)=$$NOPUNCT^IBCEF(IBZ(Z),,""/-"")"
^IBA(364.7,115,3,0)="^364.73^3^3^3040521^^"
^IBA(364.7,115,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,115,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance"
^IBA(364.7,115,3,3,0)="is found, the other insured data is output."
^IBA(364.7,116,0)="100^N^31^^^^N"
^IBA(364.7,116,1)="K IBXSAVE(""OINUM"") N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S C=$$OTHINS1^IBCEF2(IBXIEN) F Z=1,2 I $E(C,Z),'$$WNRBILL^IBEFUNC(IBXIEN,$E(C,Z)) S IBXDATA(Z)=$$NOPUNCT^IBCEF($G(IBZ(Z)))"
^IBA(364.7,116,3,0)="^364.73^3^3^3000830^^^^"
^IBA(364.7,116,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,116,3,2,0)="possible for the data element in the IBXDATA array. If the insurance for"
^IBA(364.7,116,3,3,0)="any COB sequence is MEDICARE WNR, output nothing for that insurance."
^IBA(364.7,117,0)="99^N^34^^^^N"
^IBA(364.7,117,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA,IBXSAVE(""OIID"") F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$G(IBZ(Z))'="""" S IBZ(Z)=$$NOPUNCT^IBCEF(IBZ(Z)) I IBZ(Z)'="""" S IBXDATA(Z)=IBZ(Z),IBXSAVE(""OIID"",Z)=1"
^IBA(364.7,117,3,0)="^^15^15^3070525^"
^IBA(364.7,117,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,117,3,2,0)="possible for the data element in the IBXDATA array.  If any other insured"
^IBA(364.7,117,3,3,0)="ID data is found, the data is output."
^IBA(364.7,117,3,4,0)=" "
^IBA(364.7,117,3,5,0)="OI2-3"
^IBA(364.7,117,3,6,0)="2330A/NM109"
^IBA(364.7,117,3,7,0)=" "
^IBA(364.7,117,3,8,0)="Merge IBZ=IBXDATA which is the list of other payer subscriber ID's "
^IBA(364.7,117,3,9,0)="returned from data element N-OTH INSURED ID.  Loop thru each of the "
^IBA(364.7,117,3,10,0)="possible other payers on the bill (F Z=1,2).  If that other insurance "
^IBA(364.7,117,3,11,0)="exists on the claim and the subscriber ID is not nil after stripping out "
^IBA(364.7,117,3,12,0)="the punctuation marks, then build IBXDATA(Z) array and also save the "
^IBA(364.7,117,3,13,0)="IBXSAVE(""OIID"",Z) array entry to indicate that a valid ID is being output "
^IBA(364.7,117,3,14,0)="for this other payer Z.  This is so the qualifier in OI2-11 can be output "
^IBA(364.7,117,3,15,0)="because we have the ID#."
^IBA(364.7,118,0)="162^N^32^^^^N"
^IBA(364.7,118,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$G(IBZ(Z))'="""" S IBXSAVE(""OINM"",Z)=$$NAME^IBCEFG1(IBZ(Z))"
^IBA(364.7,118,3,0)="^^4^4^2960815^^"
^IBA(364.7,118,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,118,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance,"
^IBA(364.7,118,3,3,0)="the name data is saved in the IBXSAVE array for later use, formatted in"
^IBA(364.7,118,3,4,0)="LAST^FIRST^MIDDLE format.  No output."
^IBA(364.7,119,0)="101^N^5^^^^N"
^IBA(364.7,119,1)="K IBXDATA N Z F Z=1,2 S:$P($G(IBXSAVE(""OINM"",Z)),U)'="""" IBXDATA(Z)=$P(IBXSAVE(""OINM"",Z),U)"
^IBA(364.7,119,3,0)="^^3^3^2960815^^"
^IBA(364.7,119,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,119,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,119,3,3,0)="any other insurance name data is found, the last name is output."
^IBA(364.7,120,0)="102^N^5^^^^N"
^IBA(364.7,120,1)="K IBXDATA N Z F Z=1,2 I $P($G(IBXSAVE(""OINM"",Z)),U,2)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OINM"",Z),U,2)"
^IBA(364.7,120,3,0)="^^3^3^2960815^^"
^IBA(364.7,120,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,120,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,120,3,3,0)="any other insurance name data is found, the first name is output."
^IBA(364.7,121,0)="103^N^5^^^^N"
^IBA(364.7,121,1)="K IBXDATA N Z F Z=1,2 I $P($G(IBXSAVE(""OINM"",Z)),U,3)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OINM"",Z),U,3)"
^IBA(364.7,121,3,0)="^^3^3^2960815^^"
^IBA(364.7,121,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,121,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,121,3,3,0)="any other insurance name data is found, the middle name is output."
^IBA(364.7,123,0)="163^N^28^^^^N"
^IBA(364.7,123,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$G(IBZ(Z))'="""" S IBXSAVE(""OIDEM"",Z)=IBZ(Z)"
^IBA(364.7,123,3,0)="^^3^3^2990903^^^^"
^IBA(364.7,123,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,123,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance,"
^IBA(364.7,123,3,3,0)="the data is saved in the IBXSAVE array for later use.  No output."
^IBA(364.7,126,0)="164^N^30^^^^N"
^IBA(364.7,126,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$G(IBZ(Z))'="""" S IBXSAVE(""OIEMP"",Z)=IBZ(Z)"
^IBA(364.7,126,3,0)="^^3^3^2991006^^^"
^IBA(364.7,126,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,126,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance,"
^IBA(364.7,126,3,3,0)="the employer data is saved in the IBXSAVE array for later use."
^IBA(364.7,127,0)="108^N^5^^^^N"
^IBA(364.7,127,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 N Z F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$P($G(IBXSAVE(""OIEMP"",Z)),U)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OIEMP"",Z),U)"
^IBA(364.7,127,3,0)="^364.73^3^3^3170719^^^^"
^IBA(364.7,127,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,127,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,127,3,3,0)="any other insurance employer data is found, the data is output."
^IBA(364.7,128,0)="109^N^5^^^^N"
^IBA(364.7,128,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,128,3,0)="^364.73^3^3^3140425^^^^"
^IBA(364.7,128,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,128,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,128,3,3,0)="any other insurance employer data is found, the data is output."
^IBA(364.7,129,0)="110^N^5^^^^N"
^IBA(364.7,129,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,129,3,0)="^364.73^4^4^3140425^^^^"
^IBA(364.7,129,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,129,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,129,3,3,0)="any other insurance employer data is found, the data is formatted as the 2"
^IBA(364.7,129,3,4,0)="character state abbreviation."
^IBA(364.7,131,0)="165^N^286^^^^N"
^IBA(364.7,131,1)="S IBXDATA=$S(+IBXDATA:""Y"",1:"""")"
^IBA(364.7,131,3,0)="^364.73^1^1^3200310^^"
^IBA(364.7,131,3,1,0)="Only report if Data is 1 set IBXDATA to Y"
^IBA(364.7,132,0)="166^N^5^^^^N"
^IBA(364.7,132,1)="N IBZ,W,DEFPOS,POS,HOF D F^IBCEF(""N-HCFA SERVICE LINE CALLABLE"",""IBZ"",,IBXIEN) S DEFPOS="""",W=0 X ""F  S W=$O(IBZ(W)) Q:'W  S POS=$P($G(IBZ(W)),U,3),HOF=(POS=11!(POS=12)) S:DEFPOS=""""""""!HOF DEFPOS=POS Q:HOF"" S IBXDATA=DEFPOS"
^IBA(364.7,132,3,0)="^364.73^13^13^3171011^^^^"
^IBA(364.7,132,3,1,0)="For professional claims only, this is the claim level place of service "
^IBA(364.7,132,3,2,0)="code.   IB patch 400 changes."
^IBA(364.7,132,3,3,0)=" "
^IBA(364.7,132,3,4,0)="Build the array with all professional line items (IBZ array)."
^IBA(364.7,132,3,5,0)="Loop through the line items looking for POS code of 11 or 12 (home or "
^IBA(364.7,132,3,6,0)="office).  If either 11 or 12 is found, then use that POS code as the "
^IBA(364.7,132,3,7,0)="claim level POS code.   If neither 11 nor 12 is found in the line level "
^IBA(364.7,132,3,8,0)="POS codes, then use the first POS code found in the line items as the "
^IBA(364.7,132,3,9,0)="claim level POS code."
^IBA(364.7,132,3,10,0)=" "
^IBA(364.7,132,3,11,0)="Previous to IB patch 400, this field was the admitting DX. The admitting"
^IBA(364.7,132,3,12,0)="DX and qualifier is now sent in CL1A-15 (Qualifier) and CL1A-16 (Admitting"
^IBA(364.7,132,3,13,0)="DX code)."
^IBA(364.7,134,0)="192^N^280^^^^N"
^IBA(364.7,134,1)="I $G(IBXDATA)'="""",$$WNRBILL^IBEFUNC(IBXIEN) S IBXDATA=""MEDICARE"""
^IBA(364.7,134,3,0)="^364.73^4^4^3040114^^^^"
^IBA(364.7,134,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,134,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,134,3,3,0)="element so there is no output.  If MEDICARE WNR is current insurance,"
^IBA(364.7,134,3,4,0)="mailing name is MEDICARE."
^IBA(364.7,135,0)="65^N^5^^^^N"
^IBA(364.7,135,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,6)"
^IBA(364.7,135,3,0)="^364.73^2^2^3070703^^^^"
^IBA(364.7,135,3,1,0)="Retrieves insured address line 2 data from IBXSAVE array previously"
^IBA(364.7,135,3,2,0)="extracted.  If data element's value is null, do not output."
^IBA(364.7,136,0)="190^N^26^^^^N"
^IBA(364.7,136,1)="S IBXDATA=$S($G(IBXSAVE(""CI3-2""))'="""":"""",'$$WNRBILL^IBEFUNC(IBXIEN):$$NOPUNCT^IBCEF(IBXDATA),1:"""")"
^IBA(364.7,136,3,0)="^^2^2^3050113^"
^IBA(364.7,136,3,1,0)="The GROUP NAME is not sent if the GROUP NUMBER is present. "
^IBA(364.7,136,3,2,0)="If this is an MRA Request, then nothing is sent. "
^IBA(364.7,137,0)="189^N^27^^^^N"
^IBA(364.7,137,1)="S IBXSAVE(""CI3-2"")=IBXDATA S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,,""/-:"") I $$WNRBILL^IBEFUNC(IBXIEN) S IBXDATA="""""
^IBA(364.7,137,3,0)="^364.73^1^1^3050113^^^^"
^IBA(364.7,137,3,1,0)="If the insurance is MEDICARE WNR, do not output the group number."
^IBA(364.7,138,0)="133^N^102^^^^N"
^IBA(364.7,138,1)="N Z,Z0,CT K IBXDATA S (Z,CT)=0,Z0=$G(^TMP($J,""IBLCT"")) F  S Z=$O(IBXSAVE(""OUTPT"",Z)) S:'Z ^TMP($J,""IBLCT"")=Z0+$O(IBXDATA(""""),-1) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) S IBXDATA(Z)=Z,CT=CT+1 D:CT>1 ID^IBCEF2(Z,""RX1 "")"
^IBA(364.7,138,3,0)="^^6^6^2990223^^^^"
^IBA(364.7,138,3,1,0)="^TMP($J,""IBLCT"") keeps track of the last service line # output.  Data  "
^IBA(364.7,138,3,2,0)="element is a group data element so multiple ocurrences of the data element"
^IBA(364.7,138,3,3,0)="are possible in the IBXDATA array.  Save the data in the IBXSAVE array for"
^IBA(364.7,138,3,4,0)="later use.  For every service line > 1, output the RX1 record id."
^IBA(364.7,138,3,5,0)="If the prescription references a service line already output, use that"
^IBA(364.7,138,3,6,0)="service line # to reference this prescription."
^IBA(364.7,139,0)="134^N^5^^^^N"
^IBA(364.7,139,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) S:$P(IBXSAVE(""OUTPT"",Z,""RX""),U)'=""""&($P(IBXSAVE(""OUTPT"",Z,""RX""),U,3)'="""") IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""RX""),U)"
^IBA(364.7,139,3,0)="^^3^3^2990223^^^"
^IBA(364.7,139,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,139,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,139,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,140,0)="137^N^5^^^^N"
^IBA(364.7,140,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""RX""),U,2)"
^IBA(364.7,140,3,0)="^^3^3^2960815^^"
^IBA(364.7,140,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,140,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,140,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,141,0)="135^N^5^^^^N"
^IBA(364.7,141,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) D PADNDC^IBCEF72(Z) S IBXDATA(Z)=$S($P(IBXSAVE(""OUTPT"",Z,""RX""),U,3)="""":"""",1:$TR($P(IBXSAVE(""OUTPT"",Z,""RX""),U,3),""-""))"
^IBA(364.7,141,3,0)="^364.73^3^3^3040323^^^^"
^IBA(364.7,141,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,141,3,2,0)="possible for the data element in the previously extract IBXSAVE array."
^IBA(364.7,141,3,3,0)="If we don't know the NDC#, output all 9's."
^IBA(364.7,142,0)="136^N^5^^^^N"
^IBA(364.7,142,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,142,3,0)="^364.73^3^3^3140425^^^"
^IBA(364.7,142,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,142,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,142,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,143,0)="138^N^5^^^^N"
^IBA(364.7,143,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) S IBXDATA(Z)=$S($P(IBXSAVE(""OUTPT"",Z,""RX""),U,5)'="""":$$DT^IBCEFG1($P(IBXSAVE(""OUTPT"",Z,""RX""),U,5),"""",""D8""),1:"""")"
^IBA(364.7,143,3,0)="^^4^4^2991115^^^^"
^IBA(364.7,143,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,143,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,143,3,3,0)="any service line data is found, the data is formatted as date in CCYYMMDD"
^IBA(364.7,143,3,4,0)="format."
^IBA(364.7,144,0)="1032^N^21^^^^N^0"
^IBA(364.7,144,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8"")) S:IBXDATA IBXSAVE(""INIT-DATE"")=1"
^IBA(364.7,144,3,0)="^364.73^2^2^3041216^^^^"
^IBA(364.7,144,3,1,0)="INITIAL TREATMENT DATE ON CLAIMS INVOLVING"
^IBA(364.7,144,3,2,0)=" SPINAL MANIPULATION FOR MEDICARE PART B"
^IBA(364.7,145,0)="178^N^5^^^^N"
^IBA(364.7,145,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""ADDR1""))"
^IBA(364.7,145,3,0)="^364.73^2^2^3090213^^^"
^IBA(364.7,145,3,1,0)="PRV-4"
^IBA(364.7,145,3,2,0)="Billing provider address line 1"
^IBA(364.7,146,0)="181^N^5^^^^N"
^IBA(364.7,146,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""CITY"")) I IBXDATA'="""" S IBXDATA=$TR(IBXDATA,""-/.,()'"",""  "")"
^IBA(364.7,146,3,0)="^^4^4^3090213^"
^IBA(364.7,146,3,1,0)="PRV-5"
^IBA(364.7,146,3,2,0)="Billing provider city name"
^IBA(364.7,146,3,3,0)="Get the city name from the IBXSAVE array, then strip out the"
^IBA(364.7,146,3,4,0)="standard city punctuation marks - converting ""-"" and ""/"" to spaces."
^IBA(364.7,147,0)="179^N^5^^^^N"
^IBA(364.7,147,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""ST""))"
^IBA(364.7,147,3,0)="^364.73^2^2^3090213^^^^"
^IBA(364.7,147,3,1,0)="PRV-6"
^IBA(364.7,147,3,2,0)="Get 2 character state code."
^IBA(364.7,148,0)="180^N^5^^^^N"
^IBA(364.7,148,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""ZIP"")),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,148,3,0)="^364.73^2^2^3090213^^^"
^IBA(364.7,148,3,1,0)="PRV-7"
^IBA(364.7,148,3,2,0)="Billing provider zip code"
^IBA(364.7,149,0)="183^N^5^^^^N"
^IBA(364.7,149,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""PHONE"")) I IBXDATA'="""" S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,149,3,0)="^^3^3^3090213^"
^IBA(364.7,149,3,1,0)="PRV-8"
^IBA(364.7,149,3,2,0)="Billing provider phone#"
^IBA(364.7,149,3,3,0)="Use the pay-to provider phone# and strip all punctuation."
^IBA(364.7,151,0)="186^N^5^^^^N"
^IBA(364.7,151,1)="I $P($G(IBXSAVE(""CADR"")),U,4)'="""" S IBXDATA=$TR($P(IBXSAVE(""CADR""),U,4),""-/.,()'"",""  "")"
^IBA(364.7,151,3,0)="^364.73^6^6^3030926^^^^"
^IBA(364.7,151,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,151,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,151,3,3,0)="element so there is no output.  Also don't output data element if its"
^IBA(364.7,151,3,4,0)="value is null."
^IBA(364.7,151,3,5,0)="This data relies on the presence of the IBXSAVE(""CADR"") array that should"
^IBA(364.7,151,3,6,0)="have been set in a previous data field."
^IBA(364.7,152,0)="185^N^5^^^^N"
^IBA(364.7,152,1)="D CHKADD^IBCEF7 I $P($G(IBXSAVE(""CADR"")),U)'="""" S IBXDATA=$P(IBXSAVE(""CADR""),U)"
^IBA(364.7,152,3,0)="^364.73^6^6^3040528^^^^"
^IBA(364.7,152,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,152,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,152,3,3,0)="element so there is no output.  Also don't output data element if its"
^IBA(364.7,152,3,4,0)="value is null."
^IBA(364.7,152,3,5,0)="This data relies on the presence of the IBXSAVE(""CADR"") array that should"
^IBA(364.7,152,3,6,0)="have been set in a previous data field."
^IBA(364.7,153,0)="187^N^5^^^^N"
^IBA(364.7,153,1)="I $P($G(IBXSAVE(""CADR"")),U,5)'="""" S IBXDATA=$$STATE^IBCEFG1($P(IBXSAVE(""CADR""),U,5))"
^IBA(364.7,153,3,0)="^364.73^6^6^3030926^^^^"
^IBA(364.7,153,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,153,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,153,3,3,0)="element so there is no output.  If header not yet extracted, format data"
^IBA(364.7,153,3,4,0)="as state's 2-character abbreviation."
^IBA(364.7,153,3,5,0)="This data relies on the presence of the IBXSAVE(""CADR"") array that should"
^IBA(364.7,153,3,6,0)="have been set in a previous data field."
^IBA(364.7,154,0)="188^N^5^^^^N"
^IBA(364.7,154,1)="K IBXDATA I $P($G(IBXSAVE(""CADR"")),U,6)'="""" S IBXDATA=$$NOPUNCT^IBCEF($P(IBXSAVE(""CADR""),U,6),1)"
^IBA(364.7,154,3,0)="^364.73^6^6^3071205^^^^"
^IBA(364.7,154,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,154,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,154,3,3,0)="element so there is no output.  Also don't output data element if its"
^IBA(364.7,154,3,4,0)="value is null."
^IBA(364.7,154,3,5,0)="This data relies on the presence of the IBXSAVE(""CADR"") array that should"
^IBA(364.7,154,3,6,0)="have been set in a previous data field."
^IBA(364.7,155,0)="193^N^115^^^^N"
^IBA(364.7,155,1)="K IBXDATA"
^IBA(364.7,155,3,0)="^^2^2^2981124^^^^"
^IBA(364.7,155,3,1,0)="Set ^TMP(""IBHDR"",$J) global node so the header data is not extracted again."
^IBA(364.7,155,3,2,0)="No output needed."
^IBA(364.7,156,0)="170^N^5^^^^N"
^IBA(364.7,156,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""SERVFACDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),0)"
^IBA(364.7,156,3,0)="^^1^1^3080929^"
^IBA(364.7,156,3,1,0)="SUB-2  lab/facility name"
^IBA(364.7,157,0)="171^N^5^^^^N"
^IBA(364.7,157,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""SERVFACDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),1)"
^IBA(364.7,157,3,0)="^^1^1^3080929^"
^IBA(364.7,157,3,1,0)="SUB-3  lab/facility address line 1"
^IBA(364.7,158,0)="600^N^241^^^^N"
^IBA(364.7,158,1)="S IBXDATA=$S(IBXDATA'="""":""Ref:""_IBXDATA,$O(^DGCR(399,IBXIEN,""PRV"",""B"",1,0)):""Ref:VAD000"",1:"""")"
^IBA(364.7,158,3,0)="^364.73^1^1^3041021^^^^"
^IBA(364.7,158,3,1,0)="ID of Referring Physician"
^IBA(364.7,159,0)="173^N^5^^^^N"
^IBA(364.7,159,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""SERVFACDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),""3S"")"
^IBA(364.7,159,3,0)="^^1^1^3080929^"
^IBA(364.7,159,3,1,0)="SUB-5  lab/facility state code"
^IBA(364.7,160,0)="174^N^5^^^^N"
^IBA(364.7,160,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""SERVFACDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),""3Z""),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,160,3,0)="^^1^1^3090429^"
^IBA(364.7,160,3,1,0)="SUB-6  lab/facility zip code"
^IBA(364.7,161,0)="167^N^120^^^^N"
^IBA(364.7,161,1)="S:$D(^TMP(""IBHDR"",$J)) IBXNOREQ=1 S:'$G(IBXDATA)&'$D(^TMP(""IBHDR"",$J)) IBXERR=""Batch number could not be determined"" K:$G(IBXERR)'="""" IBXDATA S:$G(IBXDATA)'="""" IBXSAVE(""BATCH"")=IBXDATA"
^IBA(364.7,161,3,0)="^^3^3^2960815^^^^"
^IBA(364.7,161,3,1,0)="Set an error condition if no batch # and the header fields have not"
^IBA(364.7,161,3,2,0)="already been extracted.  No output if error condition or header fields"
^IBA(364.7,161,3,3,0)="have already been extracted."
^IBA(364.7,162,0)="168^N^121^^^^N"
^IBA(364.7,162,1)="K:$D(^TMP(""IBHDR"",$J)) IBXDATA S:'$D(IBXDATA) IBXNOREQ=1 I $D(IBXDATA) S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,162,3,0)="4^^4^4^2991115^^^^"
^IBA(364.7,162,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR"",$J) will"
^IBA(364.7,162,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,162,3,3,0)="element so there is no output.  If header data not already extracted,"
^IBA(364.7,162,3,4,0)="format date as CCYYMMDD."
^IBA(364.7,163,0)="169^N^5^^^^N"
^IBA(364.7,163,1)="K:$D(^TMP(""IBHDR"",$J)) IBXDATA S:'$D(IBXDATA) IBXNOREQ=1 S IBXDATA=$G(IBXSAVE(""BATCH""))"
^IBA(364.7,163,3,0)="^^4^4^2960815^^^^"
^IBA(364.7,163,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR"",$J) will"
^IBA(364.7,163,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,163,3,3,0)="element so there is no output.  If header data not already extracted,"
^IBA(364.7,163,3,4,0)="retrieve data element from IBXSAVE array previously extracted."
^IBA(364.7,164,0)="106^N^125^^^^N"
^IBA(364.7,164,1)="N Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$D(IBZ(Z)) S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBZ(Z))"
^IBA(364.7,164,3,0)="^364.73^4^4^3050201^^^^"
^IBA(364.7,164,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,164,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance"
^IBA(364.7,164,3,3,0)="prior payment data is found, the data is formatted as a numeric including"
^IBA(364.7,164,3,4,0)="cents, without the decimals."
^IBA(364.7,165,0)="112^N^126^^^^N"
^IBA(364.7,165,1)="N A,Z,Q,IBZ K IBXSAVE(""OUTPT"") D SET1^IBCEF1(IBXIEN,.A,.IBZ,.IBXDATA,.IBXNOREQ) S Z=0,Q=$G(@A) F  S Z=$O(IBZ(Z)) S:'Z @A=Q Q:'Z  M IBXSAVE(""OUTPT"",Z)=IBZ(Z) S Q=Q+1,IBXDATA(Z)=Q D:Z>1 ID^IBCEF2(Z,""PRF "") D SVITM^IBCEF2(.IBXSAVE,Z)"
^IBA(364.7,165,3,0)="^364.73^4^4^3000918^^^^"
^IBA(364.7,165,3,1,0)="^TMP($J,""IBLCT"") keeps track of the last service line # output.  Data"
^IBA(364.7,165,3,2,0)="element is a group data element so multiple ocuurences of the data element"
^IBA(364.7,165,3,3,0)="are possible in the IBXDATA array.  Save the data in the IBXSAVE array for"
^IBA(364.7,165,3,4,0)="later use.  For every service line > 1, output the PRF record id."
^IBA(364.7,166,0)="113^N^5^^^^N"
^IBA(364.7,166,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P(IBXSAVE(""OUTPT"",Z),U,6)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,6) I IBXDATA(Z)=""CJ"",'$$WNRBILL^IBEFUNC(IBXIEN) S IBXDATA(Z)=""HC"""
^IBA(364.7,166,3,0)="^^3^3^2991222^^^^"
^IBA(364.7,166,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,166,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,166,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,167,0)="114^N^5^^^^N"
^IBA(364.7,167,1)="K IBXDATA S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN) N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE(""OUTPT"",Z),U,8)="""":$$DOLLAR^IBCEFG1(""0.00""),1:$$DOLLAR^IBCEFG1($P(IBXSAVE(""OUTPT"",Z),U,8)*$P(IBXSAVE(""OUTPT"",Z),U,9)))"
^IBA(364.7,167,3,0)="^364.73^5^5^3140211^^^^"
^IBA(364.7,167,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,167,3,2,0)="possible for the data element in the previously extract IBXSAVE array. The"
^IBA(364.7,167,3,3,0)="data is calculated by unit charge * # of units.  If any service line data is"
^IBA(364.7,167,3,4,0)="found, the data is formatted as a numeric including cents, without the"
^IBA(364.7,167,3,5,0)="decimal."
^IBA(364.7,168,0)="115^N^5^^^^N"
^IBA(364.7,168,1)="K IBXDATA N Z,Z0,Q S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN),Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,4),Q=$S(Z0'=7:9,1:12) S:$P(IBXSAVE(""OUTPT"",Z),U,Q)'="""" IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,Q) S:IBXDATA(Z)<1 IBXDATA(Z)=1"
^IBA(364.7,168,3,0)="^^6^6^2990901^^^^"
^IBA(364.7,168,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,168,3,2,0)="possible for the data element in the previously extracted IBXSAVE array.  If"
^IBA(364.7,168,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,168,3,4,0)="If the type of service is not 7 (anesthesia), the units are output.  If the"
^IBA(364.7,168,3,5,0)="type of service is anesthesia, the anesthesia minutes are output.  If the #"
^IBA(364.7,168,3,6,0)="of units is less than 1, 1 is the default."
^IBA(364.7,169,0)="116^N^5^^^^N"
^IBA(364.7,169,1)="K IBXDATA S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN) N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P(IBXSAVE(""OUTPT"",Z),U,3)'="""" IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,3)"
^IBA(364.7,169,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,169,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,169,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,169,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,170,0)="117^N^5^^^^N"
^IBA(364.7,170,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,170,3,0)="^364.73^3^3^3140425^^^^"
^IBA(364.7,170,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,170,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,170,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,171,0)="118^N^5^^^^N"
^IBA(364.7,171,1)="K IBXDATA S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN) N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P(IBXSAVE(""OUTPT"",Z),U)'="""" IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U)"
^IBA(364.7,171,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,171,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,171,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,171,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,172,0)="119^N^5^^^^N"
^IBA(364.7,172,1)="N Z,Z0 K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","")'="""" IBXDATA(Z)=$P(Z0,"","")"
^IBA(364.7,172,3,0)="^^4^4^2990901^^^"
^IBA(364.7,172,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,172,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,172,3,3,0)="any service line data is found, the data is output.  Data is taken from the"
^IBA(364.7,172,3,4,0)="first ',' delimited piece of the extracted data."
^IBA(364.7,173,0)="120^N^5^^^^N"
^IBA(364.7,173,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","",2) IBXDATA(Z)=$P(Z0,"","",2)"
^IBA(364.7,173,3,0)="^^4^4^2990901^^^"
^IBA(364.7,173,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,173,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,173,3,3,0)="any service line data is found, the data is output.  Data is taken from the"
^IBA(364.7,173,3,4,0)="second ',' delimited piece of the extracted data.    "
^IBA(364.7,174,0)="121^N^5^^^^N"
^IBA(364.7,174,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","",3) IBXDATA(Z)=$P(Z0,"","",3)"
^IBA(364.7,174,3,0)="^^4^4^2990901^^^"
^IBA(364.7,174,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,174,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,174,3,3,0)="any service line data is found, the data is output.  Data is taken from the"
^IBA(364.7,174,3,4,0)="third ',' delimited piece of the extracted data.    "
^IBA(364.7,175,0)="122^N^5^^^^N"
^IBA(364.7,175,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","",4) IBXDATA(Z)=$P(Z0,"","",4)"
^IBA(364.7,175,3,0)="^^4^4^2990901^^^"
^IBA(364.7,175,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,175,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,175,3,3,0)="any service line data is found, the data is output.  Data is taken from the"
^IBA(364.7,175,3,4,0)="fourth ',' delimited piece of the extracted data.    "
^IBA(364.7,176,0)="123^N^8^^^^N"
^IBA(364.7,176,1)="D INS^IBCEF2"
^IBA(364.7,176,3,0)="^364.73^4^4^3180131^^^^"
^IBA(364.7,176,3,1,0)="^TMP($J,""IBLCT"") keeps track of the last service line # output.  Data  "
^IBA(364.7,176,3,2,0)="element is a group data element so multiple occurences of the data element"
^IBA(364.7,176,3,3,0)="are possible in the IBXDATA array.  Save the data in the IBXSAVE array for"
^IBA(364.7,176,3,4,0)="later use.  For every service line > 1, output the INS record id."
^IBA(364.7,177,0)="124^N^5^^^^N"
^IBA(364.7,177,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""INPT"",Z)) Q:'Z  S:$P(IBXSAVE(""INPT"",Z),U)'="""" IBXDATA(Z)=$P(IBXSAVE(""INPT"",Z),U)"
^IBA(364.7,177,3,0)="^^3^3^2990211^^^"
^IBA(364.7,177,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,177,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,177,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,178,0)="126^N^5^^^^N"
^IBA(364.7,178,1)="D INS05^IBCEF2"
^IBA(364.7,178,3,0)="^364.73^3^3^3190103^^^^"
^IBA(364.7,178,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,178,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,178,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,179,0)="127^N^5^^^^N"
^IBA(364.7,179,1)="S IBXDATA="""""
^IBA(364.7,179,3,0)="^364.73^1^1^3190103^^^^"
^IBA(364.7,179,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,180,0)="130^N^5^^^^N"
^IBA(364.7,180,1)="D INS09^IBCEF2"
^IBA(364.7,180,3,0)="^364.73^4^4^3180131^^^^"
^IBA(364.7,180,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,180,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,180,3,3,0)="any service line data is found, the data is formatted as a numeric including"
^IBA(364.7,180,3,4,0)="cents, without the decimal."
^IBA(364.7,181,0)="128^N^5^^^^N"
^IBA(364.7,181,1)="D INS07^IBCEF2"
^IBA(364.7,181,3,0)="^364.73^1^1^3180131^^^^"
^IBA(364.7,181,3,1,0)="Save the data element in the IBXSAVE(""PMOD"") array for later use."
^IBA(364.7,182,0)="129^N^5^^^^N"
^IBA(364.7,182,1)="N Z S Z=0 F  S Z=$O(IBXSAVE(""PMOD"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""PMOD"",Z),"","",2) I '$O(IBXSAVE(""PMOD"",Z)) K IBXSAVE(""PMOD"")"
^IBA(364.7,182,3,0)="^364.73^2^2^3001005^^^^"
^IBA(364.7,182,3,1,0)="This data element relies on the existence of the variable IBXSAVE(""PMOD"")"
^IBA(364.7,182,3,2,0)="previously extracted."
^IBA(364.7,183,0)="131^N^5^^^^N"
^IBA(364.7,183,1)="N Z S IBXNOREQ='$$REQ^IBCEF1(3,""O"",IBXIEN) K IBXDATA Q:IBXNOREQ!$$INPAT^IBCEF(IBXIEN,1)  S Z=$$SERVDT^IBCEF(IBXIEN,8,1),Q=0 S:Z'="""" IBXSAVE(""DATE"")=Z D RCDT^IBCEFG1(.IBXSAVE,.IBXDATA,Z)"
^IBA(364.7,183,3,0)="^364.73^4^4^3021217^^^^"
^IBA(364.7,183,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,183,3,2,0)="If this is an inpatient bill do not send this data element.  If outpatient,"
^IBA(364.7,183,3,3,0)="output IBXSAVE(""DATE"") - STATEMENT FROM DATE or the date from the"
^IBA(364.7,183,3,4,0)="associated procedure, if it can be determined."
^IBA(364.7,184,0)="132^N^5^^^^N"
^IBA(364.7,184,1)="S IBXDATA="""""
^IBA(364.7,184,3,0)="^364.73^1^1^3140416^^"
^IBA(364.7,184,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,185,0)="194^N^5^^^^N"
^IBA(364.7,185,1)="S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN) K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P(IBXSAVE(""OUTPT"",Z),U,5)'="""" IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,5)"
^IBA(364.7,185,3,0)="^^3^3^2990901^^^"
^IBA(364.7,185,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,185,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,185,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,186,0)="1033^N^29^^^^N^0"
^IBA(364.7,186,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8"")) S:IBXDATA IBXSAVE(""XRAY-DATE"")=1"
^IBA(364.7,186,3,0)="^364.73^1^1^3041216^^^^"
^IBA(364.7,186,3,1,0)="FIND THE LAST XRAY DATE WHEN CLAIM INVOLVES A SPINAL MANIPULATION"
^IBA(364.7,188,0)="195^N^351^^^^N"
^IBA(364.7,188,1)="S IBXDATA=$$NOPUNCT^IBCEF($G(IBXDATA))"
^IBA(364.7,189,0)="125^N^5^^^^N"
^IBA(364.7,189,1)="K IBXDATA N Z,PCX S Z=0 F  S Z=$O(IBXSAVE(""INPT"",Z)) Q:'Z  S PCX=$P(IBXSAVE(""INPT"",Z),U,2) S:PCX'="""" IBXDATA(Z)=$S(+$G(VC80):PCX,1:$$PRCD^IBCEF1(PCX_"";ICPT(""))"
^IBA(364.7,189,3,0)="^364.73^3^3^3180131^^^^"
^IBA(364.7,189,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,189,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,189,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,190,0)="197^N^100^^^^N"
^IBA(364.7,190,1)="K IBXSAVE"
^IBA(364.7,190,3,0)="^^1^1^2990405^^^^"
^IBA(364.7,190,3,1,0)="Clean up IBXSAVE array.  No output."
^IBA(364.7,191,0)="198^N^100^^^^N"
^IBA(364.7,191,1)="K IBXSAVE"
^IBA(364.7,191,3,0)="^^1^1^2990218^^^"
^IBA(364.7,191,3,1,0)="Clean up the IBXSAVE array.  No output."
^IBA(364.7,192,0)="1034^N^5^^^^N^0"
^IBA(364.7,192,1)="S IBXDATA="""""
^IBA(364.7,192,3,0)="^^1^1^3140416^"
^IBA(364.7,192,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,193,0)="1035^N^5^^^^N^0"
^IBA(364.7,193,1)="K IBXDATA S IBIFN=IBXIEN S IBXDATA=""A"""
^IBA(364.7,193,3,0)="^364.73^2^2^3140324^^^"
^IBA(364.7,193,3,1,0)="ALWAYS SET TO ""A""."
^IBA(364.7,193,3,2,0)="MEDICARE ASSIGNMENT CODE: A = ASSIGNED and C = Not Assigned."
^IBA(364.7,194,0)="175^N^124^^^^N"
^IBA(364.7,194,1)="I $D(^TMP(""IBHDR"",$J)) K IBXDATA S IBXNOREQ=1"
^IBA(364.7,194,3,0)="^^4^4^2980724^^^^"
^IBA(364.7,194,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR"",$J) will"
^IBA(364.7,194,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,194,3,3,0)="element so there is no output.  Also don't output data element if its"
^IBA(364.7,194,3,4,0)="value is null."
^IBA(364.7,195,0)="196^N^5^^^^N"
^IBA(364.7,195,1)="K IBXDATA"
^IBA(364.7,195,3,0)="^^1^1^3070808^"
^IBA(364.7,195,3,1,0)="This data is being moved to CI5[3] with eClaims Iteration III."
^IBA(364.7,196,0)="1036^N^111^^^^N^0"
^IBA(364.7,196,1)="I $G(IBXDATA)'="""" S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA),IBXSAVE(""MAMMO"")=1"
^IBA(364.7,196,3,0)="^^3^3^3060117^"
^IBA(364.7,196,3,1,0)="Extract and format the mammo# cert number from the claim.  If a mammo# is "
^IBA(364.7,196,3,2,0)="present for the claim then save that fact in IBXSAVE for later usage for "
^IBA(364.7,196,3,3,0)="the mammo# qualifier field."
^IBA(364.7,197,0)="1037^N^36^^^^N^0"
^IBA(364.7,197,1)="I $$FT^IBCEF(IBXIEN)=3 K IBXDATA"
^IBA(364.7,197,3,0)="^364.73^2^2^3041216^^^^"
^IBA(364.7,197,3,1,0)="SPINAL MANIP. CONDITION CODE; A = Acute Condition, C = Chronic Condition, D = Non-Acute"
^IBA(364.7,197,3,2,0)="E = Non-Life Threatening, F = Routine, G = Symptomatic, M = Acute Manifestation of a Chronic Condition"
^IBA(364.7,198,0)="1038^N^22^^^^N^0"
^IBA(364.7,198,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8"")) S:IBXDATA IBXSAVE(""ACUT-DATE"")=1"
^IBA(364.7,198,3,0)="^364.73^2^2^3041216^^^^"
^IBA(364.7,198,3,1,0)="Required when sequence 51 piece 7 (Spinal Manipulation Nature of Condifion Code) = A or M on spinal"
^IBA(364.7,198,3,2,0)="manipulation claims and the payer is Medicare"
^IBA(364.7,199,0)="209^N^131^^^^N"
^IBA(364.7,199,1)="S IBXDATA=""PRV """
^IBA(364.7,199,3,0)="^^1^1^3080828^"
^IBA(364.7,199,3,1,0)="PRV-1.  Literal ""PRV ""."
^IBA(364.7,200,0)="215^N^131^^^^N"
^IBA(364.7,200,1)="S IBXDATA=""PT2 """
^IBA(364.7,200,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,200,3,1,0)="Output RECORD ID for PT2 record."
^IBA(364.7,201,0)="216^N^131^^^^N"
^IBA(364.7,201,1)="S IBXDATA=""CL1 """
^IBA(364.7,201,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,201,3,1,0)="Output RECORD ID for CL1 record."
^IBA(364.7,202,0)="217^N^131^^^^N"
^IBA(364.7,202,1)="S IBXDATA=""UB1 """
^IBA(364.7,202,3,0)="^^1^1^2990405^^^^"
^IBA(364.7,202,3,1,0)="Output RECORD ID for UB1 record."
^IBA(364.7,203,0)="1039^N^5^^^^N^0"
^IBA(364.7,203,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""SERVFACDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),2)"
^IBA(364.7,203,3,0)="^^1^1^3080929^"
^IBA(364.7,203,3,1,0)="SUB-12  lab/facility address line 2"
^IBA(364.7,205,0)="1041^N^274^^^^N^0"
^IBA(364.7,205,1)="S IBXDATA=$$SNDS2^IBCEFP(.IBXDATA,2)"
^IBA(364.7,205,3,0)="^^8^8^3140728^"
^IBA(364.7,205,3,1,0)="If the service is performed at an outside facility, output the"
^IBA(364.7,205,3,2,0)="service facility type of facility if defined for the outside facility."
^IBA(364.7,205,3,3,0)="If none defined, output the default of 'FA' for non-lab and 'LI' for lab."
^IBA(364.7,205,3,4,0)="With Patch IB*2.0*432 always send '77' if the record is created."
^IBA(364.7,205,3,5,0)="With Patch IB*2.0*447 always send if Facility Name is defined in SUB "
^IBA(364.7,205,3,6,0)="record.  Check by using $$SENDSF^IBCEF79(IBXIEN)."
^IBA(364.7,205,3,7,0)="MRD;IB*2.0*516 - The function $$SENDSF^IBCEF79 now will always return"
^IBA(364.7,205,3,8,0)="'1'."
^IBA(364.7,206,0)="1042^N^274^^^^N^0"
^IBA(364.7,206,1)="S IBXDATA=$$SNDS2^IBCEFP(.IBXDATA,3)"
^IBA(364.7,206,3,0)="^^7^7^3140728^"
^IBA(364.7,206,3,1,0)="Output the service facility entity as a non-person (2) if service was"
^IBA(364.7,206,3,2,0)="performed at an outside facility."
^IBA(364.7,206,3,3,0)="With Patch IB*2.0*432 always send 2 if the record is created."
^IBA(364.7,206,3,4,0)="With Patch IB*2.0*447 always send 2 if the Facility Name is defined in "
^IBA(364.7,206,3,5,0)="the SUB record. Determine by using $$SENDSF^IBCEF79(IBXIEN)."
^IBA(364.7,206,3,6,0)="MRD;IB*2.0*516 - The function $$SENDSF^IBCEF79 now will always return"
^IBA(364.7,206,3,7,0)="'1'."
^IBA(364.7,207,0)="1043^N^268^^^^N^0"
^IBA(364.7,207,1)="S IBXDATA="""""
^IBA(364.7,207,3,0)="^^1^1^3140416^"
^IBA(364.7,207,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,208,0)="1044^N^5^^^^N^0"
^IBA(364.7,208,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,1)),U,1)"
^IBA(364.7,208,3,0)="^364.73^2^2^3041221^^^^"
^IBA(364.7,208,3,1,0)="The ids returned are screened for valid id qualifiers for the SUB2 record."
^IBA(364.7,208,3,2,0)="Output the first 'other' id qualifier."
^IBA(364.7,209,0)="1045^N^5^^^^N^0"
^IBA(364.7,209,1)="D CLEANUP^IBCEFP1(.IBXSAVE) D:$$SNDS2^IBCEFP(.IBXDATA,1.5) ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1) S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,0)),U,1)"
^IBA(364.7,209,3,0)="^364.73^3^3^3101104^^"
^IBA(364.7,209,3,1,0)="Build the IBXSAVE array with the data needed to complete the SUB2 record."
^IBA(364.7,209,3,2,0)="Only build if $$SENDSF^IBCEF79(IBXIEN) is true.  We only send "
^IBA(364.7,209,3,3,0)="SUB2 if there is a SUB record."
^IBA(364.7,211,0)="1046^N^5^^^^N^0"
^IBA(364.7,211,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,0)),U,2)"
^IBA(364.7,211,3,0)="^364.73^2^2^3041221^^^^"
^IBA(364.7,211,3,1,0)="If the tax id for the outside facility exists, output it here and kill"
^IBA(364.7,211,3,2,0)="IBXSAVE(""EIN"") to clean up."
^IBA(364.7,212,0)="1047^N^5^^^^N^0"
^IBA(364.7,212,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,0)),U,3)"
^IBA(364.7,213,0)="1048^N^5^^^^N"
^IBA(364.7,213,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,0)),U,4)"
^IBA(364.7,216,0)="206^N^131^^^^N"
^IBA(364.7,216,1)="S:'$D(^TMP(""IBHDR"",$J)) IBXDATA=""GEN "" I $D(^TMP(""IBHDR"",$J)) S IBXNOREQ=1"
^IBA(364.7,216,3,0)="^^4^4^2960815^^^^"
^IBA(364.7,216,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR"",$J) will"
^IBA(364.7,216,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,216,3,3,0)="element so there is no output.  If no header already extracted, output"
^IBA(364.7,216,3,4,0)="record id for 'GEN' record."
^IBA(364.7,219,0)="207^N^131^^^^N"
^IBA(364.7,219,1)="S IBXDATA=""SUB """
^IBA(364.7,219,3,0)="^^1^1^2990830^^^^"
^IBA(364.7,219,3,1,0)="Output the record id for the 'SUB' record."
^IBA(364.7,220,0)="210^N^131^^^^N"
^IBA(364.7,220,1)="I $D(IBXDATA) S IBXDATA=""CI1 """
^IBA(364.7,220,3,0)="^364.73^4^4^3040114^^^^"
^IBA(364.7,220,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,220,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,220,3,3,0)="element so there is no output.  If no header already extracted, output"
^IBA(364.7,220,3,4,0)="the record id for the 'CI1' record."
^IBA(364.7,221,0)="212^N^131^^^^N"
^IBA(364.7,221,1)="S IBXDATA=""CI2 """
^IBA(364.7,221,3,0)="^^1^1^2981124^^^^"
^IBA(364.7,221,3,1,0)="Output RECORD ID for CI2 record."
^IBA(364.7,222,0)="213^N^131^^^^N"
^IBA(364.7,222,1)="S IBXDATA=""CI3 """
^IBA(364.7,222,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,222,3,1,0)="Output RECORD ID for CI3 record."
^IBA(364.7,223,0)="214^N^131^^^^N"
^IBA(364.7,223,1)="S IBXDATA=""PT1 """
^IBA(364.7,223,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,223,3,1,0)="Output RECORD ID for PT1 record."
^IBA(364.7,224,0)="230^N^101^^^^N"
^IBA(364.7,224,1)="N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI2 "")"
^IBA(364.7,224,3,0)="^364.73^7^7^3040702^^^^"
^IBA(364.7,224,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,224,3,2,0)="possible for the data element in the IBXDATA array.  The IBXSAVE(1) variable"
^IBA(364.7,224,3,3,0)="holds the indicator of which insurance [(P)rimary/(S)econdary/(T)ertiary] is"
^IBA(364.7,224,3,4,0)="currently responsible for the bill.  Using this data as a guide, the next"
^IBA(364.7,224,3,5,0)="insurance for the primary is secondary, then tertiary.  For secondary, it's"
^IBA(364.7,224,3,6,0)="primary then tertiary, and for tertiary, it's primary, then secondary. For"
^IBA(364.7,224,3,7,0)="other than the first occurrence, the RECORD ID 'OI2 ' must be output."
^IBA(364.7,225,0)="1051^N^5^^^^N"
^IBA(364.7,225,1)="S IBXDATA="""" I $G(IBXSAVE(""MAMMO"")) S IBXDATA=""EW"" K IBXSAVE(""MAMMO"")"
^IBA(364.7,225,3,0)="^^3^3^3060124^"
^IBA(364.7,225,3,1,0)="This is the mammography certification number qualifier in CL1A-9.  If "
^IBA(364.7,225,3,2,0)="there is a mammo cert number on the claim and transmitted in CL1A-6 then "
^IBA(364.7,225,3,3,0)="this field will be sent as ""EW""."
^IBA(364.7,226,0)="226^N^5^^^^N"
^IBA(364.7,226,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,1)),U,1)"
^IBA(364.7,226,3,0)="^364.73^1^1^3101104^^"
^IBA(364.7,226,3,1,0)="CI1A-2 site suffix or facility ID qualifier.  This is hard-coded to be G5."
^IBA(364.7,227,0)="227^N^5^^^^N"
^IBA(364.7,227,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,1)),U,2)"
^IBA(364.7,227,3,0)="^^4^4^3060125^"
^IBA(364.7,227,3,1,0)="Always output 4 characters containing the site suffix padded on the left "
^IBA(364.7,227,3,2,0)="by 0's if necessary.  "
^IBA(364.7,227,3,3,0)="Examples:  For station# 528, this field is sent as ""0000"""
^IBA(364.7,227,3,4,0)="           For station# 605GC, this field is sent as ""00GC"""
^IBA(364.7,228,0)="1056^N^131^^^^N"
^IBA(364.7,228,1)="S IBXDATA=""OPR7"""
^IBA(364.7,228,3,0)="^^1^1^3030814^^^^"
^IBA(364.7,228,3,1,0)="Record ID for Supervising Provider Name, suffix, qualifier, and ID number."
^IBA(364.7,229,0)="1057^N^5^^^^N"
^IBA(364.7,229,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,229,3,0)="^^1^1^3101108^"
^IBA(364.7,229,3,1,0)="Builds IBXSAVE array for OPR7 record. No output."
^IBA(364.7,230,0)="1058^N^5^^^^N^0"
^IBA(364.7,230,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,""NAME"")),U,1)"
^IBA(364.7,230,3,0)="^364.73^3^3^3101108^^^^"
^IBA(364.7,230,3,1,0)="The FULL NAME data extracted,by SPRVSING PROV FULL NAME,"
^IBA(364.7,230,3,2,0)="into the array IBXSAVE is parsed and the appropiate piece (1)"
^IBA(364.7,230,3,3,0)="LAST NAME, is stored into IBXDATA for transmission."
^IBA(364.7,231,0)="240^N^131^^^^N"
^IBA(364.7,231,1)="S IBXDATA=""OC1 """
^IBA(364.7,231,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,231,3,1,0)="Output RECORD ID for OC1 record."
^IBA(364.7,232,0)="1059^N^5^^^^N"
^IBA(364.7,232,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,""NAME"")),U,2)"
^IBA(364.7,232,3,0)="^364.73^3^3^3101108^^^^"
^IBA(364.7,232,3,1,0)="The FULL NAME data extracted,by SPRVSING PROV FULL NAME,"
^IBA(364.7,232,3,2,0)="into the array IBXSAVE is parsed and the appropiate piece (2)"
^IBA(364.7,232,3,3,0)="FIRST NAME, is stored into IBXDATA for transmission."
^IBA(364.7,233,0)="242^N^131^^^^N"
^IBA(364.7,233,1)="S IBXDATA=""OS1 """
^IBA(364.7,233,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,233,3,1,0)="Output RECORD ID for OS1 record."
^IBA(364.7,234,0)="243^N^131^^^^N"
^IBA(364.7,234,1)="S IBXDATA=""PC1 """
^IBA(364.7,234,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,234,3,1,0)="Output RECORD ID for PC1 record"
^IBA(364.7,235,0)="244^N^131^^^^N"
^IBA(364.7,235,1)="S IBXDATA=""VC1 """
^IBA(364.7,235,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,235,3,1,0)="Output RECORD ID for VC1 record."
^IBA(364.7,236,0)="245^N^131^^^^N"
^IBA(364.7,236,1)="S IBXDATA=""CC1 """
^IBA(364.7,236,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,236,3,1,0)="Output RECORD ID for CC1 record."
^IBA(364.7,237,0)="246^N^131^^^^N"
^IBA(364.7,237,1)="S IBXDATA=""DC1 """
^IBA(364.7,237,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,237,3,1,0)="Output RECORD ID for DC1 record."
^IBA(364.7,239,0)="249^N^131^^^^N"
^IBA(364.7,239,1)="S IBXDATA=""OI1 """
^IBA(364.7,239,3,0)="^^1^1^2960815^^^^"
^IBA(364.7,239,3,1,0)="Output the RECORD ID for 'OI1' record."
^IBA(364.7,240,0)="250^N^131^^^^N"
^IBA(364.7,240,1)="S IBXDATA=""OI2 """
^IBA(364.7,240,3,0)="^^1^1^2960815^^"
^IBA(364.7,240,3,1,0)="Output RECORD ID for 'OI2' record."
^IBA(364.7,241,0)="251^N^131^^^^N"
^IBA(364.7,241,1)="S IBXDATA=""PRF """
^IBA(364.7,241,3,0)="^^1^1^2990901^^^"
^IBA(364.7,241,3,1,0)="Output the record id for 'PRF' record."
^IBA(364.7,242,0)="252^N^131^^^^N"
^IBA(364.7,242,1)="S IBXDATA=""INS """
^IBA(364.7,242,3,0)="^^1^1^2960815^^"
^IBA(364.7,242,3,1,0)="Output record id for 'INS' record."
^IBA(364.7,243,0)="253^N^131^^^^N"
^IBA(364.7,243,1)="S IBXDATA=""RX1 """
^IBA(364.7,243,3,0)="^^1^1^2960815^^"
^IBA(364.7,243,3,1,0)="Output record id for 'RX1' record."
^IBA(364.7,244,0)="1060^N^5^^^^N^0"
^IBA(364.7,244,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,""NAME"")),U,3)"
^IBA(364.7,244,3,0)="^364.73^3^3^3101108^^^^"
^IBA(364.7,244,3,1,0)="The FULL NAME data extracted,by SPRVSING PROV FULL NAME,"
^IBA(364.7,244,3,2,0)="into the array IBXSAVE is parsed and the appropiate piece (3)"
^IBA(364.7,244,3,3,0)="MIDDLE NAME, is stored into IBXDATA for transmission."
^IBA(364.7,245,0)="1061^N^5^^^^N^0"
^IBA(364.7,245,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,""NAME"")),U,5)"
^IBA(364.7,245,3,0)="^364.73^3^3^3101108^^^^"
^IBA(364.7,245,3,1,0)="The FULL NAME data extracted,by SPRVSING PROV FULL NAME,"
^IBA(364.7,245,3,2,0)="into the array IBXSAVE is parsed and the appropiate piece (5)"
^IBA(364.7,245,3,3,0)="NAME SUFFIX, is stored into IBXDATA for transmission."
^IBA(364.7,246,0)="1062^N^5^^^^N^0"
^IBA(364.7,246,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,0)),U,3)"
^IBA(364.7,247,0)="1063^N^5^^^^N^0"
^IBA(364.7,247,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,0)),U,4)"
^IBA(364.7,250,0)="489^N^142^^^^N"
^IBA(364.7,250,1)="N Z S Z=$J("""",+$P($G(^IBE(350.9,1,1)),U,27)),IBXDATA=Z_IBXDATA K ^UTILITY(""VADM"",$J),^UTILITY(""VAPA"",$J),^TMP(""IBXSAVE"",$J),IBXSAVE"
^IBA(364.7,250,3,0)="^^3^3^2990223^^"
^IBA(364.7,250,3,1,0)="If the HCFA ADDRESS COLUMN parameter exists, move the text over to this"
^IBA(364.7,250,3,2,0)="column by adding spaces at the start of it.  Initializes utility globals"
^IBA(364.7,250,3,3,0)="and variables used in this form."
^IBA(364.7,251,0)="490^N^280^^^^N"
^IBA(364.7,251,1)="N Z S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA=""MEDICARE"" S Z="""",$P(Z,"" "",+$P($G(^IBE(350.9,1,1)),U,27)+1)="""" S IBXSAVE(""INDENT"")=Z S:IBXDATA'="""" IBXDATA=Z_IBXDATA"
^IBA(364.7,251,3,0)="^364.73^4^4^3001129^^^^"
^IBA(364.7,251,3,1,0)="If the HCFA ADDRESS COLUMN parameter exists, move the text over to"
^IBA(364.7,251,3,2,0)="this column by adding spaces at the start of it.  Save the indent parameter"
^IBA(364.7,251,3,3,0)="in IBXSAVE(""INDENT"") for future use.  If the current insurance is MEDICARE"
^IBA(364.7,251,3,4,0)="WNR, output 'MEDICARE'."
^IBA(364.7,252,0)="576^N^192^^^^N"
^IBA(364.7,252,1)="N Y,Z K IBXSAVE(""CADR"") I $O(IBXDATA(0)) S Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="""" $P(IBXSAVE(""CADR""),U,6)=Y F Z=1:1:5,7 S:$D(IBXDATA(Z)) $P(IBXSAVE(""CADR""),U,Z)=IBXDATA(Z) I Z=7 D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,,1)"
^IBA(364.7,252,3,0)="^^5^5^2991101^^^^"
^IBA(364.7,252,3,1,0)="If the HCFA ADDRESS COLUMN parameter exists, move the text over to this"
^IBA(364.7,252,3,2,0)="column by adding spaces at the start of it.  Format the address so each"
^IBA(364.7,252,3,3,0)="street address occupies one line, then a line containing city followed by a"
^IBA(364.7,252,3,4,0)="by a comma and space, the state abbreviation, a space and the zip code,"
^IBA(364.7,252,3,5,0)="formatted for zip plus 4 if appropriate."
^IBA(364.7,253,0)="495^N^3^^^^N"
^IBA(364.7,254,0)="496^N^65^^^^N"
^IBA(364.7,255,0)="497^N^66^^^^N"
^IBA(364.7,255,1)="S IBXDATA=$$DATE^IBCF2(+IBXDATA,1)"
^IBA(364.7,255,3,0)="^^1^1^2991115^^^"
^IBA(364.7,255,3,1,0)="Format the date as MM DD YYYY."
^IBA(364.7,256,0)="1065^N^5^^^^N^0"
^IBA(364.7,256,1)="N Z K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,""I""_(Z+1))) S IBXDATA(Z)=""B"""
^IBA(364.7,256,3,0)="^^3^3^3060217^"
^IBA(364.7,256,3,1,0)="Other insurance patient signature source code.  2320/OI/04."
^IBA(364.7,256,3,2,0)="This is group data element for the other insurances.  Currently, hard "
^IBA(364.7,256,3,3,0)="code a ""B"" for all other insurances."
^IBA(364.7,257,0)="498^N^67^^^^N"
^IBA(364.7,257,1)="S IBXSAVE(""SEX"")=IBXDATA,IBXDATA=$S($G(IBXSAVE(""SEX""))=""M"":""X"",1:"""")"
^IBA(364.7,257,3,0)="^^2^2^2960814^"
^IBA(364.7,257,3,1,0)="Save the value of patient sex in IBXSAVE variable for later use.  If the"
^IBA(364.7,257,3,2,0)="value is 'M', this field's value is 'X'."
^IBA(364.7,258,0)="499^N^5^^^^N"
^IBA(364.7,258,1)="S:$G(IBXSAVE(""SEX""))'=""M"" IBXDATA=""X"" K IBXSAVE(""SEX"")"
^IBA(364.7,258,3,0)="^^3^3^2960814^"
^IBA(364.7,258,3,1,0)="This field relies on the existence of variable IBXSAVE(""SEX"") previously"
^IBA(364.7,258,3,2,0)="extracted.  If its value is not 'M', assume the sex is female and this"
^IBA(364.7,258,3,3,0)="field's value will be 'X'."
^IBA(364.7,259,0)="500^N^2^^^^N"
^IBA(364.7,259,1)="N IBZ D F^IBCEF(""N-CURRENT INSURED RELATIONSHIP"",""IBZ"",,IBXIEN) K:$$WNRBILL^IBEFUNC(IBXIEN,+$$COBN^IBCEF(IBXIEN)) IBXDATA I +IBZ=1 S:$D(IBXDATA) IBXDATA=""SAME"" S IBXSAVE(""IBSAME"")=1"
^IBA(364.7,259,3,0)="^^2^2^3000201^"
^IBA(364.7,259,3,1,0)="If the current insured is the patient, the word 'SAME' is printed instead"
^IBA(364.7,259,3,2,0)="of repeating the name."
^IBA(364.7,260,0)="501^N^157^^^^N"
^IBA(364.7,260,1)="N Z F Z=1:1:3 S IBXDATA=IBXDATA_$S(Z>1:"" "",1:"""")_$G(^UTILITY(""VAPA"",$J,Z))"
^IBA(364.7,260,3,0)="^^1^1^2960814^"
^IBA(364.7,260,3,1,0)="Concatenate all 3 lines of the address together, separated by a space."
^IBA(364.7,261,0)="502^N^25^^^^N"
^IBA(364.7,261,1)="S IBXSAVE(""PREL"")=+IBXDATA,IBXDATA=$S(IBXSAVE(""PREL"")=1:""X"",1:"""")"
^IBA(364.7,261,3,0)="^^2^2^2960814^"
^IBA(364.7,261,3,1,0)="Save the value of patient sex in IBXSAVE variable for later use.  If"
^IBA(364.7,261,3,2,0)="the value is '1' (patient), this field's value is 'X'."
^IBA(364.7,262,0)="503^N^5^^^^N"
^IBA(364.7,262,1)="I $G(IBXSAVE(""PREL""))=2 S IBXDATA=""X"""
^IBA(364.7,262,3,0)="^^3^3^2960814^"
^IBA(364.7,262,3,1,0)="This field relies on the existence of variable IBXSAVE(""PREL"")"
^IBA(364.7,262,3,2,0)="previously extracted.  If its value is '2' (spouse), this field's value"
^IBA(364.7,262,3,3,0)="will be 'X'."
^IBA(364.7,263,0)="504^N^5^^^^N"
^IBA(364.7,263,1)="I $G(IBXSAVE(""PREL""))=3 S IBXDATA=""X"""
^IBA(364.7,263,3,0)="^^2^2^2960814^"
^IBA(364.7,263,3,1,0)="This field relies on the existence of variable IBXSAVE(""PREL"") previously"
^IBA(364.7,263,3,2,0)="extracted.  If its value is '3' (child), this field's value will be 'X'."
^IBA(364.7,264,0)="505^N^5^^^^N"
^IBA(364.7,264,1)="S:$G(IBXSAVE(""PREL""))=""""!(""123""'[$G(IBXSAVE(""PREL""))) IBXDATA=""X"" K IBXSAVE(""PREL"")"
^IBA(364.7,264,3,0)="^^3^3^2990830^^"
^IBA(364.7,264,3,1,0)="This field relies on the existence of variable IBXSAVE(""PREL"") previously"
^IBA(364.7,264,3,2,0)="extracted.  If its value is not a '1', '2', or '3', assume it is other and"
^IBA(364.7,264,3,3,0)="this field's value will be 'X'."
^IBA(364.7,265,0)="506^N^5^^^^N"
^IBA(364.7,265,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U)"
^IBA(364.7,265,3,0)=0
^IBA(364.7,266,0)="507^N^61^^^^N"
^IBA(364.7,267,0)="508^N^62^^^^N"
^IBA(364.7,267,1)="S IBXDATA=$$STATE^IBCEFG1(IBXDATA)"
^IBA(364.7,267,3,0)="^^1^1^2970519^^"
^IBA(364.7,267,3,1,0)="Output the state abbreviation."
^IBA(364.7,268,0)="509^N^68^^^^N"
^IBA(364.7,268,1)="S IBXSAVE(""MSTAT"")=$$MARITAL^IBCEFG1(+IBXDATA),IBXDATA=$S(IBXSAVE(""MSTAT"")=""I"":""X"",1:"""")"
^IBA(364.7,268,3,0)="^364.73^2^2^3040219^^^"
^IBA(364.7,268,3,1,0)="Save the value of marital status in IBXSAVE variable for later use.  If"
^IBA(364.7,268,3,2,0)="the value is 'I' (NEVER MARRIED), this field's value is 'X'."
^IBA(364.7,269,0)="510^N^5^^^^N"
^IBA(364.7,269,1)="I $G(IBXSAVE(""MSTAT""))'="""",""M""[IBXSAVE(""MSTAT"") S IBXDATA=""X"""
^IBA(364.7,269,3,0)="^364.73^3^3^3010514^^"
^IBA(364.7,269,3,1,0)="This field relies on the existence of variable IBXSAVE(""MSTAT"")"
^IBA(364.7,269,3,2,0)="previously extracted. If its value is 'M' (MARRIED), this field's value"
^IBA(364.7,269,3,3,0)="will be 'X'."
^IBA(364.7,270,0)="511^N^5^^^^N"
^IBA(364.7,270,1)="S IBXDATA=$S($G(IBXSAVE(""MSTAT""))="""":"""",""MI""'[IBXSAVE(""MSTAT""):""X"",1:"""") K IBXSAVE(""MSTAT"")"
^IBA(364.7,270,3,0)="^364.73^3^3^3040220^^^^"
^IBA(364.7,270,3,1,0)="This field relies on the existence of variable IBXSAVE(""MSTAT"") previously"
^IBA(364.7,270,3,2,0)="extracted.  If its value is not a 'M', or 'I', assume it must be other and"
^IBA(364.7,270,3,3,0)="this field's value will be 'X'."
^IBA(364.7,271,0)="512^N^63"
^IBA(364.7,271,1)="N Y S Y=IBXDATA D ZIPOUT^VAFADDR S IBXDATA=Y"
^IBA(364.7,271,3,0)="^^1^1^2960814^"
^IBA(364.7,271,3,1,0)="Format zip code as zip plus 4 if needed."
^IBA(364.7,272,0)="513^N^64^^^^N"
^IBA(364.7,272,1)="I $L(IBXDATA)=10 S IBXDATA=$E(IBXDATA,1,3)_"" ""_$E(IBXDATA,4,10)"
^IBA(364.7,273,0)="514^N^99^^^^N"
^IBA(364.7,273,1)="S IBXDATA=$S("",1,2,4,6,""[("",""_+IBXDATA_"",""):""X"",1:"""")"
^IBA(364.7,273,3,0)="^^3^3^2991006^^^"
^IBA(364.7,273,3,1,0)="If the value of this field is '1' (EMPLOYED FULL TIME), '2' (EMPLOYED"
^IBA(364.7,273,3,2,0)="PART TIME), '4' (SELF EMPLOYED), or '6' (FULL TIME MILITARY), assume"
^IBA(364.7,273,3,3,0)="employed and output this field as 'X'."
^IBA(364.7,274,0)="515^N^32^^^^N"
^IBA(364.7,274,1)="N IBZ M IBZ=IBXDATA K IBXDATA S IBXDATA=$G(IBZ(1))"
^IBA(364.7,275,0)="516^N^27^^^^N"
^IBA(364.7,275,1)="N Z S Z=$$WNRBILL^IBEFUNC(IBXIEN,+$$COBN^IBCEF(IBXIEN)) S:Z IBXDATA=""NONE"" Q:Z  I $$POLICY^IBCEF(IBXIEN,2,$P($G(^DGCR(399,IBXIEN,0)),U,21))="""" S IBXDATA="""""
^IBA(364.7,275,3,0)="^364.73^1^1^3040225^^^^"
^IBA(364.7,275,3,1,0)="Only output the group number if the SUBSCRIBER ID field is non-null."
^IBA(364.7,276,0)="517^N^33^^^^N"
^IBA(364.7,276,1)="N A,IBZ S A=$$WNRBILL^IBEFUNC(IBXIEN) K:A IBXDATA I 'A M IBZ=IBXDATA K IBXDATA,IBXSAVE(""OINUM"") D:$G(IBZ(1))="""" F^IBCEF(""N-OTH INSURED ID"",""IBZ"") S:$E($$OTHINS1^IBCEF2(IBXIEN)) (IBXDATA,IBXSAVE(""OINUM""))=$G(IBZ(1))"
^IBA(364.7,276,3,0)="^364.73^6^6^3001130^^^^"
^IBA(364.7,276,3,1,0)="Save the value of other insured group number in IBXSAVE variable for later"
^IBA(364.7,276,3,2,0)="use.  Use the first occurrence of other insured group number for this"
^IBA(364.7,276,3,3,0)="field's value.  If the other insurance is a medigap (MEDICARE WNR is"
^IBA(364.7,276,3,4,0)="before this insurance on the bill), the group # is preceeded by 'MG'"
^IBA(364.7,276,3,5,0)="on output.  If no other insured group number is found, use the other"
^IBA(364.7,276,3,6,0)="insured's policy id number instead."
^IBA(364.7,277,0)="518^N^87^^^^N"
^IBA(364.7,277,1)="S IBXSAVE(""CONDE"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,277,3,0)="^^2^2^2960814^"
^IBA(364.7,277,3,1,0)="Save the value of condition related to employment in IBXSAVE variable for"
^IBA(364.7,277,3,2,0)="later use.  If this value is 1 (yes), this field's value is 'X'."
^IBA(364.7,278,0)="519^N^5^^^^N"
^IBA(364.7,278,1)="S:'$G(IBXSAVE(""CONDE"")) IBXDATA=""X"" K IBXSAVE(""CONDE"")"
^IBA(364.7,278,3,0)="^^3^3^2960814^"
^IBA(364.7,278,3,1,0)="This field relies on the existence of the IBXSAVE(""CONDE"") variable"
^IBA(364.7,278,3,2,0)="previously extracted.  If this variable's value is 0 or null, this assumes"
^IBA(364.7,278,3,3,0)="condition is not related and this field's value is 'X'."
^IBA(364.7,279,0)="520^N^5^^^^N"
^IBA(364.7,279,1)="S IBXDATA=$$DATE^IBCF2($P($G(IBXSAVE(""IDEM"")),U),1)"
^IBA(364.7,279,3,0)="^^2^2^3000201^^^^"
^IBA(364.7,279,3,1,0)="This field relies on the existence of the variable IBXSAVE(""IDEM"")"
^IBA(364.7,279,3,2,0)="previously extracted.  Format the birthdate as MM DD YYYY."
^IBA(364.7,280,0)="521^N^5^^^^N"
^IBA(364.7,280,1)="S:$P($G(IBXSAVE(""IDEM"")),U,2)=""M"" IBXDATA=""X"""
^IBA(364.7,280,3,0)="^^3^3^3000201^^"
^IBA(364.7,280,3,1,0)="This field relies on the existence of the IBXSAVE(""IDEM"") variable"
^IBA(364.7,280,3,2,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,280,3,3,0)="is an 'M', this field's value is 'X'."
^IBA(364.7,281,0)="522^N^5^^^^N"
^IBA(364.7,281,1)="S:""M""'[$P($G(IBXSAVE(""IDEM"")),U,2) IBXDATA=""X"""
^IBA(364.7,281,3,0)="^^3^3^2960814^"
^IBA(364.7,281,3,1,0)="This field relies on the existence of the IBXSAVE(""IDEM"") variable"
^IBA(364.7,281,3,2,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,281,3,3,0)="is not an 'M', this field's value is 'X'."
^IBA(364.7,282,0)="523^N^28^^^^N"
^IBA(364.7,282,1)="S IBXDATA="""" I $O(IBXDATA("""")) N Z S Z=$G(IBXDATA(1)) K IBXDATA S IBXSAVE(""OIDEM"")=Z,IBXDATA=$$DATE^IBCF2($P(Z,U),1)"
^IBA(364.7,282,3,0)="^^2^2^2991115^^^"
^IBA(364.7,282,3,1,0)="Save the other insured's demographic data in IBXSAVE for later use. Format"
^IBA(364.7,282,3,2,0)="the birthdate as MM DD YYYY."
^IBA(364.7,283,0)="524^N^5^^^^N"
^IBA(364.7,283,1)="I $P($G(IBXSAVE(""OIDEM"")),U,2)=""M"" S IBXDATA=""X"""
^IBA(364.7,283,3,0)="^^3^3^2960814^"
^IBA(364.7,283,3,1,0)="This field relies on the existence of the IBXSAVE(""OIDEM"") variable"
^IBA(364.7,283,3,2,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,283,3,3,0)="is an 'M', this field's value is 'X'."
^IBA(364.7,284,0)="525^N^5^^^^N"
^IBA(364.7,284,1)="N Z S Z=$P($G(IBXSAVE(""OIDEM"")),U,2) S:Z'=""M""&(Z'="""") IBXDATA=""X"" K IBXSAVE(""OIDEM"")"
^IBA(364.7,284,3,0)="^^3^3^2960814^"
^IBA(364.7,284,3,1,0)="This field relies on the existence of the IBXSAVE(""OIDEM"") variable"
^IBA(364.7,284,3,2,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,284,3,3,0)="is not a null and is not an 'M', this field's value is 'X'."
^IBA(364.7,285,0)="526^N^88^^^^N"
^IBA(364.7,285,1)="S IBXSAVE(""CONDA"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,285,3,0)="^^2^2^2960814^"
^IBA(364.7,285,3,1,0)="Save the value of condition related to auto accident in IBXSAVE variable"
^IBA(364.7,285,3,2,0)="for later use.  If this value is 1 (yes), this field's value is 'X'."
^IBA(364.7,286,0)="527^N^5^^^^N"
^IBA(364.7,286,1)="S:'$G(IBXSAVE(""CONDA"")) IBXDATA=""X"""
^IBA(364.7,286,3,0)="^^3^3^2960814^"
^IBA(364.7,286,3,1,0)="This field relies on the existence of the IBXSAVE(""CONDA"") variable"
^IBA(364.7,286,3,2,0)="previously extracted.  If this variable's value is 0 or null, this assumes"
^IBA(364.7,286,3,3,0)="condition is not related and this field's value is 'X'."
^IBA(364.7,287,0)="528^N^159^^^^N"
^IBA(364.7,287,1)="S IBXDATA=$$STATE^IBCEFG1(IBXDATA) K IBXSAVE(""CONDA"")"
^IBA(364.7,287,3,0)="^^1^1^3000201^^^"
^IBA(364.7,287,3,1,0)="Output state abbreviation."
^IBA(364.7,288,0)="529^N^7^^^^N"
^IBA(364.7,288,1)="S IBXDATA=$P(IBXDATA,U)"
^IBA(364.7,288,3,0)="^^1^1^2991006^^^"
^IBA(364.7,288,3,1,0)="Employer name is the first '^' piece of field's value."
^IBA(364.7,289,0)="530^N^30^^^^N"
^IBA(364.7,289,1)="S IBXDATA="""" I $O(IBXDATA("""")) N Z S Z=$G(IBXDATA(1)) K IBXDATA S IBXDATA=$P(Z,U)"
^IBA(364.7,289,3,0)="^^2^2^3000201^^^"
^IBA(364.7,289,3,1,0)="Use the first occurrence of other insured employer information.  The first"
^IBA(364.7,289,3,2,0)="'^' piece is the employer's name."
^IBA(364.7,290,0)="531^N^89^^^^N"
^IBA(364.7,290,1)="S IBXSAVE(""CONDOA"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,290,3,0)="^^2^2^2960814^"
^IBA(364.7,290,3,1,0)="Save the value of condition related to other accident in IBXSAVE variable"
^IBA(364.7,290,3,2,0)="for later use.  If this value is 1 (yes), this field's value is 'X'."
^IBA(364.7,291,0)="532^N^5^^^^N"
^IBA(364.7,291,1)="S:'$G(IBXSAVE(""CONDOA"")) IBXDATA=""X"" K IBXSAVE(""CONDOA"")"
^IBA(364.7,291,3,0)="^^3^3^2960814^"
^IBA(364.7,291,3,1,0)="This field relies on the existence of the IBXSAVE(""CONDOA"") variable"
^IBA(364.7,291,3,2,0)="previously extracted.  If this variable's value is 0 or null, this assumes"
^IBA(364.7,291,3,3,0)="condition is not related and this field's value is 'X'."
^IBA(364.7,292,0)="533^N^26^^^^N"
^IBA(364.7,292,1)="I $$WNRBILL^IBEFUNC(IBXIEN) S IBXDATA="""""
^IBA(364.7,293,0)="534^N^31^^^^N"
^IBA(364.7,293,1)="K IBXSAVE(""OINUM"") S IBXDATA="""" I $O(IBXDATA("""")) N C,Z,Z0 S C=$$OTHINS1^IBCEF2(IBXIEN),Z=$G(IBXDATA(1)) K IBXDATA I $E(C) S IBXDATA=$S($$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBXIEN,""I""_$E(C)))):""MEDICARE"",$P(Z,U,2):$P($G(^DIC(36,+Z,0)),U),1:$P(Z,U))"
^IBA(364.7,293,3,0)="^364.73^6^6^3040114^^^^"
^IBA(364.7,293,3,1,0)="Use the first occurrence of other insured group name.  The first '^' piece"
^IBA(364.7,293,3,2,0)="of this value has either the group name or the insurance company pointer."
^IBA(364.7,293,3,3,0)="If the second '^' piece is a 1, the insurance company name is extracted"
^IBA(364.7,293,3,4,0)="using the insurance company pointer in the first '^' piece, otherwise, the"
^IBA(364.7,293,3,5,0)="name in the first '^' piece is output."
^IBA(364.7,293,3,6,0)="MEDICARE WNR always outputs MEDICARE."
^IBA(364.7,294,0)="535^N^144^^^^N"
^IBA(364.7,294,1)="S IBXSAVE(""OI"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,294,3,0)="^^2^2^2960814^"
^IBA(364.7,294,3,1,0)="Save the other insurance exists data in the IBXSAVE variable for later"
^IBA(364.7,294,3,2,0)="use.  If the value is 1, output an 'X'."
^IBA(364.7,295,0)="536^N^5^^^^N"
^IBA(364.7,295,1)="S:'$G(IBXSAVE(""OI"")) IBXDATA=""X"" K IBXSAVE(""OI"")"
^IBA(364.7,295,3,0)="^^3^3^2960814^"
^IBA(364.7,295,3,1,0)="This field relies on the existence of the IBXSAVE(""OI"") variable"
^IBA(364.7,295,3,2,0)="previously extracted.  If the value of this data element is null or 0,"
^IBA(364.7,295,3,3,0)="output an 'X' in this field"
^IBA(364.7,296,0)="537^N^65^^^^N"
^IBA(364.7,296,1)="N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_"" ""_$S($P(Z,U,3)'="""":$E($P(Z,U,3))_"" "",1:"""")_$P(Z,U)"
^IBA(364.7,296,3,0)="^^1^1^2991102^"
^IBA(364.7,296,3,1,0)="Output the patient's name as the signature first middle last name."
^IBA(364.7,297,0)="538^N^2^^^^N"
^IBA(364.7,297,1)="N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_"" ""_$S($P(Z,U,3)'="""":$E($P(Z,U,3))_"" "",1:"""")_$P(Z,U)"
^IBA(364.7,297,3,0)="^^2^2^2991102^^"
^IBA(364.7,297,3,1,0)="Output the current insured's name as the signature first name, middle name"
^IBA(364.7,297,3,2,0)="last name"
^IBA(364.7,298,0)="539^N^232^^^^N"
^IBA(364.7,298,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,298,3,0)="^^1^1^2991115^^^^"
^IBA(364.7,298,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,299,0)="540^N^90^^^^N"
^IBA(364.7,299,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,299,3,0)="^^1^1^2991115^^^"
^IBA(364.7,299,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,300,0)="541^N^93^^^^N"
^IBA(364.7,300,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,300,3,0)="^^1^1^2991115^^^^"
^IBA(364.7,300,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,301,0)="542^N^94^^^^N"
^IBA(364.7,301,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,301,3,0)="^^1^1^2991115^^^^"
^IBA(364.7,301,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,303,0)="546^N^5^^^^N"
^IBA(364.7,303,1)="D:'$D(IBXSAVE(""BOX19"")) F^IBCEF(""N-HCFA 1500 BOX 19"",,,IBXIEN) S IBXDATA=$E($G(IBXSAVE(""BOX19"")),49,96) K IBXSAVE(""BOX19"")"
^IBA(364.7,303,3,0)="^364.73^2^2^3001004^^^^"
^IBA(364.7,303,3,1,0)="If the array that holds the entire box 19 data is not defined, extract it."
^IBA(364.7,303,3,2,0)="This field will hold the 49th through 96th characters of the box's data."
^IBA(364.7,304,0)="543^N^147^^^^N"
^IBA(364.7,304,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,304,3,0)="^^1^1^2991115^^^^"
^IBA(364.7,304,3,1,0)="'From' date is the first '^' piece of this data.  Format date as MM DD YYYY."
^IBA(364.7,305,0)="544^N^160^^^^N"
^IBA(364.7,305,1)="D:'IBXDATA&'$$INPAT^IBCEF(IBXIEN,1) F^IBCEF(""N-STATEMENT COVERS TO DATE"",,,IBXIEN) S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,305,3,0)="^364.73^2^2^3040226^^^^"
^IBA(364.7,305,3,1,0)="If there is no date in IBXDATA, set it to Statement Covers To Date then "
^IBA(364.7,305,3,2,0)="format the resulted date."
^IBA(364.7,306,0)="548^N^86^^^^N"
^IBA(364.7,306,1)="N IB,IBCT M IB=IBXDATA K IBXDATA X ""N Z S (Z,IBCT)=0 F  S Z=$O(IB(Z)) Q:'Z  I $G(IB(Z)) S IBCT=IBCT+1 M IBXSAVE(""""DX"""",IBCT)=IB(Z)"" S IBXDATA=$P($G(^ICD9(+$G(IBXSAVE(""DX"",1)),0)),U) D PGDX^IBCEF31(1,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,306,3,0)="^364.73^4^4^3040121^^^^"
^IBA(364.7,306,3,1,0)="Save the diagnoses in the IBXSAVE array for later use. Output the"
^IBA(364.7,306,3,2,0)="diagnosis code for the first diagnosis. Check for any diagnosis codes"
^IBA(364.7,306,3,3,0)="that should display in the first position on pages subsequent to page 1"
^IBA(364.7,306,3,4,0)="and output them."
^IBA(364.7,307,0)="547^N^150^^^^N"
^IBA(364.7,307,1)="S IBXDATA=$S(IBXDATA:"" "",1:$J("""",5))_""X"""
^IBA(364.7,308,0)="549^N^163^^^^N"
^IBA(364.7,308,1)="S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(3,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,308,3,0)="^364.73^3^3^3040121^^^^"
^IBA(364.7,308,3,1,0)="Output the third diagnosis code. Check for any diagnosis codes that should"
^IBA(364.7,308,3,2,0)="display in the third position on pages subsequent to page 1 and output"
^IBA(364.7,308,3,3,0)="them."
^IBA(364.7,309,0)="550^N^162^^^^N"
^IBA(364.7,309,1)="S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(2,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,309,3,0)="^364.73^3^3^3040121^^^^"
^IBA(364.7,309,3,1,0)="Output the second diagnosis code.  Check for any diagnosis codes that should"
^IBA(364.7,309,3,2,0)="display in the second position on pages subsequent to page 1 and output"
^IBA(364.7,309,3,3,0)="them."
^IBA(364.7,310,0)="551^N^164^^^^N"
^IBA(364.7,310,1)="S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(4,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE) K IBXSAVE(""DX"")"
^IBA(364.7,310,3,0)="^364.73^3^3^3040121^^^^"
^IBA(364.7,310,3,1,0)="Output the forth diagnosis code. Check for any diagnosis codes that should"
^IBA(364.7,310,3,2,0)="display in the forth position on pages subsequent to page 1 and output"
^IBA(364.7,310,3,3,0)="them."
^IBA(364.7,311,0)="552^N^262^^^^N"
^IBA(364.7,311,1)="I $$OLAB^IBCEU(IBXIEN) N IBZ S IBZ=IBXDATA D F^IBCEF(""N-LAB CLIA #"",,,IBXIEN) I IBXDATA="""",IBZ'="""" S IBXDATA=IBZ"
^IBA(364.7,311,3,0)="^364.73^2^2^3021108^^^^"
^IBA(364.7,311,3,1,0)="If the bill is for services rendered at an outside lab, get the CLIA number."
^IBA(364.7,311,3,2,0)="If this # is not available, use the prior authorization #."
^IBA(364.7,312,0)="562^N^109^^^^N"
^IBA(364.7,313,0)="563^N^151^^^^N"
^IBA(364.7,314,0)="564^N^210^^^^N"
^IBA(364.7,315,0)="565^N^95^^^^N"
^IBA(364.7,315,1)="S IBXSAVE(""TOT"")=IBXDATA K IBXDATA S:IBXSAVE(""TOT"")'=""""&($O(^TMP(""IBXDATA"",$J,IBXREC,""""),-1)'>1) IBXDATA=$J(IBXSAVE(""TOT""),10,2)"
^IBA(364.7,315,3,0)="^^3^3^3000124^^^^"
^IBA(364.7,315,3,1,0)="Save the total charges in IBXSAVE array for later use.  If"
^IBA(364.7,315,3,2,0)="total is not null, output as numeric with 2 decimal places in 10 spaces."
^IBA(364.7,315,3,3,0)="Only output totals on last page of form."
^IBA(364.7,317,0)="567^N^296^^^^N"
^IBA(364.7,317,1)="N IBZ D F^IBCEF(""N-EDI SITE CONTACT PHONE"",""IBZ"") S IBZ=$$EXPAND^IBTRE(350.9,2.11,IBZ) D:IBZ="""" F^IBCEF(""N-AGENT CASHIER PHONE"",""IBZ"") S:$L(IBZ)>12 IBZ=$E($$NOPUNCT^IBCEF(IBZ),1,12) S IBXDATA=$E(IBXDATA,1,18)_($J("""",30-$L(IBZ)-$L(IBXDATA)))_IBZ"
^IBA(364.7,317,3,0)="^^1^1^2991115^"
^IBA(364.7,317,3,1,0)="This is the constant we will use as the name of the billing entity."
^IBA(364.7,318,0)="568^N^83^^^^N"
^IBA(364.7,318,1)="S IBXSAVE(""BOX31"")=IBXDATA,IBXDATA=$$NAME31^IBCF2(IBXIEN,IBXDATA)"
^IBA(364.7,318,3,0)="^^2^2^3000323^^^^"
^IBA(364.7,318,3,1,0)="Formats the name in 21 spaces for block 31 of the HCFA 1500."
^IBA(364.7,318,3,2,0)="IBXSAVE(""BOX31"") is the name in format Last,first mi^ien in file 200"
^IBA(364.7,319,0)="569^N^5^^^^N"
^IBA(364.7,319,1)="K:'$G(IBXSAVE(""REMOTE"")) IBXDATA I $D(IBXDATA) S IBXDATA=$$GETFAC^IBCEP8(+$G(IBXSAVE(""IBFAC"")),+$G(IBXSAVE(""OFAC"")),12)"
^IBA(364.7,319,3,0)="^^3^3^2991202^^^^"
^IBA(364.7,319,3,1,0)="Extract the street address for the rendering facility.  Relies on the"
^IBA(364.7,319,3,2,0)="existence of the array IBXSAVE(""IBFAC"") extracted previously by the"
^IBA(364.7,319,3,3,0)="rendering facility name field."
^IBA(364.7,320,0)="584^N^116^^^^N"
^IBA(364.7,320,1)="S IBXSAVE(""FSTREET1"")=IBXDATA"
^IBA(364.7,320,3,0)="^^1^1^2960814^"
^IBA(364.7,320,3,1,0)="Save the data in the IBXSAVE array for later use."
^IBA(364.7,321,0)="585^N^155^^^^N"
^IBA(364.7,321,1)="S IBXSAVE(""FSTREET2"")=IBXDATA"
^IBA(364.7,321,3,0)="^^1^1^2960814^"
^IBA(364.7,321,3,1,0)="Save the data in the IBXSAVE array for later use."
^IBA(364.7,322,0)="570^N^104^^^^N"
^IBA(364.7,322,1)="N IBZ D F^IBCEF(""N-AGENT CASHIER MAIL SYMBOL"",""IBZ"",,IBXIEN) I $G(IBZ)'="""" S IBXDATA=IBXDATA_"" ""_IBZ"
^IBA(364.7,322,3,0)="^364.73^2^2^3040120^^^"
^IBA(364.7,322,3,1,0)="Concatenate Agent Cashier Mail Symbol to the end of Agent Cashier Street"
^IBA(364.7,322,3,2,0)="Address."
^IBA(364.7,323,0)="571^N^209^^^^N"
^IBA(364.7,323,1)="N A,P,Q,Z S Q=IBXIEN,Z=$$DATE31^IBCF2(IBXDATA,Q),A=$G(IBXSAVE(""BOX31"")) D GETPRV^IBCEU(Q,3,.P) S P=$G(P(3,1)),A=$S($P(P,U,4)'="""":$P(P,U,4),'$D(^DGCR(399,Q,""PRV"",0)):$E($P(P,U),22,42),1:$$CRED^IBCEU($P(P,U,3),Q,,3)),IBXDATA=A_$J("""",11-$L(A))_Z"
^IBA(364.7,323,3,0)="^^2^2^3000131^^^^"
^IBA(364.7,323,3,1,0)="Print credentials left justified and date right justified. Format date as"
^IBA(364.7,323,3,2,0)="MM/DD/YYYY."
^IBA(364.7,326,0)="1072^N^5^^^^N^0"
^IBA(364.7,326,1)="N Z,ADDR,OK,PCE F Z=1,2 S ADDR=$G(IBXSAVE(""OTH_PAY_ADDR"",Z)) I ADDR'="""" S OK=1 X ""F PCE=1,4,5,6 I $P(ADDR,U,PCE)="""""""" S OK=0 Q"" I 'OK K IBXSAVE(""OTH_PAY_ADDR"",Z)"
^IBA(364.7,326,3,0)="^364.73^3^3^3080314^^^"
^IBA(364.7,326,3,1,0)="If the other payer address is missing any component among address line 1, "
^IBA(364.7,326,3,2,0)="city, state, or zip, then blank out the entire address.  We can't send "
^IBA(364.7,326,3,3,0)="partial addresses."
^IBA(364.7,327,0)="572^N^5^^^^N"
^IBA(364.7,327,1)="K:'$G(IBXSAVE(""REMOTE"")) IBXDATA S:$D(IBXDATA) IBXDATA=$$GETFAC^IBCEP8(+$G(IBXSAVE(""IBFAC"")),+$G(IBXSAVE(""OFAC"")),3)"
^IBA(364.7,327,3,0)="^^3^3^2991202^^^^"
^IBA(364.7,327,3,1,0)="Extract the city, state abbreviation and zip code for the rendering"
^IBA(364.7,327,3,2,0)="facility.  Relies on the existence of the array IBXSAVE(""IBFAC"") extracted"
^IBA(364.7,327,3,3,0)="previously by the rendering facility name field."
^IBA(364.7,328,0)="589^N^105^^^^N"
^IBA(364.7,328,1)="S IBXSAVE(""ACCITY"")=IBXDATA"
^IBA(364.7,328,3,0)="^^1^1^2960814^"
^IBA(364.7,328,3,1,0)="Save the data in the IBXSAVE array for later use."
^IBA(364.7,329,0)="590^N^106^^^^N"
^IBA(364.7,329,1)="S IBXSAVE(""ACSTATE"")=IBXDATA"
^IBA(364.7,329,3,0)="^^1^1^2960814^"
^IBA(364.7,329,3,1,0)="Save the data in the IBXSAVE array for later use."
^IBA(364.7,330,0)="591^N^107^^^^N"
^IBA(364.7,330,1)="S IBXSAVE(""ACZIP"")=$E(IBXDATA,1,5)_$S($E(IBXDATA,6,9)'="""":""-""_$E(IBXDATA,6,9),1:"""")"
^IBA(364.7,330,3,0)="^^1^1^2960814^"
^IBA(364.7,330,3,1,0)="Save the data in the IBXSAVE array for later use."
^IBA(364.7,331,0)="573^N^5^^^^N"
^IBA(364.7,331,1)="N Z S Z=$$STATE^IBCEFG1($G(IBXSAVE(""ACSTATE"")))_"" ""_$G(IBXSAVE(""ACZIP"")),IBXDATA=$E($G(IBXSAVE(""ACCITY"")),1,26-2-$L(Z))_"", ""_Z F Z=""ACCITY"",""ACSTATE"",""ACZIP"" K IBXSAVE(Z)"
^IBA(364.7,331,3,0)="^^5^5^2991115^^"
^IBA(364.7,331,3,1,0)="This data relies on the existence of the IBXSAVE(""ACCITY""),"
^IBA(364.7,331,3,2,0)="IBXSAVE(""ACSTATE"") and IBXSAVE(""ACZIP"") variables previously extracted."
^IBA(364.7,331,3,3,0)="The data consists of the city concatenated with a , and space, the state"
^IBA(364.7,331,3,4,0)="abbreviation, a space and the zip code.  The city name is shortened to fit"
^IBA(364.7,331,3,5,0)="in the whole state and zip in the space allowed."
^IBA(364.7,332,0)="574^N^5^^^^N"
^IBA(364.7,332,1)="I '$D(^DGCR(399,IBXIEN,""PRV"",0)) S IBXDATA=$E($P($G(IBXSAVE(""BOX31"")),U),43,63)"
^IBA(364.7,332,3,0)="^^1^1^2991215^^^^"
^IBA(364.7,332,3,1,0)="This line is no longer printed on the standard HCFA 1500."
^IBA(364.7,333,0)="1073^N^5^^^^N^0"
^IBA(364.7,333,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""OTH_PAY_ADDR"",Z)) Q:'Z  S IBXDATA(Z)=$P($G(IBXSAVE(""OTH_PAY_ADDR"",Z)),U,1)"
^IBA(364.7,333,3,0)="^^1^1^3080314^"
^IBA(364.7,333,3,1,0)="address line 1, multi-valued array"
^IBA(364.7,334,0)="1074^N^5^^^^N^0"
^IBA(364.7,334,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""OTH_PAY_ADDR"",Z)) Q:'Z  S IBXDATA(Z)=$P($G(IBXSAVE(""OTH_PAY_ADDR"",Z)),U,2)"
^IBA(364.7,334,3,0)="^^1^1^3080314^"
^IBA(364.7,334,3,1,0)="Address line 2 in a multi-valued array"
^IBA(364.7,335,0)="592^N^5^^^^N"
^IBA(364.7,335,1)="I '$O(IBXSAVE(""BOX24"",0)) D B24^IBCEF3(.IBXSAVE,IBXIEN,1)"
^IBA(364.7,335,3,0)="^^1^1^3000105^^^^"
^IBA(364.7,335,3,1,0)="If array doesn't already exist, extract it"
^IBA(364.7,336,0)="554^N^165^^^^N"
^IBA(364.7,336,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,336,3,0)="^^2^2^3000105^^^^"
^IBA(364.7,336,3,1,0)="If more than 6 service dates (12 lines) exist"
^IBA(364.7,336,3,2,0)="for the bill, this outputs the rest on additional bill pages."
^IBA(364.7,337,0)="555^N^166^^^^N"
^IBA(364.7,337,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,337,3,0)="^^2^2^3000105^^^^"
^IBA(364.7,337,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,337,3,2,0)="the rest on additional bill pages."
^IBA(364.7,338,0)="556^N^167^^^^N"
^IBA(364.7,338,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,338,3,0)="^^2^2^3000105^^^"
^IBA(364.7,338,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,338,3,2,0)="the rest on additional bill pages."
^IBA(364.7,339,0)="557^N^168^^^^N"
^IBA(364.7,339,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,339,3,0)="^^2^2^3000105^^"
^IBA(364.7,339,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,339,3,2,0)="the rest on additional bill pages."
^IBA(364.7,340,0)="558^N^169^^^^N"
^IBA(364.7,340,1)="N IBZ,IBZ1,Z,Q M IBZ=IBXDATA K IBXDATA D TEXT24^IBCEU3(""D1"",.IBXSAVE,.IBXDATA) M IBZ1=IBXDATA K IBXDATA S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  S Q=$J(IBZ(Z),6)_"" ""_$TR($G(IBZ1(Z)),"","") S:Z'>12 IBXDATA(Z)=Q I Z>12 D PG^IBCEF3(Q,Z)"
^IBA(364.7,340,3,0)="^364.73^2^2^3001113^^^"
^IBA(364.7,340,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,340,3,2,0)="the rest on additional bill pages."
^IBA(364.7,341,0)="559^N^170^^^^N"
^IBA(364.7,341,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,341,3,0)="^^2^2^3000105^^"
^IBA(364.7,341,3,1,0)="If more than 6 service dates (12 lines) exist for the bill, this outputs"
^IBA(364.7,341,3,2,0)="the rest on additional bill pages."
^IBA(364.7,342,0)="560^N^171^^^^N"
^IBA(364.7,342,1)="N Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  S Z0=$S('$G(IBZ(Z,""T"")):$S(IBZ(Z)?0.1""-""1N.N0.1""."".N:$J(IBZ(Z),9,2),1:IBZ(Z)),1:IBZ(Z)) S:Z'>12 IBXDATA(Z)=Z0 I Z>12 D PG^IBCEF3(Z0,Z)"
^IBA(364.7,342,3,0)="^^3^3^3000105^^^"
^IBA(364.7,342,3,1,0)="Print total charge (units * rate) only if not 0.  Format numeric values"
^IBA(364.7,342,3,2,0)="with 2 decimal points.  If more than 6 service dates (12 lines) exist for"
^IBA(364.7,342,3,3,0)="the bill, this outputs the rest on additional bill pages."
^IBA(364.7,343,0)="561^N^172^^^^N"
^IBA(364.7,343,1)="N Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  S Z0=$S('$G(IBZ(Z,""T"")):$S(IBZ(Z):$J(IBZ(Z),$S($L(IBZ)<3:2,1:3)),1:""""),1:IBZ(Z)) S:Z'>12 IBXDATA(Z)=Z0 D:Z>12 PG^IBCEF3(Z0,Z)"
^IBA(364.7,343,3,0)="^^4^4^3000105^^^^"
^IBA(364.7,343,3,1,0)="Right justify numeric values in 3 spaces.  If more than 6 service dates"
^IBA(364.7,343,3,2,0)="(12 lines) exist for the bill, this outputs the rest on additional"
^IBA(364.7,343,3,3,0)="bill pages.  If the units are being output and they are less than 1, 1 is"
^IBA(364.7,343,3,4,0)="the default."
^IBA(364.7,344,0)="593^N^5^^^^N"
^IBA(364.7,344,1)="I $O(^TMP(""IBXDATA"",$J,IBXREC,1)) N Z,FLDS X ""F Z=1:1:+$O(^IBA(364.6,""""ASEQ"""",2,1,""""""""),-1) S:(Z'>44!(Z'<57))&(Z'=6)&(Z'=39)&(Z'=41) FLDS(Z)="""""""""" F Z=2:1:+$O(^TMP(""IBXDATA"",$J,IBXREC,Z),-1) D MPG^IBCEF3(Z,.FLDS,2)"
^IBA(364.7,344,3,0)="^^4^4^2960814^"
^IBA(364.7,344,3,1,0)="If there is more than 1 page of bill extracted, the variable"
^IBA(364.7,344,3,2,0)="FLDS(line,column) holds the lines and columns that should be duplicated on"
^IBA(364.7,344,3,3,0)="pages after the first.  This takes care of the population of these static"
^IBA(364.7,344,3,4,0)="fields on these subsequent pages."
^IBA(364.7,345,0)="545^N^148"
^IBA(364.7,345,1)="S IBXSAVE(""BOX19"")=$S($L(IBXDATA)<49:$J("""",48),$L(IBXDATA)<84:$J("""",13),1:"""")_IBXDATA,IBXDATA=$E(IBXSAVE(""BOX19""),1,48)"
^IBA(364.7,345,3,0)="^364.73^1^1^3000823^^^^"
^IBA(364.7,345,3,1,0)="This field holds the 1st through 48th characters of the box's data."
^IBA(364.7,346,0)="594^N^5^^^^N"
^IBA(364.7,346,1)="K IBXDATA S IBXSAVE(""PAID"")=$J(0,7,2) I $O(^TMP(""IBXDATA"",$J,IBXREC,""""),-1)'>1 S IBXDATA=IBXSAVE(""PAID"") K IBXSAVE(""PAID"")"
^IBA(364.7,346,3,0)="^^2^2^3000124^^^^"
^IBA(364.7,346,3,1,0)="This field is the prior amounts the patient has paid.  This will always"
^IBA(364.7,346,3,2,0)="be 0 unless VA changes policy."
^IBA(364.7,347,0)="595^N^173^^^^N"
^IBA(364.7,347,1)="S IBXSAVE(""BDUE"")=$S(IBXDATA:$J(IBXDATA,7,2),1:"""") K IBXDATA I $O(^TMP(""IBXDATA"",$J,IBXREC,""""),-1)'>1 S IBXDATA=IBXSAVE(""BDUE"") K IBXSAVE(""BDUE""),IBXSAVE(""PTOT""),IBXSAVE(""TOT"")"
^IBA(364.7,347,3,0)="^^2^2^3000124^^^"
^IBA(364.7,347,3,1,0)="If not 0, output as numeric with 2 decimals in 7 characters."
^IBA(364.7,347,3,2,0)="Only output total on last page of form."
^IBA(364.7,348,0)="566^N^275^^^^N"
^IBA(364.7,348,1)="N A,Q,Z K IBXSAVE(""OFAC"") S A=IBXDATA,Z=$P(A,U,2),IBXSAVE(""IBFAC"")=+A,Q=$$FAC^IBCEU3(IBXIEN) S:+A=+$P($G(^IBE(350.9,1,0)),U,2)&'Z&'Q IBXDATA=""SAME"" S IBXSAVE(""REMOTE"")=(IBXDATA>0) S:IBXDATA IBXDATA=$$GETFAC^IBCEP8(+A,+Z,0) S:Z IBXSAVE(""OFAC"")=1"
^IBA(364.7,348,3,0)="^364.73^4^4^3001017^^^^"
^IBA(364.7,348,3,1,0)="This returns the name of the INSTITUTION file entry for the non-VA or"
^IBA(364.7,348,3,2,0)="remote site where care was rendered.  Save the ien in IBXSAVE(""IBFAC"") for"
^IBA(364.7,348,3,3,0)="later use.  If the rendering facility is the same as the main facility,"
^IBA(364.7,348,3,4,0)="'SAME' prints as the facility name."
^IBA(364.7,349,0)="596^N^5^^^^N"
^IBA(364.7,349,1)="K IBXSAVE(""DX""),IBXSAVE(""BOX24""),IBXSAVE(""OCC""),IBXSAVE(""OCCS""),IBXSAVE(""IDEM""),IBXSAVE(""IADR"")"
^IBA(364.7,349,3,0)="^^1^1^2970519^^^"
^IBA(364.7,349,3,1,0)="Clean up IBXSAVE array."
^IBA(364.7,350,0)="597^N^235^^^^N"
^IBA(364.7,350,1)="N Z S Z=IBXDATA D F^IBCEF(""N-CURRENT INSURANCE CO TYPE"") S IBXDATA=$J("""",$S(Z=16!(Z=""MB"")!(Z=""MA""):0,Z=""TV""!(Z=""MC""):7,Z=""CH"":14,$$CHAMPVA^IBCEU3(IBXIEN)&($P($G(^DIC(36,+$$CURR^IBCEF2(IBXIEN),0)),U,2)=""Y""):23,IBXDATA=5:30,1:44))_""X"""
^IBA(364.7,350,3,0)="^364.73^1^1^3000919^^^^"
^IBA(364.7,350,3,1,0)="Check appropriate box for type of insurance"
^IBA(364.7,351,0)="598^N^5^^^^N"
^IBA(364.7,352,0)="599^N^240^^^^N"
^IBA(364.7,354,0)="601^N^283^^^^N"
^IBA(364.7,354,1)="K IBXDATA S:$G(IBXSAVE(""OLAB"")) IBXDATA=$J($G(IBXSAVE(""OLAB"")),10,2) K IBXSAVE(""OLAB"")"
^IBA(364.7,355,0)="602^N^5^^^^N"
^IBA(364.7,356,0)="603^N^5^^^^N"
^IBA(364.7,357,0)="604^N^24^^^^N"
^IBA(364.7,357,1)="N Z S Z=$S(IBXDATA=""""!(""Nn0""'[IBXDATA):1,1:6) S IBXDATA=$J(""X"",Z)"
^IBA(364.7,357,3,0)="^^2^2^2990630^^^^"
^IBA(364.7,357,3,1,0)="Print indicator of ASSIGNMENT OF BENEFITS.  Check Yes if data element value"
^IBA(364.7,357,3,2,0)="returned is null or is not 0,'n', or 'N', otherwise check No."
^IBA(364.7,358,0)="1075^N^5^^^^N^0"
^IBA(364.7,358,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""OTH_PAY_ADDR"",Z)) Q:'Z  S IBXDATA(Z)=$TR($P($G(IBXSAVE(""OTH_PAY_ADDR"",Z)),U,4),""-/.,()'"",""  "")"
^IBA(364.7,358,3,0)="^^2^2^3080314^"
^IBA(364.7,358,3,1,0)="Other payer city in a multi-valued array.  Do the standard punctuation "
^IBA(364.7,358,3,2,0)="edits for cities."
^IBA(364.7,359,0)="1076^N^5^^^^N^0"
^IBA(364.7,359,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""OTH_PAY_ADDR"",Z)) Q:'Z  S IBXDATA(Z)=$$STATE^IBCEFG1($P($G(IBXSAVE(""OTH_PAY_ADDR"",Z)),U,5))"
^IBA(364.7,359,3,0)="^^2^2^3080314^"
^IBA(364.7,359,3,1,0)="Other payer state code in a multi-valued array.  Use of the state code "
^IBA(364.7,359,3,2,0)="conversion utility."
^IBA(364.7,360,0)="1077^N^5^^^^N^0"
^IBA(364.7,360,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""OTH_PAY_ADDR"",Z)) Q:'Z  S IBXDATA(Z)=$P($G(IBXSAVE(""OTH_PAY_ADDR"",Z)),U,6)"
^IBA(364.7,360,3,0)="^^1^1^3080314^"
^IBA(364.7,360,3,1,0)="Other payer zip code in a multi-valued array."
^IBA(364.7,363,0)="1081^N^316^^^^N"
^IBA(364.7,363,1)="S IBXDATA="""""
^IBA(364.7,363,3,0)="^^1^1^3030806^^"
^IBA(364.7,363,3,1,0)="Other Insurance Subscriber name Suffix."
^IBA(364.7,364,0)="1082^N^131^^^^N"
^IBA(364.7,364,1)="S IBXDATA=""OI3 """
^IBA(364.7,364,3,0)="^364.73^1^1^3030916^^^^"
^IBA(364.7,364,3,1,0)="Record ID for LOOP 2330, Other Payer Patient Information. One record per 2320 record"
^IBA(364.7,365,0)="1083^N^5^^^^N^1"
^IBA(364.7,365,1)="N Z,Z1 S (Z,Z1)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z1=Z1+1,IBXDATA(Z1)=1"
^IBA(364.7,366,0)="1085^N^5^^^^N"
^IBA(364.7,366,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,2)"
^IBA(364.7,366,3,0)="^^3^3^3070529^"
^IBA(364.7,366,3,1,0)="OI3-6"
^IBA(364.7,366,3,2,0)="2330C/NM109"
^IBA(364.7,366,3,3,0)="Other payer patient primary ID"
^IBA(364.7,368,0)="1086^N^5^^^^N"
^IBA(364.7,368,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,3)"
^IBA(364.7,368,3,0)="^^3^3^3070529^"
^IBA(364.7,368,3,1,0)="OI3-7"
^IBA(364.7,368,3,2,0)="2330C/REF(1)/01"
^IBA(364.7,368,3,3,0)="Other payer patient secondary ID qualifier #1"
^IBA(364.7,369,0)="1087^N^5^^^^N"
^IBA(364.7,369,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,4)"
^IBA(364.7,369,3,0)="^^3^3^3070529^"
^IBA(364.7,369,3,1,0)="OI3-8"
^IBA(364.7,369,3,2,0)="2330C/REF(1)/02"
^IBA(364.7,369,3,3,0)="Other payer patient secondary ID #1"
^IBA(364.7,370,0)="1088^N^5^^^^N"
^IBA(364.7,370,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,5)"
^IBA(364.7,370,3,0)="^^3^3^3070529^"
^IBA(364.7,370,3,1,0)="OI3-9"
^IBA(364.7,370,3,2,0)="2330C/REF(2)/01"
^IBA(364.7,370,3,3,0)="Other payer patient secondary ID qualifier #2"
^IBA(364.7,371,0)="1089^N^5^^^^N"
^IBA(364.7,371,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,6)"
^IBA(364.7,371,3,0)="^^3^3^3070529^"
^IBA(364.7,371,3,1,0)="OI3-10"
^IBA(364.7,371,3,2,0)="2330C/REF(2)/02"
^IBA(364.7,371,3,3,0)="Other payer patient secondary ID #2"
^IBA(364.7,372,0)="1090^N^5^^^^N"
^IBA(364.7,372,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,7)"
^IBA(364.7,372,3,0)="^^3^3^3070529^"
^IBA(364.7,372,3,1,0)="OI3-11"
^IBA(364.7,372,3,2,0)="2330C/REF(3)/01"
^IBA(364.7,372,3,3,0)="Other payer patient secondary ID qualifier #3"
^IBA(364.7,373,0)="1091^N^5^^^^N"
^IBA(364.7,373,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,8)"
^IBA(364.7,373,3,0)="^^3^3^3070529^"
^IBA(364.7,373,3,1,0)="OI3-12"
^IBA(364.7,373,3,2,0)="2330C/REF(3)/02"
^IBA(364.7,373,3,3,0)="Other payer patient secondary ID #3"
^IBA(364.7,375,0)="1094^N^5^^^^N"
^IBA(364.7,375,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,2)),U,2)"
^IBA(364.7,375,3,0)="^364.73^2^2^3100917^^^^"
^IBA(364.7,375,3,1,0)="Extract the 364.5 definition into an array. Then use piece 1, Blue Cross "
^IBA(364.7,375,3,2,0)="Number for 8,16 piece 3.. The array will be used for the remaining pieces."
^IBA(364.7,376,0)="1095^N^5^^^^N"
^IBA(364.7,376,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,3)),U,1)"
^IBA(364.7,377,0)="1096^N^5^^^^N"
^IBA(364.7,377,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,3)),U,2)"
^IBA(364.7,386,0)="1189^N^131^^^^N"
^IBA(364.7,386,1)="S IBXDATA=""CL1A """
^IBA(364.7,386,3,0)="^^1^1^3030718^^"
^IBA(364.7,386,3,1,0)="Output RECORD ID for CL1A record."
^IBA(364.7,387,0)="1190^N^131^^^^N"
^IBA(364.7,387,1)="S IBXDATA=""CI1A"""
^IBA(364.7,387,3,0)="^^4^4^3060124^"
^IBA(364.7,387,3,1,0)="Record ID CI1A (Sequence# 28) piece 1.  Hard code ""CI1A"" as the "
^IBA(364.7,387,3,2,0)="first piece."
^IBA(364.7,387,3,3,0)="IB patch 320 - the CI1A segment is a new segment basically replacing the "
^IBA(364.7,387,3,4,0)="PRV1 segment.  Billing provider secondary ID's."
^IBA(364.7,388,0)="1192^N^5^^^^N"
^IBA(364.7,388,1)="S IBXDATA=$P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,0)),U,2)"
^IBA(364.7,388,3,0)="^364.73^2^2^3100917^^^^"
^IBA(364.7,388,3,1,0)="Provider number for the current insurance company for bill entry "
^IBA(364.7,388,3,2,0)="IBXIEN."
^IBA(364.7,389,0)="1191^N^5^^^^N"
^IBA(364.7,389,1)="S IBXDATA=$S($P($G(IBXSAVE(""BILLING PRV"",IBXIEN,""C"",1,0)),U,1)]"""":""EI"",1:"""")"
^IBA(364.7,389,3,0)="^364.73^4^4^3100917^^^^"
^IBA(364.7,389,3,1,0)="Kept N-CURRENT INS POLICY TYPE because didn't want to touch previous logic "
^IBA(364.7,389,3,2,0)="that may set array or TMP."
^IBA(364.7,389,3,3,0)="the format code sets array to string with QUALIF and ID for the first "
^IBA(364.7,389,3,4,0)="seven insurances in file #355.97 except some."
^IBA(364.7,390,0)="172^N^5^^^^N"
^IBA(364.7,390,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""SERVFACDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),""3C""),IBXDATA=$TR(IBXDATA,""-/.,()'"",""  "")"
^IBA(364.7,390,3,0)="^^1^1^3080929^"
^IBA(364.7,390,3,1,0)="SUB-4  lab/facility city name"
^IBA(364.7,391,0)="1194^N^5^^^^N"
^IBA(364.7,391,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,391,3,0)="^364.73^5^5^3140425^^^"
^IBA(364.7,391,3,1,0)="SUB-11"
^IBA(364.7,391,3,2,0)="(P) 2300/AMT(2)/01"
^IBA(364.7,391,3,3,0)="Qualifier for the total purchased services charge amount field.  Output "
^IBA(364.7,391,3,4,0)="the qualifier if IBXSAVE(""PS$"") is true because this indicates a dollar "
^IBA(364.7,391,3,5,0)="amount exists in SUB-7."
^IBA(364.7,404,0)="1207^N^131^^^^N"
^IBA(364.7,404,1)="S IBXDATA=""SUB2"""
^IBA(364.7,405,0)="1209^N^5^^^^N"
^IBA(364.7,405,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,1)),U,2)"
^IBA(364.7,405,3,0)="^364.73^1^1^3041221^^^^"
^IBA(364.7,405,3,1,0)="Output the first 'other' id."
^IBA(364.7,406,0)="1210^N^5^^^^N"
^IBA(364.7,406,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,2)),U,1)"
^IBA(364.7,406,3,0)="^364.73^1^1^3041221^^^^"
^IBA(364.7,406,3,1,0)="Output the second 'other' id qualifier."
^IBA(364.7,407,0)="1211^N^5^^^^N"
^IBA(364.7,407,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,2)),U,2)"
^IBA(364.7,407,3,0)="^364.73^1^1^3030904^^^^"
^IBA(364.7,407,3,1,0)="Output the second 'other' id."
^IBA(364.7,408,0)="1212^N^5^^^^N"
^IBA(364.7,408,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,3)),U,1)"
^IBA(364.7,408,3,0)="^364.73^1^1^3030904^^^^"
^IBA(364.7,408,3,1,0)="Output the third 'other' id qualifier."
^IBA(364.7,409,0)="1213^N^5^^^^N"
^IBA(364.7,409,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,3)),U,2)"
^IBA(364.7,409,3,0)="^364.73^1^1^3030904^^^"
^IBA(364.7,409,3,1,0)="Output the third 'other' id."
^IBA(364.7,414,0)="1219^N^131^^^^N"
^IBA(364.7,414,1)="S IBXDATA=""OPR8"""
^IBA(364.7,414,3,0)="^^1^1^3030815^^^^"
^IBA(364.7,414,3,1,0)="Record ID for SUPERVISING PROVIDER SECONDARY ID'S AND QUALIFIERS"
^IBA(364.7,416,0)="1220^N^131^^^^N"
^IBA(364.7,416,1)="S IBXDATA=""OPR3"""
^IBA(364.7,416,3,0)="^^1^1^3030807^^^"
^IBA(364.7,416,3,1,0)="Record ID ofr Operating Physician Secondary ID and Qualifier."
^IBA(364.7,417,0)="1221^N^131^^^^N"
^IBA(364.7,417,1)="S IBXDATA=""OPR2"""
^IBA(364.7,417,3,0)="^^1^1^3030807^^^^"
^IBA(364.7,417,3,1,0)="Record ID for Attending Provider Secondary ID and Qualifier"
^IBA(364.7,418,0)="1222^N^131^^^^N"
^IBA(364.7,418,1)="S IBXDATA=""OPR1"""
^IBA(364.7,418,3,0)="^364.73^1^1^3031007^^^^"
^IBA(364.7,418,3,1,0)="Record ID for Insurance Specific Provider Information LOPP 2310 , one claim per Claim Data record set."
^IBA(364.7,419,0)="1223^N^131^^^^N"
^IBA(364.7,419,1)="S IBXDATA=""OPR """
^IBA(364.7,419,3,0)="^364.73^1^1^3030910^^^^"
^IBA(364.7,419,3,1,0)="Record ID for Attending/Other Provider Information, LOOP 2310, one claim per Claim Data record set."
^IBA(364.7,420,0)="1224^N^5^^^^N"
^IBA(364.7,420,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,1)),""^"",3)"
^IBA(364.7,420,3,0)="0^364.73^5^5^3101105^^^^"
^IBA(364.7,420,3,1,0)="Attending Provider Secondary ID Qualifier."
^IBA(364.7,420,3,2,0)="EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,"
^IBA(364.7,420,3,3,0)="1C=MEDICARE PARTA and PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE"
^IBA(364.7,420,3,4,0)="G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER"
^IBA(364.7,420,3,5,0)="N5=PROVIDER PLAN NETWORK ID"
^IBA(364.7,421,0)="1225^N^5^^^^N"
^IBA(364.7,421,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,1)),""^"",4),1)"
^IBA(364.7,422,0)="1226^N^5^^^^N"
^IBA(364.7,422,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,2)),""^"",3)"
^IBA(364.7,423,0)="1227^N^5^^^^N"
^IBA(364.7,423,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,2)),""^"",4),1)"
^IBA(364.7,424,0)="1228^N^5^^^^N"
^IBA(364.7,424,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,3)),""^"",3)"
^IBA(364.7,425,0)="1229^N^5^^^^N"
^IBA(364.7,425,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,3)),""^"",4),1)"
^IBA(364.7,426,0)="1230^N^5^^^^N"
^IBA(364.7,426,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,4)),""^"",3)"
^IBA(364.7,427,0)="1231^N^5^^^^N"
^IBA(364.7,427,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,4)),""^"",4),1)"
^IBA(364.7,430,0)="1234^N^5^^^^N"
^IBA(364.7,430,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,1)),""^"",3)"
^IBA(364.7,430,3,0)="^364.73^1^1^3101105^^^^"
^IBA(364.7,430,3,1,0)="Operating Physician Secondary ID and Qualifier."
^IBA(364.7,431,0)="1235^N^5^^^^N"
^IBA(364.7,431,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,1)),""^"",4),1)"
^IBA(364.7,432,0)="1236^N^5^^^^N"
^IBA(364.7,432,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,2)),""^"",3)"
^IBA(364.7,433,0)="1237^N^5^^^^N"
^IBA(364.7,433,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,2)),""^"",4),1)"
^IBA(364.7,434,0)="1238^N^5^^^^N"
^IBA(364.7,434,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,3)),""^"",3)"
^IBA(364.7,435,0)="1239^N^5^^^^N"
^IBA(364.7,435,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,3)),""^"",4),1)"
^IBA(364.7,436,0)="1240^N^5^^^^N"
^IBA(364.7,436,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,4)),""^"",3)"
^IBA(364.7,437,0)="1241^N^5^^^^N"
^IBA(364.7,437,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,4)),""^"",4),1)"
^IBA(364.7,440,0)="1245^N^5^^^^N"
^IBA(364.7,440,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,1)),""^"",4),1)"
^IBA(364.7,440,3,0)="^364.73^4^4^3101105^^^^"
^IBA(364.7,440,3,1,0)="Other Provider Secondary Qualifier 1."
^IBA(364.7,440,3,2,0)="EI=EMPLOYER ID, SY=SSN, 0B=STATE LICENSE #, 1A=BLUE CROSS, 1B=BLUE SHIELD,"
^IBA(364.7,440,3,3,0)="1C=MEDICARE PARTA or PARTB, 1D=MEDICAID, 1G=UPIN #, 1H=TRICARE, G2=COMMERCIAL #"
^IBA(364.7,440,3,4,0)="X5=STATE INDUSTRIAL ACCIDENT PROVIDER #, LU=LOCATION #, N5=PROVIDER PLAN NETWORK ID"
^IBA(364.7,441,0)="1218^N^131^^^^N"
^IBA(364.7,441,1)="S IBXDATA=""OPR5"""
^IBA(364.7,441,3,0)="^364.73^4^4^3040722^^^"
^IBA(364.7,441,3,1,0)="Referring Provider Secondary ID and Qualifier."
^IBA(364.7,441,3,2,0)="0B=STATE LICENSE #, 1B=BLUE SHILED #, 1C=MEDICARE #, 1D=MEDICAID #"
^IBA(364.7,441,3,3,0)="1G=UPIN #, 1H=TRICARE ID #, G2=COMMERCIAL #, X5=STATE INDUSTRIAL ACCIDENT PROVIDER #"
^IBA(364.7,441,3,4,0)="LU=LOCATION #"
^IBA(364.7,443,0)="1277^N^5^^^^N"
^IBA(364.7,443,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,1)),U,3)"
^IBA(364.7,443,3,0)="^364.73^5^5^3171128^^^^"
^IBA(364.7,443,3,1,0)="Supervising Provider Secondary ID Qualifier"
^IBA(364.7,443,3,2,0)="EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,"
^IBA(364.7,443,3,3,0)="1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE"
^IBA(364.7,443,3,4,0)="G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER"
^IBA(364.7,443,3,5,0)="N5=PROVIDER PLAN NETWORK ID"
^IBA(364.7,444,0)="1278^N^5^^^^N"
^IBA(364.7,444,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,1)),U,4),1)"
^IBA(364.7,444,3,0)="^364.73^1^1^3171128^^^^"
^IBA(364.7,444,3,1,0)="Supervising Provider Secondary ID"
^IBA(364.7,445,0)="1279^N^5^^^^N"
^IBA(364.7,445,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,2)),U,3)"
^IBA(364.7,446,0)="1280^N^5^^^^N"
^IBA(364.7,446,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,2)),U,4),1)"
^IBA(364.7,447,0)="1281^N^5^^^^N"
^IBA(364.7,447,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,3)),U,3)"
^IBA(364.7,448,0)="1282^N^5^^^^N"
^IBA(364.7,448,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,3)),U,4),1)"
^IBA(364.7,449,0)="1283^N^5^^^^N"
^IBA(364.7,449,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,4)),U,3)"
^IBA(364.7,450,0)="1284^N^5^^^^N"
^IBA(364.7,450,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,5,4)),U,4),1)"
^IBA(364.7,453,0)="1287^N^131^^^^N"
^IBA(364.7,453,1)="S IBXDATA=""OI4 """
^IBA(364.7,453,3,0)="^364.73^1^1^3030916^^^^"
^IBA(364.7,453,3,1,0)="Other Insured Information, LOOP 2330, one record per 2320 record."
^IBA(364.7,454,0)="1288^N^131^^^^N"
^IBA(364.7,454,1)="S IBXDATA=""OI5 """
^IBA(364.7,454,3,0)="^364.73^1^1^3040728^^^"
^IBA(364.7,454,3,1,0)="Other Insurance Subscriber Information, LOOP 2330"
^IBA(364.7,455,0)="1289^N^5^^^^N"
^IBA(364.7,455,1)="D ELMADD2^IBCEF7(IBXIEN,1,.IBXDATA)"
^IBA(364.7,456,0)="1290^N^5^^^^N"
^IBA(364.7,456,1)="D ELMADD2^IBCEF7(IBXIEN,2,.IBXDATA)"
^IBA(364.7,457,0)="1291^N^5^^^^N"
^IBA(364.7,457,1)="N Z D ELMADD2^IBCEF7(IBXIEN,3,.IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$TR(IBXDATA(Z),""-/.,()'"",""  "")"
^IBA(364.7,458,0)="1292^N^5^^^^N"
^IBA(364.7,458,1)="D ELMADD2^IBCEF7(IBXIEN,4,.IBXDATA)"
^IBA(364.7,459,0)="1293^N^5^^^^N"
^IBA(364.7,459,1)="D ELMADD2^IBCEF7(IBXIEN,5,.IBXDATA)"
^IBA(364.7,460,0)="1294^N^5^^^^N"
^IBA(364.7,460,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,3)"
^IBA(364.7,460,3,0)="^^3^3^3070529^"
^IBA(364.7,460,3,1,0)="OI5-9"
^IBA(364.7,460,3,2,0)="2330A/REF(1)/01"
^IBA(364.7,460,3,3,0)="Other payer subscriber secondary ID qualifier #1"
^IBA(364.7,461,0)="1295^N^5^^^^N"
^IBA(364.7,461,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,4)"
^IBA(364.7,461,3,0)="^^3^3^3070529^"
^IBA(364.7,461,3,1,0)="OI5-10"
^IBA(364.7,461,3,2,0)="2330A/REF(1)/02"
^IBA(364.7,461,3,3,0)="Other payer subscriber secondary ID #1"
^IBA(364.7,466,0)="1116^N^131^^^^N"
^IBA(364.7,466,1)="S IBXDATA=""OP2 """
^IBA(364.7,467,0)="1126^N^131^^^^N"
^IBA(364.7,467,1)="S IBXDATA=""OP3 """
^IBA(364.7,469,0)="1135^N^131^^^^N"
^IBA(364.7,469,1)="S IBXDATA=""OP4 """
^IBA(364.7,471,0)="1162^N^131^^^^N"
^IBA(364.7,471,1)="S IBXDATA=""OP7 """
^IBA(364.7,472,0)="488^N^319^^^^N"
^IBA(364.7,472,1)="K:$D(^TMP(""IBHDR"",$J)) IBXDATA S:'$D(IBXDATA) IBXNOREQ=1"
^IBA(364.7,472,3,0)="3^^3^3^2990610^^^^"
^IBA(364.7,472,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR"",$J) will"
^IBA(364.7,472,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,472,3,3,0)="element so there is no output."
^IBA(364.7,473,0)="479^N^133^^^^N"
^IBA(364.7,473,1)="S IBXNOREQ=$$NFT^IBCEF1(3,IBXIEN) S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,473,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,473,3,1,0)="Format date in CCYYMMDD format.  If data element's value is null, do not"
^IBA(364.7,473,3,2,0)="output."
^IBA(364.7,474,0)="481^N^5^^^^N"
^IBA(364.7,474,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OCCS"",Z)) Q:'Z  S Z0=$P($$DT^IBCEFG1($P(IBXSAVE(""OCCS"",Z),U,2),$P(IBXSAVE(""OCCS"",Z),U,3),""RD8""),""-"",2) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,474,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,474,3,1,0)="Each occurrence span code to date found in the IBXSAVE array previously"
^IBA(364.7,474,3,2,0)="extracted is formatted into CCYYMMDD date format and is output."
^IBA(364.7,475,0)="483^N^5^^^^N"
^IBA(364.7,475,1)="K IBXDATA N Z,Z0,A,A1 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S A=$P(IBXSAVE(""OUTPT"",Z),U),A1=$P(IBXSAVE(""OUTPT"",Z),U,2),Z0=$S('$$INPAT^IBCEF(IBXIEN):$S(A:A,1:A1),1:A1) I Z0 S IBXDATA(Z)=Z0"
^IBA(364.7,475,3,0)="^^4^4^3140714^"
^IBA(364.7,475,3,1,0)="This is a group data element so more than 1 occurrence of a value is "
^IBA(364.7,475,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  "
^IBA(364.7,475,3,3,0)="If any service line data is found, the data is output.  Data is taken "
^IBA(364.7,475,3,4,0)="from the 'from' date if there is no 'to' date."
^IBA(364.7,478,0)="582^N^131^^^^N"
^IBA(364.7,478,1)="K IBXSV S:'$O(^TMP(""IBXMSG"",$J,""""),-1) IBXDATA=""BGN "" S:$G(IBXDATA)="""" IBXNOREQ=1 S ^TMP(""IBTX"",$J,IBXIEN)=1"
^IBA(364.7,478,3,0)="^364.73^3^3^3180130^^^^"
^IBA(364.7,478,3,1,0)="If header data has already been extracted, then kill data element so"
^IBA(364.7,478,3,2,0)="there is no output.  If no header already extracted, output record"
^IBA(364.7,478,3,3,0)="id for 'BGN' record."
^IBA(364.7,479,0)="583^N^136^^^^N"
^IBA(364.7,479,1)="I $D(^TMP(""IBHDR"",$J)) K IBXDATA S IBXNOREQ=1"
^IBA(364.7,479,3,0)="^^3^3^2960815^^^^"
^IBA(364.7,479,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR"",$J) will"
^IBA(364.7,479,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,479,3,3,0)="element so there is no output."
^IBA(364.7,480,0)="580^N^5^^^^N"
^IBA(364.7,480,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""RX""),U,6)"
^IBA(364.7,480,3,0)="^^3^3^2990223^^^"
^IBA(364.7,480,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,480,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,480,3,3,0)="any service line data is found, the quantity '1' is output."
^IBA(364.7,481,0)="581^N^5^^^^N"
^IBA(364.7,481,1)="K IBXDATA"
^IBA(364.7,481,3,0)="^^1^1^3071128^"
^IBA(364.7,481,3,1,0)="This is being blanked out with IB patch 377."
^IBA(364.7,482,0)="579^N^5^^^^N"
^IBA(364.7,482,1)="D INS12^IBCEF2"
^IBA(364.7,482,3,0)="^364.73^6^6^3180131^^"
^IBA(364.7,482,3,1,0)="INS-12 for UB service line detail data."
^IBA(364.7,482,3,2,0)=" "
^IBA(364.7,482,3,3,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,482,3,4,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,482,3,5,0)="any service line data is found, the data is formatted as a numeric "
^IBA(364.7,482,3,6,0)="including cents, without the decimal."
^IBA(364.7,483,0)="605^N^174^^^^N"
^IBA(364.7,483,1)="N Z,Q S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S Q=$S('$G(IBXDATA(Z,""T"")):"" "",1:"""")_IBXDATA(Z) S:Z'>12 IBXDATA(Z)=Q I Z>12 D PG^IBCEF3(Q,Z)"
^IBA(364.7,483,3,0)="^^2^2^3000105^^^^"
^IBA(364.7,483,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,483,3,2,0)="the rest on additional bill pages."
^IBA(364.7,484,0)="606^N^229^^^^N"
^IBA(364.7,484,1)="N Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  S Z0=$S('$G(IBZ(Z,""T"")):$S(IBZ(Z)=""Y"":"" Y"",1:""""),1:IBZ(Z)) S:Z'>12 IBXDATA(Z)=Z0 D:Z>12 PG^IBCEF3(Z0,Z)"
^IBA(364.7,484,3,0)="^^3^3^3000105^^^"
^IBA(364.7,484,3,1,0)="Print a space before the 'Y' if an emergency procedure is indicated."
^IBA(364.7,484,3,2,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,484,3,3,0)="the rest on additional bill pages."
^IBA(364.7,485,0)="607^N^176^^^^N"
^IBA(364.7,485,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,485,3,0)="^^2^2^3000105^^^"
^IBA(364.7,485,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,485,3,2,0)="the rest on additional bill pages."
^IBA(364.7,486,0)="608^N^177^^^^N"
^IBA(364.7,486,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,486,3,0)="^^2^2^3000105^^"
^IBA(364.7,486,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,486,3,2,0)="the rest on additional bill pages."
^IBA(364.7,487,0)="1171^N^131^^^^N"
^IBA(364.7,487,1)="S IBXDATA=""OP8 """
^IBA(364.7,488,0)="610^N^178^^^^N"
^IBA(364.7,488,1)="N Z,Z0 S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D SETMODS^IBCVA1(IBXDATA(Z),Z,.IBXSAVE) S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","") I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,488,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,488,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,488,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,488,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,489,0)="611^N^5^^^^N"
^IBA(364.7,489,1)="K IBXDATA"
^IBA(364.7,489,3,0)="^^1^1^2990609^^^^"
^IBA(364.7,489,3,1,0)="Not currently used. No output"
^IBA(364.7,490,0)="612^N^142^^^^N"
^IBA(364.7,491,0)="613^N^296^^^^N"
^IBA(364.7,492,0)="614^N^72^^^^N"
^IBA(364.7,492,1)="I IBXDATA'="""" S IBXSAVE(""FL2"")=$E(IBXDATA,30,59),IBXDATA=$E(IBXDATA,1,29)"
^IBA(364.7,492,3,0)="^^6^6^2990609^^^^"
^IBA(364.7,492,3,1,0)="If this data element returns a value other than null, it can be output on"
^IBA(364.7,492,3,2,0)="2 lines where characters 1-29 print on line 1 and 30-59 print on line 2."
^IBA(364.7,492,3,3,0)="Save off characters 30-59 in IBXSAVE(""FL2"") array and set value of this"
^IBA(364.7,492,3,4,0)="data element to the first 29 characters.  If the right margin is 81 instead"
^IBA(364.7,492,3,5,0)="of 80, move the field over 1 space.  IBXSAVE(""FL2"") will be printed at a"
^IBA(364.7,492,3,6,0)="later time."
^IBA(364.7,493,0)="615^N^104^^^^N"
^IBA(364.7,493,1)="N IBZ D F^IBCEF(""N-AGENT CASHIER MAIL SYMBOL"",""IBZ"",,IBXIEN) I $G(IBZ)'="""" S IBXDATA=IBXDATA_"" ""_IBZ"
^IBA(364.7,493,3,0)="^364.73^2^2^3040204^^"
^IBA(364.7,493,3,1,0)="Concatenate Agent Cashier Mail Symbol to the end of Agent Cashier Street "
^IBA(364.7,493,3,2,0)="Address."
^IBA(364.7,494,0)="616^N^5^^^^N"
^IBA(364.7,494,1)="S:$D(IBXSAVE(""FL2"")) IBXDATA=IBXSAVE(""FL2"") K IBXSAVE(""FL2"")"
^IBA(364.7,494,3,0)="^^4^4^2990609^^^^"
^IBA(364.7,494,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL2"")"
^IBA(364.7,494,3,2,0)="variable previously extracted.  Form Locator 2 on the UB92 is split into"
^IBA(364.7,494,3,3,0)="2 lines and this is the 30th-59th character entered for this field."
^IBA(364.7,494,3,4,0)="If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,495,0)="617^N^210^^^^N"
^IBA(364.7,496,0)="618^N^5^^^^N"
^IBA(364.7,496,1)="K IBXDATA S:$D(IBXSAVE(""TOB"")) IBXDATA=IBXSAVE(""TOB"") K IBXSAVE(""TOB"") I '$D(IBXDATA) S IBXDATA=$$TOB^IBCEF1(IBXIEN)"
^IBA(364.7,497,0)="619^N^5^^^^N"
^IBA(364.7,497,1)="N Z S IBXDATA=$G(IBXSAVE(""ACCITY""))_$G(IBXSAVE(""ACSTATE""))_$G(IBXSAVE(""ACZIP"")) F Z=""ACCITY"",""ACSTATE"",""ACZIP"" K IBXSAVE(Z)"
^IBA(364.7,497,3,0)="^^3^3^2990609^^^^"
^IBA(364.7,497,3,1,0)="This field consists of a concatenation of 3 fields previously extracted"
^IBA(364.7,497,3,2,0)="and saved in the IBXSAVE array.  This is the city, state and zip for the"
^IBA(364.7,497,3,3,0)="agent cashier address line."
^IBA(364.7,498,0)="620^N^186^^^^N"
^IBA(364.7,498,1)="I IBXDATA'="""" S IBXSAVE(""FL11"")=$E(IBXDATA,13,25),IBXDATA=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_$E(IBXDATA,1,12)"
^IBA(364.7,498,3,0)="^^6^6^2990609^^^^"
^IBA(364.7,498,3,1,0)="If this data element returns a value other than null, it can be output on"
^IBA(364.7,498,3,2,0)="2 lines where characters 1-12 print on line 1 and 13-25 print on line 2."
^IBA(364.7,498,3,3,0)="Save off characters 13-25 in IBXSAVE(""FL11"") array and set value of this"
^IBA(364.7,498,3,4,0)="data element to the first 12 characters.  If the right margin is 81 instead"
^IBA(364.7,498,3,5,0)="of 80, move the field over 1 space.  IBXSAVE(""FL11"") will be printed at a"
^IBA(364.7,498,3,6,0)="later time."
^IBA(364.7,499,0)="621^N^255^^^^N"
^IBA(364.7,499,1)="D:IBXDATA="""" F^IBCEF(""N-AGENT CASHIER PHONE"","""","""",IBXIEN) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)"
^IBA(364.7,499,3,0)="^364.73^2^2^3000822^^^^"
^IBA(364.7,499,3,1,0)="Print the site contact phone or if no site contact phone #, use agent"
^IBA(364.7,499,3,2,0)="cashier's phone #."
^IBA(364.7,500,0)="622^N^109^^^^N"
^IBA(364.7,501,0)="623^N^71^^^^N"
^IBA(364.7,501,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,,1)"
^IBA(364.7,501,3,0)="^^1^1^2991115^^^^"
^IBA(364.7,501,3,1,0)="Format date in MMDDYY format."
^IBA(364.7,502,0)="624^N^133^^^^N"
^IBA(364.7,502,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,,1)"
^IBA(364.7,502,3,0)="^^1^1^2991115^^^^"
^IBA(364.7,502,3,1,0)="Format date in MMDDYY format."
^IBA(364.7,503,0)="625^N^75^^^^N"
^IBA(364.7,503,1)="I IBXDATA S IBXDATA=$E(""000"",1,3-$L(IBXDATA))_IBXDATA"
^IBA(364.7,503,3,0)="^^1^1^3040217^"
^IBA(364.7,503,3,1,0)="Format Covered Days to have leading zeroes."
^IBA(364.7,504,0)="626^N^76^^^^N"
^IBA(364.7,504,1)="I 'IBXDATA S IBXDATA="""""
^IBA(364.7,504,3,0)="^^1^1^3040217^"
^IBA(364.7,504,3,1,0)="Display a blank if non-covered days field is zero."
^IBA(364.7,505,0)="627^N^218^^^^N"
^IBA(364.7,505,3,0)="^^1^1^2991004^^^^"
^IBA(364.7,505,3,1,0)="Not currently used"
^IBA(364.7,506,0)="628^N^5^^^^N"
^IBA(364.7,506,1)="K IBXDATA"
^IBA(364.7,506,3,0)="^^1^1^2990609^^^"
^IBA(364.7,506,3,1,0)="Not currently used."
^IBA(364.7,507,0)="629^N^5^^^^N"
^IBA(364.7,507,1)="S:$D(IBXSAVE(""FL11"")) IBXDATA=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_IBXSAVE(""FL11"") K IBXSAVE(""FL11"")"
^IBA(364.7,507,3,0)="^^4^4^2990609^^^^"
^IBA(364.7,507,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL11"")"
^IBA(364.7,507,3,2,0)="variable previously extracted.  Form Locator 11 on the UB92 is split into"
^IBA(364.7,507,3,3,0)="2 lines and this is the 13th-25th character entered for this field."
^IBA(364.7,507,3,4,0)="If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,508,0)="630^N^65^^^^N"
^IBA(364.7,509,0)="631^N^187^^^^N"
^IBA(364.7,510,0)="632^N^15^^^^N"
^IBA(364.7,510,1)="I IBXDATA'="""" S IBXSAVE(""FL31"")=$E(IBXDATA,6,11),IBXDATA=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_$E(IBXDATA,1,5)"
^IBA(364.7,510,3,0)="^^6^6^2990609^^^^"
^IBA(364.7,510,3,1,0)="If this data element returns a value other than null, it can be output on"
^IBA(364.7,510,3,2,0)="2 lines where characters 1-5 print on line 1 and 6-11 print on line 2."
^IBA(364.7,510,3,3,0)="Save off characters 6-11 in IBXSAVE(""FL31"") array and set value of this"
^IBA(364.7,510,3,4,0)="data element to the first 5 characters.  If the right margin is 81 instead"
^IBA(364.7,510,3,5,0)="of 80, move the field over 1 space.  IBXSAVE(""FL31"") will be printed at a"
^IBA(364.7,510,3,6,0)="later time."
^IBA(364.7,511,0)="633^N^66^^^^N"
^IBA(364.7,511,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1,1) S:IBXDATA="""" IBXDATA=""00000000"""
^IBA(364.7,511,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,511,3,1,0)="If BIRTHDATE exists, format it MMDDYYYY.  If it doesn't exist, output"
^IBA(364.7,511,3,2,0)="00000000."
^IBA(364.7,512,0)="634^N^67^^^^N"
^IBA(364.7,512,1)="S:IBXDATA="""" IBXDATA=""U"""
^IBA(364.7,512,3,0)="^^1^1^2990609^^^"
^IBA(364.7,512,3,1,0)="If the data element's value is null, set it equal to 'U'."
^IBA(364.7,513,0)="635^N^68^^^^N"
^IBA(364.7,513,1)="S IBXDATA=$$MARITAL^IBCEFG1(+IBXDATA),IBXDATA=$S(IBXDATA=""I"":""S"",""K""[IBXDATA:""U"",1:IBXDATA)"
^IBA(364.7,513,3,0)="^364.73^2^2^3010514^^"
^IBA(364.7,513,3,1,0)="Translate the marital status X12 code to external UB92 format."
^IBA(364.7,513,3,2,0)="D=='D'  M=='M'  W=='W'  X=='X'  I=='S'  anything else is 'U'."
^IBA(364.7,514,0)="636^N^78^^^^N"
^IBA(364.7,514,1)="S IBXSAVE(""ADTM"")=$$TIME^IBCF3(IBXDATA),IBXDATA=$$DATE^IBCF2($P(IBXDATA,"".""),,1)"
^IBA(364.7,514,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,514,3,1,0)="Save the admission time in IBXSAVE array for later use.  Format date"
^IBA(364.7,514,3,2,0)="without the time as MMDDYY."
^IBA(364.7,515,0)="637^N^5^^^^N"
^IBA(364.7,515,1)="S IBXDATA=$S('$$INPAT^IBCEF(IBXIEN,1):"""",$G(IBXSAVE(""ADTM""))'="""":$E(IBXSAVE(""ADTM""),1,2),1:99)"
^IBA(364.7,516,0)="638^N^79^^^^N"
^IBA(364.7,517,0)="639^N^80^^^^N"
^IBA(364.7,518,0)="640^N^81^^^^N"
^IBA(364.7,518,1)="K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) S IBXDATA=$S($P(IBXDATA,""."",2)'="""":$$TIME^IBCF3(IBXDATA),1:"""")"
^IBA(364.7,518,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,518,3,1,0)="If this is an outpatient bill, no output.  For inpatient bills, output the"
^IBA(364.7,518,3,2,0)="time portion of the discharge date/time or 99 if no time found."
^IBA(364.7,519,0)="641^N^9^^^^N"
^IBA(364.7,520,0)="642^N^10^^^^N"
^IBA(364.7,520,1)="S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,521,0)="643^N^11^^^^N"
^IBA(364.7,521,1)="N Z S Z=0 K IBXDATA M IBXSAVE(""CC"")=IBFL(24)"
^IBA(364.7,522,0)="644^N^5^^^^N"
^IBA(364.7,522,1)="K IBXDATA I $G(IBXSAVE(""CC"",1))'="""" S IBXDATA=IBXSAVE(""CC"",1) K IBXSAVE(""CC"",1)"
^IBA(364.7,522,3,0)="^^7^7^2990610^^^^"
^IBA(364.7,522,3,1,0)="Data element's array reference is IBFL(24), not default of IBXDATA.  This is"
^IBA(364.7,522,3,2,0)="a group data element so more than 1 occurrence of a value is possible for"
^IBA(364.7,522,3,3,0)="the data element in the IBFL(24) array.  All occurrences of the data element"
^IBA(364.7,522,3,4,0)="are saved in the IBXSAVE(""CC"",n) array and only IBXSAVE(""CC"",1) is output"
^IBA(364.7,522,3,5,0)="in this field. Note: hard code is used to output the"
^IBA(364.7,522,3,6,0)="codes that exceed the # that will fit on one page if multiple pages of bill"
^IBA(364.7,522,3,7,0)="are printed."
^IBA(364.7,523,0)="645^N^5^^^^N"
^IBA(364.7,523,1)="K IBXDATA I $G(IBXSAVE(""CC"",2))'="""" S IBXDATA=IBXSAVE(""CC"",2) K IBXSAVE(""CC"",2)"
^IBA(364.7,523,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,523,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,523,3,2,0)="This field reports the data in the second occurrence of the array."
^IBA(364.7,524,0)="646^N^5^^^^N"
^IBA(364.7,524,1)="K IBXDATA I $G(IBXSAVE(""CC"",3))'="""" S IBXDATA=IBXSAVE(""CC"",3) K IBXSAVE(""CC"",3)"
^IBA(364.7,524,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,524,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,524,3,2,0)="This field reports the data in the third occurrence of the array."
^IBA(364.7,525,0)="647^N^5^^^^N"
^IBA(364.7,525,1)="K IBXDATA I $G(IBXSAVE(""CC"",4))'="""" S IBXDATA=IBXSAVE(""CC"",4) K IBXSAVE(""CC"",4)"
^IBA(364.7,525,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,525,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,525,3,2,0)="This field reports the data in the fourth occurrence of the array."
^IBA(364.7,526,0)="648^N^5^^^^N"
^IBA(364.7,526,1)="K IBXDATA I $G(IBXSAVE(""CC"",5))'="""" S IBXDATA=IBXSAVE(""CC"",5) K IBXSAVE(""CC"",5)"
^IBA(364.7,526,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,526,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,526,3,2,0)="This field reports the data in the fifth occurrence of the array."
^IBA(364.7,527,0)="649^N^5^^^^N"
^IBA(364.7,527,1)="K IBXDATA I $G(IBXSAVE(""CC"",6))'="""" S IBXDATA=IBXSAVE(""CC"",6) K IBXSAVE(""CC"",6)"
^IBA(364.7,527,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,527,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,527,3,2,0)="This field reports the data in the sixth occurrence of the array."
^IBA(364.7,528,0)="650^N^5^^^^N"
^IBA(364.7,528,1)="S:$G(IBXSAVE(""CC"",7))'="""" IBXDATA=IBXSAVE(""CC"",7) K IBXSAVE(""CC"",7) S Z=0 F  S Z=$O(IBXSAVE(""CC"",Z)) Q:'Z  D XCC^IBCEF3(IBXSAVE(""CC"",Z),Z)"
^IBA(364.7,528,3,0)="^^4^4^2990609^^^^"
^IBA(364.7,528,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,528,3,2,0)="This field reports the data in the seventh occurrence of the array."
^IBA(364.7,528,3,3,0)="If there are more than 7 condition codes present, save them in the global"
^IBA(364.7,528,3,4,0)="overflow array."
^IBA(364.7,529,0)="651^N^5^^^^N"
^IBA(364.7,529,1)="S:$D(IBXSAVE(""FL31"")) IBXDATA=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_IBXSAVE(""FL31"") K IBXSAVE(""FL31"")"
^IBA(364.7,529,3,0)="^^4^4^2990609^^^^"
^IBA(364.7,529,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL31"")"
^IBA(364.7,529,3,2,0)="variable previously extracted.  Form Locator 31 on the UB92 is split into"
^IBA(364.7,529,3,3,0)="2 lines and this is the 6th-11th character entered for this field."
^IBA(364.7,529,3,4,0)="If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,530,0)="652^N^191^^^^N"
^IBA(364.7,530,1)="I $G(IBXDATA)'="""" S:$G(^TMP(""IBXSAVE"",$J,""RM"")) IBXDATA="" ""_IBXDATA"
^IBA(364.7,530,3,0)="^^1^1^2991004^^^^"
^IBA(364.7,530,3,1,0)="If the right margin is 81 instead of 80, move the output over 1 space."
^IBA(364.7,531,0)="1180^N^131^^^^N"
^IBA(364.7,531,1)="S IBXDATA=""OP9 """
^IBA(364.7,532,0)="1300^N^131^^^^N"
^IBA(364.7,532,1)="S IBXDATA=""OPR4"""
^IBA(364.7,532,3,0)="^^1^1^3030807^^^^"
^IBA(364.7,532,3,1,0)="RECORD ID FOR OTHER PROVIDER SECONDARY ID"
^IBA(364.7,533,0)="655^N^190^^^^N"
^IBA(364.7,533,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=1,5 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,533,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,533,3,1,0)="The data element extracts multiply-occurring data for the occurrence codes"
^IBA(364.7,533,3,2,0)="and occurrence span codes and outputs the first occurrence code here."
^IBA(364.7,533,3,3,0)="Overflow codes are printed on a separate page."
^IBA(364.7,534,0)="656^N^5^^^^N"
^IBA(364.7,534,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=1:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>5 IBXDATA(Z0)=Z1 D:Z>5 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,32) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,534,3,0)="^^6^6^2991115^^^^"
^IBA(364.7,534,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,534,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,534,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 1st and 5th"
^IBA(364.7,534,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,534,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,534,3,6,0)="Overflow codes (9,13,...) are printed on a separate page."
^IBA(364.7,535,0)="1182^N^5^^^^N"
^IBA(364.7,535,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""1"")"
^IBA(364.7,535,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,535,3,1,0)="HARD CODE PERSON QUALIFIER"
^IBA(364.7,536,0)="658^N^5^^^^N"
^IBA(364.7,536,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=2:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>6 IBXDATA(Z0)=Z1 D:Z>6 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,33) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,536,3,0)="^^6^6^2991115^^^^"
^IBA(364.7,536,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,536,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,536,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 2nd and 6th"
^IBA(364.7,536,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,536,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,536,3,6,0)="Overflow codes (10,14,...) are printed on a separate page."
^IBA(364.7,537,0)="1107^N^5^^^^N^0"
^IBA(364.7,537,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""82"")"
^IBA(364.7,537,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,537,3,1,0)="QUAL IS 71 FOR INST AND 82 FOR PROF"
^IBA(364.7,538,0)="1113^N^5^^^^N^0"
^IBA(364.7,538,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""I"",2) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,539,0)="661^N^5^^^^N"
^IBA(364.7,539,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=3:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>7 IBXDATA(Z0)=Z1 D:Z>7 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,34) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,539,3,0)="^^6^6^2991115^^^^"
^IBA(364.7,539,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,539,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,539,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 3rd and 7th"
^IBA(364.7,539,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,539,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,539,3,6,0)="Any overflow codes (11,15,...) are output on a separate page."
^IBA(364.7,540,0)="1115^N^5^^^^N"
^IBA(364.7,540,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""I"",3) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,541,0)="1108^N^5^^^^N^0"
^IBA(364.7,541,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""1"")"
^IBA(364.7,541,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,541,3,1,0)="HARD CODE PERSON CODE ""1"""
^IBA(364.7,542,0)="1111^N^5^^^^N^0"
^IBA(364.7,542,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""I"",1) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,542,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,542,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,543,0)="1110^N^5^^^^N^0"
^IBA(364.7,543,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""Q"",1)"
^IBA(364.7,543,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,543,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,544,0)="1112^N^5^^^^N^0"
^IBA(364.7,544,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""Q"",2)"
^IBA(364.7,544,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,544,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,545,0)="1118^N^5^^^^N^0"
^IBA(364.7,545,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""1"")"
^IBA(364.7,545,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,545,3,1,0)="HARD CODE ENTITY TYPE QUALIFIER 1=PERSON"
^IBA(364.7,546,0)="1119^N^5^^^^N^0"
^IBA(364.7,546,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""Q"",1)"
^IBA(364.7,546,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,546,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,547,0)="1121^N^5^^^^N^0"
^IBA(364.7,547,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""Q"",2)"
^IBA(364.7,547,3,0)="^364.73^1^1^3101108^^"
^IBA(364.7,547,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,548,0)="1123^N^5^^^^N^0"
^IBA(364.7,548,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""Q"",3)"
^IBA(364.7,548,3,0)="^364.73^1^1^3101108^^"
^IBA(364.7,548,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,549,0)="1120^N^5^^^^N^0"
^IBA(364.7,549,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""I"",1) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,549,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,549,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,550,0)="1124^N^5^^^^N^0"
^IBA(364.7,550,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""I"",3) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,550,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,550,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,551,0)="1117^N^5^^^^N^0"
^IBA(364.7,551,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""72"")"
^IBA(364.7,551,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,551,3,1,0)="HARD CODE ""72"" OTHER PAYER OPERATING PROVIDER NAME QUALIFIER"
^IBA(364.7,552,0)="1128^N^5^^^^N^0"
^IBA(364.7,552,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z)) Q:'Z  I $O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,0)) S IBXDATA(Z)=2"
^IBA(364.7,552,3,0)="^^2^2^3060314^"
^IBA(364.7,552,3,1,0)="OP3-4"
^IBA(364.7,552,3,2,0)="Hard code ""2""."
^IBA(364.7,553,0)="1131^N^5^^^^N^0"
^IBA(364.7,553,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,2)),U,1)"
^IBA(364.7,553,3,0)="^^2^2^3060314^"
^IBA(364.7,553,3,1,0)="OP3-7"
^IBA(364.7,553,3,2,0)="Lab/Facility, Other Payer, Qualifier #2"
^IBA(364.7,554,0)="1129^N^5^^^^N^0"
^IBA(364.7,554,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,1)),U,1)"
^IBA(364.7,554,3,0)="^^2^2^3060314^"
^IBA(364.7,554,3,1,0)="OP3-5"
^IBA(364.7,554,3,2,0)="Lab/Facility, Other Payer, Qualifier #1"
^IBA(364.7,555,0)="1133^N^5^^^^N^0"
^IBA(364.7,555,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,3)),U,1)"
^IBA(364.7,555,3,0)="^^2^2^3060314^"
^IBA(364.7,555,3,1,0)="OP3-9"
^IBA(364.7,555,3,2,0)="Lab/Facility, Other Payer, Qualifier #3"
^IBA(364.7,556,0)="1130^N^5^^^^N^0"
^IBA(364.7,556,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,1)),U,2)"
^IBA(364.7,556,3,0)="^^2^2^3060314^"
^IBA(364.7,556,3,1,0)="OP3-6"
^IBA(364.7,556,3,2,0)="Lab/Facility, Other Payer, ID #1"
^IBA(364.7,557,0)="1132^N^5^^^^N^0"
^IBA(364.7,557,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,2)),U,2)"
^IBA(364.7,557,3,0)="^^2^2^3060314^"
^IBA(364.7,557,3,1,0)="OP3-8"
^IBA(364.7,557,3,2,0)="Lab/Facility, Other Payer, ID #2"
^IBA(364.7,558,0)="1134^N^5^^^^N^0"
^IBA(364.7,558,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,3)),U,2) D:Z=2 CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,558,3,0)="^364.73^3^3^3101108^^"
^IBA(364.7,558,3,1,0)="OP3-10"
^IBA(364.7,558,3,2,0)="Lab/Facility, Other Payer, ID #3"
^IBA(364.7,558,3,3,0)="Clean up IBXSAVE array when done with this segment."
^IBA(364.7,559,0)="1127^N^5^^^^N^0"
^IBA(364.7,559,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z)) Q:'Z  I $O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,0)) S IBXDATA(Z)=""FA"""
^IBA(364.7,559,3,0)="^^2^2^3060314^"
^IBA(364.7,559,3,1,0)="OP3-3"
^IBA(364.7,559,3,2,0)="Hard code ""FA"""
^IBA(364.7,560,0)="1137^N^5^^^^N^0"
^IBA(364.7,560,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""1"")"
^IBA(364.7,560,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,560,3,1,0)="HARD CODE ENTITY TYPE"
^IBA(364.7,561,0)="1136^N^5^^^^N^0"
^IBA(364.7,561,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""DN"")"
^IBA(364.7,561,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,561,3,1,0)="HARD CODE REFERRING PROVIDER CODE"
^IBA(364.7,562,0)="1138^N^5^^^^N^0"
^IBA(364.7,562,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""Q"",1)"
^IBA(364.7,563,0)="1140^N^5^^^^N^0"
^IBA(364.7,563,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""Q"",2)"
^IBA(364.7,564,0)="1142^N^5^^^^N^0"
^IBA(364.7,564,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""Q"",3)"
^IBA(364.7,565,0)="1139^N^5^^^^N^0"
^IBA(364.7,565,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""I"",1) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,565,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,565,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,566,0)="1141^N^5^^^^N^0"
^IBA(364.7,566,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""I"",2) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,566,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,566,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,567,0)="1143^N^5^^^^N^0"
^IBA(364.7,567,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,1,""I"",3) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,567,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,567,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,583,0)="1161^N^5^^^^N^0"
^IBA(364.7,583,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,3)),U,2) D:Z=2 CLEANUP^IBCEF75(.IBXSAVE)"
^IBA(364.7,583,3,0)="^^3^3^3060314^"
^IBA(364.7,583,3,1,0)="OP6-10"
^IBA(364.7,583,3,2,0)="lab/facility, other payer, secondary ID #3.  Clean up IBXSAVE array nodes "
^IBA(364.7,583,3,3,0)="used here."
^IBA(364.7,584,0)="1165^N^5^^^^N^0"
^IBA(364.7,584,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,1)),U,1)"
^IBA(364.7,584,3,0)="^^2^2^3060314^"
^IBA(364.7,584,3,1,0)="OP7-5"
^IBA(364.7,584,3,2,0)="Lab/Facility, Other Payer, Qualifier #1"
^IBA(364.7,585,0)="1167^N^5^^^^N^0"
^IBA(364.7,585,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,2)),U,1)"
^IBA(364.7,585,3,0)="^^2^2^3060314^"
^IBA(364.7,585,3,1,0)="OP7-7"
^IBA(364.7,585,3,2,0)="Lab/Facility, Other Payer, Qualifier #2"
^IBA(364.7,586,0)="1169^N^5^^^^N^0"
^IBA(364.7,586,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,3)),U,1)"
^IBA(364.7,586,3,0)="^^2^2^3060314^"
^IBA(364.7,586,3,1,0)="OP7-9"
^IBA(364.7,586,3,2,0)="Lab/Facility, Other Payer, Qualifier #3"
^IBA(364.7,587,0)="1166^N^5^^^^N^0"
^IBA(364.7,587,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,1)),U,2)"
^IBA(364.7,587,3,0)="^^2^2^3060314^"
^IBA(364.7,587,3,1,0)="OP7-6"
^IBA(364.7,587,3,2,0)="Lab/Facility, Other Payer, ID #1"
^IBA(364.7,588,0)="1168^N^5^^^^N^0"
^IBA(364.7,588,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,2)),U,2)"
^IBA(364.7,588,3,0)="^^2^2^3060314^"
^IBA(364.7,588,3,1,0)="OP7-8"
^IBA(364.7,588,3,2,0)="Lab/Facility, Other Payer, ID #2"
^IBA(364.7,589,0)="1170^N^5^^^^N^0"
^IBA(364.7,589,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,3)),U,2) D:Z=2 CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,589,3,0)="^364.73^3^3^3101108^^"
^IBA(364.7,589,3,1,0)="OP7-10"
^IBA(364.7,589,3,2,0)="Lab/Facility, Other Payer, ID #3"
^IBA(364.7,589,3,3,0)="Cleanup array when done with segment."
^IBA(364.7,590,0)="1164^N^5^^^^N^0"
^IBA(364.7,590,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z)) Q:'Z  I $O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,0)) S IBXDATA(Z)=2"
^IBA(364.7,590,3,0)="^^2^2^3060314^"
^IBA(364.7,590,3,1,0)="OP7-4"
^IBA(364.7,590,3,2,0)="Default a 2 for non-person."
^IBA(364.7,591,0)="1163^N^5^^^^N^0"
^IBA(364.7,591,1)="N Z,NVA,TYP S NVA=+$P($G(^DGCR(399,IBXIEN,""U2"")),U,10),TYP="""" S:NVA TYP=$P($G(^IBA(355.93,NVA,0)),U,11) S:TYP="""" TYP=""FA"" K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z)) Q:'Z  I $O(IBXSAVE(""LAB/FAC"",IBXIEN,""O"",Z,0)) S IBXDATA(Z)=TYP"
^IBA(364.7,591,3,0)="^^3^3^3060314^"
^IBA(364.7,591,3,1,0)="OP7-3"
^IBA(364.7,591,3,2,0)="Determine if there is a non-VA facility on the claim.  If so, capture the "
^IBA(364.7,591,3,3,0)=".11 field from file 355.93 - X12 Type of Facility.  Default FA otherwise."
^IBA(364.7,592,0)="1173^N^5^^^^N^0"
^IBA(364.7,592,1)="N Z S Z=0 F  S Z=$O(IBXSAVE(""OSQ"",Z)) Q:'Z  S IBXDATA(IBXSAVE(""OSQ"",Z))=1"
^IBA(364.7,592,3,0)="^^2^2^3030902^^^^"
^IBA(364.7,592,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids exist."
^IBA(364.7,592,3,2,0)="Output the qualifier for a person (1)."
^IBA(364.7,593,0)="1174^N^5^^^^N^0"
^IBA(364.7,593,1)="K IBXDATA D OTHID^IBCEF71(.IBXSAVE,.IBXDATA,IBXIEN,1,5,1,0)"
^IBA(364.7,593,3,0)="^^2^2^3030902^^^^"
^IBA(364.7,593,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids"
^IBA(364.7,593,3,2,0)="exist for the first 'other' id qualifier."
^IBA(364.7,594,0)="1176^N^5^^^^N^0"
^IBA(364.7,594,1)="K IBXDATA D OTHID^IBCEF71(.IBXSAVE,.IBXDATA,IBXIEN,2,5,1,0)"
^IBA(364.7,594,3,0)="^^2^2^3030902^^^^"
^IBA(364.7,594,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids"
^IBA(364.7,594,3,2,0)="exist for the second 'other' id qualifier."
^IBA(364.7,595,0)="1178^N^5^^^^N^0"
^IBA(364.7,595,1)="K IBXDATA D OTHID^IBCEF71(.IBXSAVE,.IBXDATA,IBXIEN,3,5,1,0)"
^IBA(364.7,595,3,0)="^^2^2^3030902^^^^"
^IBA(364.7,595,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids"
^IBA(364.7,595,3,2,0)="exist for the third 'other' id qualifier."
^IBA(364.7,596,0)="1175^N^5^^^^N^0"
^IBA(364.7,596,1)="K IBXDATA D OTHID^IBCEF71(.IBXSAVE,.IBXDATA,IBXIEN,1,5,0,0) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,596,3,0)="^364.73^2^2^3030930^^^^"
^IBA(364.7,596,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids"
^IBA(364.7,596,3,2,0)="exist for the first 'other' id."
^IBA(364.7,597,0)="1177^N^5^^^^N^0"
^IBA(364.7,597,1)="K IBXDATA D OTHID^IBCEF71(.IBXSAVE,.IBXDATA,IBXIEN,2,5,0,0) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,597,3,0)="^364.73^2^2^3030930^^^^"
^IBA(364.7,597,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids"
^IBA(364.7,597,3,2,0)="exist for the second 'other' id."
^IBA(364.7,598,0)="1179^N^5^^^^N^0"
^IBA(364.7,598,1)="K IBXDATA D OTHID^IBCEF71(.IBXSAVE,.IBXDATA,IBXIEN,3,5,0,0) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1) K IBXSAVE(""OSQ"")"
^IBA(364.7,598,3,0)="^364.73^2^2^3030930^^^^"
^IBA(364.7,598,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids"
^IBA(364.7,598,3,2,0)="exist for the third 'other' id.  Kill the IBXSAVE(""OSQ"") array to clean up."
^IBA(364.7,599,0)="1172^N^5^^^^N^0"
^IBA(364.7,599,1)="N Z S Z=0 F  S Z=$O(IBXSAVE(""OSQ"",Z)) Q:'Z  S IBXDATA(IBXSAVE(""OSQ"",Z))=""DQ"""
^IBA(364.7,599,3,0)="^^2^2^3030902^^^^"
^IBA(364.7,599,3,1,0)="Use the IBXSAVE(""OSQ"",n) record to determine which 'OTHER PAYER' ids exist."
^IBA(364.7,599,3,2,0)="Output the qualifier 'DQ'."
^IBA(364.7,600,0)="1183^N^5^^^^N^0"
^IBA(364.7,600,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""Q"",1)"
^IBA(364.7,601,0)="1185^N^5^^^^N^0"
^IBA(364.7,601,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""Q"",2)"
^IBA(364.7,602,0)="1187^N^5^^^^N^0"
^IBA(364.7,602,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""Q"",3)"
^IBA(364.7,602,3,0)="^364.73^1^1^3101109^^"
^IBA(364.7,602,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,603,0)="1184^N^5^^^^N^0"
^IBA(364.7,603,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""I"",1) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,603,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,603,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,604,0)="1186^N^5^^^^N^0"
^IBA(364.7,604,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""I"",2) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,604,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,604,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,605,0)="1188^N^5^^^^N^0"
^IBA(364.7,605,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""I"",3) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,605,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,605,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,606,0)="728^N^5^^^^N"
^IBA(364.7,606,1)="I $D(IBXSAVE(""DX"",5)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",5),0)),U) K IBXSAVE(""DX"",5)"
^IBA(364.7,606,3,0)="^^1^1^2960814^^"
^IBA(364.7,606,3,1,0)="If there is a fifth diagnosis, print its name."
^IBA(364.7,607,0)="729^N^5^^^^N"
^IBA(364.7,607,1)="I $D(IBXSAVE(""DX"",6)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",6),0)),U) K IBXSAVE(""DX"",6)"
^IBA(364.7,607,3,0)="^^1^1^2960814^^"
^IBA(364.7,607,3,1,0)="If there is a sixth diagnosis, print its name."
^IBA(364.7,608,0)="730^N^5^^^^N"
^IBA(364.7,608,1)="I $D(IBXSAVE(""DX"",7)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",7),0)),U) K IBXSAVE(""DX"",7)"
^IBA(364.7,608,3,0)="^^1^1^2960814^^"
^IBA(364.7,608,3,1,0)="If there is a seventh diagnosis, print its name."
^IBA(364.7,609,0)="731^N^5^^^^N"
^IBA(364.7,609,1)="I $D(IBXSAVE(""DX"",8)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",8),0)),U) K IBXSAVE(""DX"",8)"
^IBA(364.7,609,3,0)="^^1^1^2960814^^"
^IBA(364.7,609,3,1,0)="If there is an eighth diagnosis, print its name."
^IBA(364.7,610,0)="732^N^5^^^^N"
^IBA(364.7,610,1)="S:$D(IBXSAVE(""DX"",9)) IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",9),0)),U)"
^IBA(364.7,610,3,0)="^^2^2^2991014^^^^"
^IBA(364.7,610,3,1,0)="If there is a ninth diagnosis, print its name."
^IBA(364.7,610,3,2,0)="Check for more than 8 other diagnoses on file. If there is, output on new pg."
^IBA(364.7,611,0)="733^N^85^^^^N"
^IBA(364.7,612,0)="734^N^253^^^^N"
^IBA(364.7,612,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,612,3,1,0)="This data element relies on the existence of the array containing the"
^IBA(364.7,612,3,2,0)="diagnoses for the bill, previously extracted.  This data will be output if"
^IBA(364.7,612,3,3,0)="it is the first 'E-code' dx found."
^IBA(364.7,613,0)="735^N^5^^^^N"
^IBA(364.7,613,1)="S:$D(IBXSAVE(""FL78"")) IBXDATA=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_IBXSAVE(""FL78"") K IBXSAVE(""FL78"")"
^IBA(364.7,613,3,0)="^^6^6^2960814^^^"
^IBA(364.7,613,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL78"")"
^IBA(364.7,613,3,2,0)="variable previously extracted.  Form Locator 78 on the UB92 is split into"
^IBA(364.7,613,3,3,0)="2 lines and this is the 3rd-5th character entered for this field if the"
^IBA(364.7,613,3,4,0)="entire text is greater than 3 characters in length, or is the entire text"
^IBA(364.7,613,3,5,0)="if not.  If the right margin is 81 instead of 80, move the field over 1"
^IBA(364.7,613,3,6,0)="space."
^IBA(364.7,614,0)="736^N^5^^^^N"
^IBA(364.7,614,1)="K IBXSAVE(""PRV-82"") D BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$G(IBXSAVE(""PRV-82"",1))"
^IBA(364.7,614,3,0)="^364.73^2^2^3040303^^^^"
^IBA(364.7,614,3,1,0)="Extracts all the possible providers into the appropriate line for box 82"
^IBA(364.7,614,3,2,0)="of the UB-92 print claim form.  This is the first line extracted."
^IBA(364.7,615,0)="737^N^203^^^^N"
^IBA(364.7,615,1)="I IBXDATA=4 S IBXDATA=5"
^IBA(364.7,615,3,0)="^^1^1^2991222^^"
^IBA(364.7,615,3,1,0)="Data can only be 5 (HCPCS) or 9 (ICD9).  CPT-4 (4) has been rolled into 5"
^IBA(364.7,616,0)="738^N^16^^^^N"
^IBA(364.7,616,1)="N Z S Z="""" F  S Z=$O(IBXDATA(Z)) Q:'Z  S $P(IBXDATA(Z),U,2)=$$DATE^IBCF3($P(IBXDATA(Z),U,2)),IBXSAVE(""PROC"",Z)=IBXDATA(Z) K IBXDATA(Z)"
^IBA(364.7,616,3,0)="^^5^5^2991115^^^^"
^IBA(364.7,616,3,1,0)="This is a group data element so more than one occurrence of IBXDATA(n) is"
^IBA(364.7,616,3,2,0)="possible.  Save off the procedures in the IBXSAVE array.  Six procedures"
^IBA(364.7,616,3,3,0)="will fit on a single page of a bill.  If more than 6 procedure codes are"
^IBA(364.7,616,3,4,0)="on the bill, multiple pages are used.  The format of the IBXSAVE array is:"
^IBA(364.7,616,3,5,0)="   the actual code for the ICD9 or ICD0 code^proc date formatted as MMDDYY"
^IBA(364.7,617,0)="739^N^5^^^^N"
^IBA(364.7,617,1)="K IBXDATA I $D(IBXSAVE(""PROC"",1)) S IBXDATA=$P(IBXSAVE(""PROC"",1),U),IBXDATA=$S(IBXDATA[""ICPT""!(IBXDATA[""ICD0""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,617,3,0)="^^3^3^2991013^^^^"
^IBA(364.7,617,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,617,3,2,0)="previously extracted.  If the first occurrence exists, output the code"
^IBA(364.7,617,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,618,0)="740^N^5^^^^N"
^IBA(364.7,618,1)="K IBXDATA I $D(IBXSAVE(""PROC"",1)) S IBXDATA=$P(IBXSAVE(""PROC"",1),U,2) K IBXSAVE(""PROC"",1)"
^IBA(364.7,618,3,0)="^^3^3^2991013^^^^"
^IBA(364.7,618,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,618,3,2,0)="previously extracted.  If the first occurrence exists, output the date"
^IBA(364.7,618,3,3,0)="found in its second '^' piece."
^IBA(364.7,619,0)="741^N^5^^^^N"
^IBA(364.7,619,1)="K IBXDATA I $D(IBXSAVE(""PROC"",2)) S IBXDATA=$P(IBXSAVE(""PROC"",2),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,619,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,619,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,619,3,2,0)="previously extracted.  If the second occurrence exists, output the code"
^IBA(364.7,619,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,620,0)="742^N^5^^^^N"
^IBA(364.7,620,1)="K IBXDATA I $D(IBXSAVE(""PROC"",2)) S IBXDATA=$P(IBXSAVE(""PROC"",2),U,2) K IBXSAVE(""PROC"",2)"
^IBA(364.7,620,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,620,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,620,3,2,0)="previously extracted.  If the second occurrence exists, output the date"
^IBA(364.7,620,3,3,0)="found in its second '^' piece."
^IBA(364.7,621,0)="743^N^5^^^^N"
^IBA(364.7,621,1)="K IBXDATA I $D(IBXSAVE(""PROC"",3)) S IBXDATA=$P(IBXSAVE(""PROC"",3),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,621,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,621,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,621,3,2,0)="previously extracted.  If the third occurrence exists, output the code"
^IBA(364.7,621,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,622,0)="744^N^5^^^^N"
^IBA(364.7,622,1)="K IBXDATA I $D(IBXSAVE(""PROC"",3)) S IBXDATA=$P(IBXSAVE(""PROC"",3),U,2) K IBXSAVE(""PROC"",3)"
^IBA(364.7,622,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,622,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,622,3,2,0)="previously extracted.  If the third occurrence exists, output the date"
^IBA(364.7,622,3,3,0)="found in its second '^' piece."
^IBA(364.7,623,0)="745^N^5^^^^N"
^IBA(364.7,623,1)="D:'$D(IBXSAVE(""PRV-82"")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$E($G(IBXSAVE(""PRV-82"",2)),1,30+$G(^TMP(""IBXSAVE"",$J,""RM"")))"
^IBA(364.7,623,3,0)="^364.73^3^3^3040317^^^^"
^IBA(364.7,623,3,1,0)="If not already done, extract all the possible providers into the"
^IBA(364.7,623,3,2,0)="appropriate line for box 82 on the UB-92 print claim form.  This is the"
^IBA(364.7,623,3,3,0)="second line extracted."
^IBA(364.7,624,0)="746^N^5^^^^N"
^IBA(364.7,624,1)="K IBXDATA I $D(IBXSAVE(""PROC"",4)) S IBXDATA=$P(IBXSAVE(""PROC"",4),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,624,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,624,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,624,3,2,0)="previously extracted.  If the fourth occurrence exists, output the code"
^IBA(364.7,624,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,625,0)="747^N^5^^^^N"
^IBA(364.7,625,1)="K IBXDATA I $D(IBXSAVE(""PROC"",4)) S IBXDATA=$P(IBXSAVE(""PROC"",4),U,2) K IBXSAVE(""PROC"",4)"
^IBA(364.7,625,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,625,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,625,3,2,0)="previously extracted.  If the fourth occurrence exists, output the date"
^IBA(364.7,625,3,3,0)="found in its second '^' piece."
^IBA(364.7,626,0)="748^N^5^^^^N"
^IBA(364.7,626,1)="K IBXDATA I $D(IBXSAVE(""PROC"",5)) S IBXDATA=$P(IBXSAVE(""PROC"",5),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,626,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,626,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,626,3,2,0)="previously extracted.  If the fifth occurrence exists, output the code"
^IBA(364.7,626,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,627,0)="749^N^5^^^^N"
^IBA(364.7,627,1)="K IBXDATA I $D(IBXSAVE(""PROC"",5)) S IBXDATA=$P(IBXSAVE(""PROC"",5),U,2) K IBXSAVE(""PROC"",5)"
^IBA(364.7,627,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,627,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,627,3,2,0)="previously extracted.  If the fifth occurrence exists, output the date"
^IBA(364.7,627,3,3,0)="found in its second '^' piece."
^IBA(364.7,628,0)="750^N^5^^^^N"
^IBA(364.7,628,1)="K IBXDATA I $D(IBXSAVE(""PROC"",6)) S IBXDATA=$P(IBXSAVE(""PROC"",6),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,628,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,628,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,628,3,2,0)="previously extracted.  If the sixth occurrence exists, output the code"
^IBA(364.7,628,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,629,0)="751^N^5^^^^N"
^IBA(364.7,629,1)="N Z,Q,R S:$D(IBXSAVE(""PROC"",6)) IBXDATA=$P(IBXSAVE(""PROC"",6),U,2) S Z=6 F  S Z=$O(IBXSAVE(""PROC"",Z)) Q:'Z  S R=IBXSAVE(""PROC"",Z),Q=$P(R,U,2) D XPROC^IBCEF3($S(R[""ICPT""!(R[""ICD0""):$P($$PRCD^IBCEF1(R),U),1:$P(R,U))_U_Q,Z)"
^IBA(364.7,629,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,629,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,629,3,2,0)="previously extracted.  If the sixth occurrence exists, output the date"
^IBA(364.7,629,3,3,0)="found in its second '^' piece."
^IBA(364.7,630,0)="752^N^5^^^^N"
^IBA(364.7,630,1)="D:'$D(IBXSAVE(""PRV-82"")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$E($G(IBXSAVE(""PRV-82"",4)),1,30+$G(^TMP(""IBXSAVE"",$J,""RM"")))"
^IBA(364.7,630,3,0)="^364.73^3^3^3040317^^^^"
^IBA(364.7,630,3,1,0)="If not already done, extract all the possible providers into the"
^IBA(364.7,630,3,2,0)="appropriate line for box 82 on the UB-92 print claim form.  This is the"
^IBA(364.7,630,3,3,0)="fourth line extracted."
^IBA(364.7,631,0)="753^N^5^^^^N"
^IBA(364.7,631,1)="D:'$D(IBXSAVE(""PRV-82"")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$G(IBXSAVE(""PRV-82"",3))"
^IBA(364.7,631,3,0)="^^3^3^3000107^^^^"
^IBA(364.7,631,3,1,0)="If not already done, extract all the possible providers into the"
^IBA(364.7,631,3,2,0)="appropriate line for box 82 on the UB-92 print claim form.  This is the"
^IBA(364.7,631,3,3,0)="third line extracted."
^IBA(364.7,632,0)="754^N^5^^^^N"
^IBA(364.7,632,1)="K IBXDATA"
^IBA(364.7,632,3,0)="^^1^1^2991006^^"
^IBA(364.7,632,3,1,0)="Not currently used"
^IBA(364.7,633,0)="755^N^5^^^^N"
^IBA(364.7,633,1)="D:'$D(IBXSAVE(""PRV-82"")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$G(IBXSAVE(""PRV-82"",5))"
^IBA(364.7,633,3,0)="^364.73^3^3^3040317^^^^"
^IBA(364.7,633,3,1,0)="If not already done, extract all the possible providers into the"
^IBA(364.7,633,3,2,0)="appropriate line for box 82 on the UB-92 print claim form.  This is the"
^IBA(364.7,633,3,3,0)="fifth line extracted."
^IBA(364.7,634,0)="756^N^280^^^^N"
^IBA(364.7,634,1)="S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA=""MEDICARE"" S:'$D(IBXSAVE(""LM-UB"")) IBXSAVE(""LM-UB"")=$P($G(^IBE(350.9,1,1)),U,31)-1 I IBXSAVE(""LM-UB"") S IBXDATA=$J("""",IBXSAVE(""LM-UB""))_IBXDATA"
^IBA(364.7,634,3,0)="^364.73^4^4^3010123^^^^"
^IBA(364.7,634,3,1,0)="Extracts the insurance company name from the first piece of IBXDATA."
^IBA(364.7,634,3,2,0)="If MEDICARE WNR is current insurance, mailing name is MEDICARE."
^IBA(364.7,634,3,3,0)="If the parameter says move the data to another column, set spaces at the"
^IBA(364.7,634,3,4,0)="beginning to accommodate this."
^IBA(364.7,635,0)="757^N^5^^^^N"
^IBA(364.7,635,1)="D:'$D(IBXSAVE(""PRV-82"")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$E($G(IBXSAVE(""PRV-82"",6)),1,30+$G(^TMP(""IBXSAVE"",$J,""RM""))) K IBXSAVE(""PRV-82"")"
^IBA(364.7,635,3,0)="^364.73^3^3^3040317^^^^"
^IBA(364.7,635,3,1,0)="If not already done, extract all the possible providers into the"
^IBA(364.7,635,3,2,0)="appropriate line for box 82 on the UB-92 print claim form.  This is the"
^IBA(364.7,635,3,3,0)="sixth line extracted."
^IBA(364.7,636,0)="758^N^192^^^^N"
^IBA(364.7,636,1)="N Y,Z K IBXSAVE(""CADR"") I $O(IBXDATA(0)) S Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="""" $P(IBXSAVE(""CADR""),U,6)=Y F Z=1:1:5,7 S:$D(IBXDATA(Z)) $P(IBXSAVE(""CADR""),U,Z)=IBXDATA(Z) I Z=7 D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,1,2)"
^IBA(364.7,636,3,0)="^364.73^6^6^3010123^^^^"
^IBA(364.7,636,3,1,0)="Data element extracts full address data into IBXDATA array,"
^IBA(364.7,636,3,2,0)="saves the data in IBXSAVE(""CADR"")=Street addr 1^Street addr 2^Street addr 3^"
^IBA(364.7,636,3,3,0)="City^State^Zip^claim office id # for later use and resets IBXDATA to street"
^IBA(364.7,636,3,4,0)="1 and street 2 of address."
^IBA(364.7,636,3,5,0)="If the parameter says move the data to another column, set spaces at the"
^IBA(364.7,636,3,6,0)="beginning to accommodate this."
^IBA(364.7,637,0)="759^N^5^^^^N"
^IBA(364.7,637,1)="K:$G(IBXSAVE(""CADR""))="""" IBXDATA I $D(IBXDATA) D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,2,2)"
^IBA(364.7,637,3,0)="^364.73^3^3^3001220^^^^"
^IBA(364.7,637,3,1,0)="Combine the city, state and zip code for one line of the address."
^IBA(364.7,637,3,2,0)="If the parameter says move the data to another column, set spaces at the"
^IBA(364.7,637,3,3,0)="beginning to accommodate this."
^IBA(364.7,638,0)="760^N^5^^^^N"
^IBA(364.7,638,1)="K IBXDATA S IBXDATA=""SIGNATURE ON FILE"""
^IBA(364.7,638,3,0)="^^1^1^2990610^^"
^IBA(364.7,638,3,1,0)="Use a constant SIGNATURE ON FILE."
^IBA(364.7,639,0)="761^N^267^^^^N"
^IBA(364.7,639,1)="S IBXDATA=$S($G(IBPNT)!'IBXDATA:DT,1:IBXDATA),IBXDATA=$$FMTE^XLFDT(IBXDATA,""2D"")"
^IBA(364.7,639,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,639,3,1,0)="Use data element value unless the variable IBPNT>0 (indicates reprint) or"
^IBA(364.7,639,3,2,0)="if data element value is null.  Format as date in MMDDYY format."
^IBA(364.7,640,0)="1181^N^5^^^^N^0"
^IBA(364.7,640,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,9,""ZZ"")"
^IBA(364.7,640,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,640,3,1,0)="HARD CODE FORMAT OTH PAYER OTH PROV ID"
^IBA(364.7,641,0)="1106^N^131^^^^N"
^IBA(364.7,641,1)="S IBXDATA=""OP1 """
^IBA(364.7,643,0)="765^N^5^^^^N"
^IBA(364.7,643,1)="K ^UTILITY(""VADM"",$J),^UTILITY(""VAPA"",$J),^TMP(""IBXSAVE"",$J),IBXSAVE S ^TMP(""IBXSAVE"",$J,""RM"")=$S($G(IOM)>80:1,1:0)"
^IBA(364.7,643,3,0)="^^1^1^2990609^^^^"
^IBA(364.7,643,3,1,0)="Kills off globals,other variables to be used, sets right margin variable."
^IBA(364.7,644,0)="1254^N^5^^^^N"
^IBA(364.7,644,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,1)),""^"",3)"
^IBA(364.7,644,3,0)="^364.73^5^5^3171128^^^^"
^IBA(364.7,644,3,1,0)="Refering Provider Secondary ID Qualifier"
^IBA(364.7,644,3,2,0)="EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,"
^IBA(364.7,644,3,3,0)="1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE"
^IBA(364.7,644,3,4,0)="G2=COMMERCIAL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER"
^IBA(364.7,644,3,5,0)="N5=PROVIDER PLAN NETWORK ID"
^IBA(364.7,645,0)="1255^N^5^^^^N"
^IBA(364.7,645,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,1)),""^"",4),1)"
^IBA(364.7,645,3,0)="^364.73^1^1^3171128^^^^"
^IBA(364.7,645,3,1,0)="Refering Provider Secondary ID"
^IBA(364.7,646,0)="1256^N^5^^^^N"
^IBA(364.7,646,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,2)),""^"",3)"
^IBA(364.7,646,3,0)="^364.73^5^5^3171128^^^^"
^IBA(364.7,646,3,1,0)="Refering Provider Secondary ID Qualifier."
^IBA(364.7,646,3,2,0)="EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,"
^IBA(364.7,646,3,3,0)="1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE"
^IBA(364.7,646,3,4,0)="G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER"
^IBA(364.7,646,3,5,0)="N5=PROVIDER PLAN NETWORK ID"
^IBA(364.7,647,0)="1257^N^5^^^^N"
^IBA(364.7,647,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,2)),""^"",4),1)"
^IBA(364.7,647,3,0)="^364.73^1^1^3171128^^^^"
^IBA(364.7,647,3,1,0)="Refering Provider Secondary ID"
^IBA(364.7,648,0)="1258^N^5^^^^N"
^IBA(364.7,648,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,3)),""^"",3)"
^IBA(364.7,648,3,0)="^364.73^5^5^3171128^^^^"
^IBA(364.7,648,3,1,0)="Refering Provider Secondary ID Qualifier."
^IBA(364.7,648,3,2,0)="EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,"
^IBA(364.7,648,3,3,0)="1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE"
^IBA(364.7,648,3,4,0)="G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER"
^IBA(364.7,648,3,5,0)="N5=PROVIDER PLAN NETWORK ID"
^IBA(364.7,649,0)="1259^N^5^^^^N"
^IBA(364.7,649,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,3)),""^"",4),1)"
^IBA(364.7,649,3,0)="^364.73^1^1^3171128^^^^"
^IBA(364.7,649,3,1,0)="Refering Provider Secondary ID"
^IBA(364.7,654,0)="1247^N^5^^^^N^0"
^IBA(364.7,654,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,2)),""^"",4),1)"
^IBA(364.7,654,3,0)="^364.73^1^1^3101105^^^^"
^IBA(364.7,654,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,655,0)="1249^N^5^^^^N^0"
^IBA(364.7,655,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,3)),""^"",4),1)"
^IBA(364.7,655,3,0)="^364.73^1^1^3101105^^^^"
^IBA(364.7,655,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,656,0)="1251^N^5^^^^N^0"
^IBA(364.7,656,1)="S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,4)),""^"",4),1)"
^IBA(364.7,656,3,0)="^364.73^1^1^3101105^^^^"
^IBA(364.7,656,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,658,0)="1244^N^5^^^^N^0"
^IBA(364.7,658,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,1)),""^"",3)"
^IBA(364.7,658,3,0)="^364.73^1^1^3101105^^^^"
^IBA(364.7,658,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,659,0)="1246^N^5^^^^N^0"
^IBA(364.7,659,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,2)),""^"",3)"
^IBA(364.7,659,3,0)="^364.73^1^1^3101105^^^"
^IBA(364.7,659,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,660,0)="1248^N^5^^^^N^0"
^IBA(364.7,660,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,3)),""^"",3)"
^IBA(364.7,660,3,0)="^364.73^1^1^3101105^^^"
^IBA(364.7,660,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,661,0)="1250^N^5^^^^N^0"
^IBA(364.7,661,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,4)),""^"",3)"
^IBA(364.7,661,3,0)="^364.73^1^1^3101105^^^"
^IBA(364.7,661,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,663,0)="1114^N^5^^^^N^0"
^IBA(364.7,663,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,3,""Q"",3)"
^IBA(364.7,663,3,0)="^364.73^1^1^3101108^^^"
^IBA(364.7,663,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,664,0)="1122^N^5^^^^N^0"
^IBA(364.7,664,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,2,""I"",2) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,664,3,0)="^364.73^1^1^3101108^^^^"
^IBA(364.7,664,3,1,0)="FROM FORMAT IN PROVINF^IBCEF7"
^IBA(364.7,692,0)="663^N^5^^^^N"
^IBA(364.7,692,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=4:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>8 IBXDATA(Z0)=Z1 D:Z>8 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,35) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,692,3,0)="^^6^6^2991115^^^^"
^IBA(364.7,692,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,692,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,692,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 4th and 8th"
^IBA(364.7,692,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,692,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,692,3,6,0)="Any overflow codes (12,16,...) are output on a separate page."
^IBA(364.7,693,0)="664^N^5^^^^N"
^IBA(364.7,693,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=1,2 S Z0=Z0+1 S:$G(IBXSAVE(""OCCS"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCCS"",Z),U)"
^IBA(364.7,693,3,0)="^^5^5^2991014^^^^"
^IBA(364.7,693,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,693,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,693,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 1st and 2nd"
^IBA(364.7,693,3,4,0)="occurrences of occurrence span codes found in the IBXSAVE(""OCCS"",n) array"
^IBA(364.7,693,3,5,0)="data element.  Overflow codes are printed on a separate page."
^IBA(364.7,694,0)="665^N^5^^^^N"
^IBA(364.7,694,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=1,2 S Z0=Z0+1 S:$G(IBXSAVE(""OCCS"",Z))'="""" IBXDATA(Z0)=$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,2),,1)"
^IBA(364.7,694,3,0)="^^5^5^2991115^^^^"
^IBA(364.7,694,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,694,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,694,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 1st and 2nd"
^IBA(364.7,694,3,4,0)="occurrences of occurrence span code 'from date' formatted as MMDDYY found"
^IBA(364.7,694,3,5,0)="in the second '^' piece of the IBXSAVE(""OCCS"",n) array data element."
^IBA(364.7,695,0)="666^N^5^^^^N"
^IBA(364.7,695,1)="N Z,Q K IBXDATA F Z=1:1 Q:$G(IBXSAVE(""OCCS"",Z))=""""  S Q=$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,3),,1) S:Z'>2 IBXDATA(Z)=Q D:Z>2 XOCCS^IBCEF3($P(IBXSAVE(""OCCS"",Z),U)_U_$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,2),,1)_U_Q,Z) K IBXSAVE(""OCCS"",Z)"
^IBA(364.7,695,3,0)="^^5^5^2991115^^^^"
^IBA(364.7,695,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,695,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,695,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 1st and 2nd"
^IBA(364.7,695,3,4,0)="occurrences of occurrence span code 'to date' formatted as MMDDYY found"
^IBA(364.7,695,3,5,0)="in the third '^' piece of the IBXSAVE(""OCCS"",n) array data element."
^IBA(364.7,698,0)="678^N^2^^^^N"
^IBA(364.7,699,0)="679^N^5^^^^N"
^IBA(364.7,699,1)="I $G(IBXSAVE(""RP"",1))'="""" S IBXDATA=IBXSAVE(""RP"",1)"
^IBA(364.7,699,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,699,3,1,0)="This field relies on the IBXSAVE(""RP"") array that was previously extracted."
^IBA(364.7,699,3,2,0)="If the first occurrence of this array has a non-null value, print it."
^IBA(364.7,700,0)="680^N^12^^^^N"
^IBA(364.7,700,1)="N Z,Z0,Z1 S Z=0 F  S Z=$O(IBFL(39,Z)) K:'Z IBFL(39) Q:'Z  S Z0=$P(IBFL(39,Z),U,2),Z1=$P(IBFL(39,Z),U,3),IBXSAVE(""VC"",Z)=$P(IBFL(39,Z),U)_U_$S(+Z0'=0:$TR($J(Z0,10,2),""."","" ""),1:""   0000 00"")"
^IBA(364.7,700,3,0)="^364.73^5^5^3001212^^^^"
^IBA(364.7,700,3,1,0)="Save all value codes extracted into IBXSAVE array for later use.  The 2"
^IBA(364.7,700,3,2,0)="pieces that constitute the IBXSAVE(""VC"") array are: CODE^VALUE formatted"
^IBA(364.7,700,3,3,0)="using 8 characters for quantity and using 9 or 10 characters for a dollar"
^IBA(364.7,700,3,4,0)="amount.  Use 9 if right margin is 80 or less, 10 if > 80."
^IBA(364.7,700,3,5,0)="Overflow fields are printed on a separate page."
^IBA(364.7,701,0)="681^N^5^^^^N"
^IBA(364.7,701,1)="N Z,Z0 S Z0=0 F Z=1:3:10 Q:'$D(IBXSAVE(""VC"",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE(""VC"",Z),U)"
^IBA(364.7,701,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,701,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,701,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,701,3,3,0)="the first piece of each occurrence found."
^IBA(364.7,702,0)="682^N^5^^^^N"
^IBA(364.7,702,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=1:3 Q:$G(IBXSAVE(""VC"",Z))=""""  S Z0=Z0+1,Z1=$P(IBXSAVE(""VC"",Z),U,2) S:Z'>10 IBXDATA(Z0)=Z1 D:Z>10 XVAL^IBCEF3(IBXSAVE(""VC"",Z),Z) K IBXSAVE(""VC"",Z)"
^IBA(364.7,702,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,702,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,702,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,702,3,3,0)="the second piece of each occurrence found."
^IBA(364.7,703,0)="683^N^5^^^^N"
^IBA(364.7,703,1)="N Z,Z0 S Z0=0 F Z=2:3:11 Q:'$D(IBXSAVE(""VC"",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE(""VC"",Z),U)"
^IBA(364.7,703,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,703,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,703,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,703,3,3,0)="the first piece of each occurrence found."
^IBA(364.7,704,0)="684^N^5^^^^N"
^IBA(364.7,704,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=2:3 Q:$G(IBXSAVE(""VC"",Z))=""""  S Z0=Z0+1,Z1=$P(IBXSAVE(""VC"",Z),U,2) S:Z'>11 IBXDATA(Z0)=Z1 D:Z>11 XVAL^IBCEF3(IBXSAVE(""VC"",Z),Z) K IBXSAVE(""VC"",Z)"
^IBA(364.7,704,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,704,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,704,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,704,3,3,0)="the second piece of each occurrence found."
^IBA(364.7,705,0)="685^N^5^^^^N"
^IBA(364.7,705,1)="N Z,Z0 S Z0=0 F Z=3:3:12 Q:'$D(IBXSAVE(""VC"",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE(""VC"",Z),U)"
^IBA(364.7,705,3,0)="^^4^4^2991014^^^^"
^IBA(364.7,705,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,705,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,705,3,3,0)="the first piece of each occurrence found.  If there are more than 12"
^IBA(364.7,705,3,4,0)="value codes, they are stored in the overflow array."
^IBA(364.7,706,0)="686^N^5^^^^N"
^IBA(364.7,706,1)="N Z,Z1,Z0 K IBXDATA S Z0=0 F Z=3:3 Q:$G(IBXSAVE(""VC"",Z))=""""  S Z0=Z0+1,Z1=$E($P(IBXSAVE(""VC"",Z),U,2),2-$G(^TMP(""IBXSAVE"",$J,""RM"")),10) S:Z'>12 IBXDATA(Z0)=Z1 D:Z>12 XVAL^IBCEF3(Z1,Z) K IBXSAVE(""VC"",Z)"
^IBA(364.7,706,3,0)="^^3^3^2991014^^^^"
^IBA(364.7,706,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,706,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,706,3,3,0)="the second piece of each occurrence found."
^IBA(364.7,707,0)="687^N^5^^^^N"
^IBA(364.7,707,1)="I $G(IBXSAVE(""RP"",2))'="""" S IBXDATA=IBXSAVE(""RP"",2)"
^IBA(364.7,707,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,707,3,1,0)="This field relies on the IBXSAVE(""RP"") array that was previously extracted."
^IBA(364.7,707,3,2,0)="If the second occurrence of this array has a non-null value, print it."
^IBA(364.7,708,0)="688^N^5^^^^N"
^IBA(364.7,708,1)="I $G(IBXSAVE(""RP"",3))'="""" S IBXDATA=IBXSAVE(""RP"",3)"
^IBA(364.7,708,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,708,3,1,0)="This field relies on the IBXSAVE(""RP"") array that was previously extracted."
^IBA(364.7,708,3,2,0)="If the second occurrence of this array has a non-null value, print it."
^IBA(364.7,709,0)="689^N^5^^^^N"
^IBA(364.7,709,1)="I $G(IBXSAVE(""RP"",4))'="""" S IBXDATA=IBXSAVE(""RP"",4)"
^IBA(364.7,709,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,709,3,1,0)="This field relies on the IBXSAVE(""RP"") array that was previously extracte"
^IBA(364.7,709,3,2,0)="If the fourth occurrence of this array has a non-null value, print it."
^IBA(364.7,710,0)="690^N^193^^^^N"
^IBA(364.7,711,0)="691^N^5^^^^N"
^IBA(364.7,711,1)="N Z,Q,R F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S R=^(Z),Q=$S(+R=1:$P(R,U,2),+R=2:$E($P(R,U,2),1,5),1:"""") S:Z'>21 IBXDATA(Z)=Q D:Z>21 CKREV^IBCEF3(Z,Q) I '$O(^TMP($J,""IBC-RC"",Z)),Z>23 D FILL^IBCEF3(Z)"
^IBA(364.7,711,3,0)="^^14^14^2991118^^^^"
^IBA(364.7,711,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,711,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,711,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,711,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,711,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the second '^'"
^IBA(364.7,711,3,6,0)="piece of the array.  For text line where the first piece = 2, the text is"
^IBA(364.7,711,3,7,0)="assumed to start in column 1, so the data is extracted from positions 1-5."
^IBA(364.7,711,3,8,0)="For text line where the first piece = 3, the text is assumed to start in"
^IBA(364.7,711,3,9,0)="column 6, so there is no data extracted for this field."
^IBA(364.7,711,3,10,0)="Since only 23 lines of service line can appear on one form, if there"
^IBA(364.7,711,3,11,0)="are more than 23 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,711,3,12,0)="lines after 23.  Since the page number must print on line 23 for multi-page"
^IBA(364.7,711,3,13,0)="bills, the FILL^IBCEF3 call places the page number text on the last line of"
^IBA(364.7,711,3,14,0)="the last page."
^IBA(364.7,712,0)="692^N^5^^^^N"
^IBA(364.7,712,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$P(Z1,U,3),+Z1=2:$E($P(Z1,U,2),6,30),1:$E($P(Z1,U,2),1,25)) S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,712,3,0)="^^12^12^2990629^^^^"
^IBA(364.7,712,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,712,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,712,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,712,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,712,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the third '^'"
^IBA(364.7,712,3,6,0)="piece of the array.  For text line where the first piece = 2, the text is"
^IBA(364.7,712,3,7,0)="assumed to start in column 1, so the data is extracted from positions 6-30."
^IBA(364.7,712,3,8,0)="For text line where the first piece = 3, the text is assumed to start in"
^IBA(364.7,712,3,9,0)="column 6, so the data for this field is extracted from positions 1-25."
^IBA(364.7,712,3,10,0)="Since only 23 lines of service line can appear on one form, if there"
^IBA(364.7,712,3,11,0)="are more than 23 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,712,3,12,0)="lines after 23."
^IBA(364.7,713,0)="693^N^5^^^^N"
^IBA(364.7,713,1)="N Z,Z0,D,T,T4,T5 F Z=1:1 Q:'$G(^TMP($J,""IBC-RC"",Z))  S D=^(Z),T=$P(D,U,2),T5=$P(D,U,5),T4=$P(D,U,4),Z0=$S(+D=2:$E(T,31,40),+D=3:$E(T,26,35),T4'=""""&(T>219):T4,T5'=""""&(T<220)&(T>1):$J(T5,7,2),1:"""") S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,713,3,0)="^364.73^13^13^3010308^^^^"
^IBA(364.7,713,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,713,3,2,0)="might be expected.  It relies on the presence of data in global"
^IBA(364.7,713,3,3,0)="^TMP($J,""IBC-RC"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,713,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,713,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the fourth"
^IBA(364.7,713,3,6,0)="(procedure code and modifiers) or fifth (unit charge) '^' pieces of the"
^IBA(364.7,713,3,7,0)="array. If there is a procedure and a unit charge, only the procedure code"
^IBA(364.7,713,3,8,0)="and its modifiers will print. If there is a unit charge and this is an"
^IBA(364.7,713,3,9,0)="inpatient bill and the revenue code is 100-219, it is printed and"
^IBA(364.7,713,3,10,0)="formatted in 7 spaces with 2 decimal places. Since only 23 lines of service"
^IBA(364.7,713,3,11,0)="can appear on one form, if there are more than 23 lines, subsequent"
^IBA(364.7,713,3,12,0)="pages are forced for the remaining data lines after 21 to leave room for a"
^IBA(364.7,713,3,13,0)="blank separating line and the page indicator."
^IBA(364.7,714,0)="694^N^5^^^^N"
^IBA(364.7,714,1)="K IBXDATA D DATE45^IBCF33(IBXIEN,.IBXDATA,$G(IBXSAVE(""DATE"")))"
^IBA(364.7,714,3,0)="^^13^13^3000105^^^^"
^IBA(364.7,714,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,714,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,714,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,714,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,714,3,5,0)="(=2 or =3).   For a normal service line, output the OUTPATIENT from date that"
^IBA(364.7,714,3,6,0)="was previously extracted into IBXSAVE(""DATE""). For text line where the first"
^IBA(364.7,714,3,7,0)="piece = 2, the text is assumed to start in column 1, so the data is"
^IBA(364.7,714,3,8,0)="extracted from positions 41-47.  For text line where the first piece = 3,"
^IBA(364.7,714,3,9,0)="the text is assumed to start in column 6, so the data for this field is"
^IBA(364.7,714,3,10,0)="extracted from positions 36-42."
^IBA(364.7,714,3,11,0)="Since only 23 lines of service line can appear on one form, if there"
^IBA(364.7,714,3,12,0)="are more than 23 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,714,3,13,0)="lines after 23."
^IBA(364.7,715,0)="695^N^5^^^^N"
^IBA(364.7,715,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:"" ""_$P(Z1,U,6),+Z1=2:$E($P(Z1,U,2),48,53),1:$E($P(Z1,U,2),43,48)) S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,715,3,0)="^^13^13^2991018^^^^"
^IBA(364.7,715,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,715,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,715,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,715,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,715,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the sixth '^'"
^IBA(364.7,715,3,6,0)="piece of the array and is formmatted preceeded by a space.  For text line"
^IBA(364.7,715,3,7,0)="where the first piece = 2, the text is assumed to start in column 1, so the"
^IBA(364.7,715,3,8,0)="data is extracted from positions 48-53.  For text line where the first"
^IBA(364.7,715,3,9,0)="piece = 3, the text is assumed to start in column 6, so the data for this"
^IBA(364.7,715,3,10,0)="field is extracted from positions 43-48."
^IBA(364.7,715,3,11,0)="Since only 23 lines of service line can appear on one form, if there"
^IBA(364.7,715,3,12,0)="are more than 23 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,715,3,13,0)="lines after 23."
^IBA(364.7,716,0)="696^N^5^^^^N"
^IBA(364.7,716,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$J($P(Z1,U,7),11,2),+Z1=2:$E($P(Z1,U,2),54,66),1:$E($P(Z1,U,2),49,61)) S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,716,3,0)="^^13^13^2990629^^^^"
^IBA(364.7,716,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,716,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,716,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,716,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,716,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the seventh '^'"
^IBA(364.7,716,3,6,0)="piece of the array and is formmatted preceeded by a space.  For text line"
^IBA(364.7,716,3,7,0)="where the first piece = 2, the text is assumed to start in column 1, so the"
^IBA(364.7,716,3,8,0)="data is extracted from positions 54-66.  For text line where the first"
^IBA(364.7,716,3,9,0)="piece = 3, the text is assumed to start in column 6, so the data for this"
^IBA(364.7,716,3,10,0)="field is extracted from positions 49-61."
^IBA(364.7,716,3,11,0)="Since only 23 lines of service line can appear on one form, if there"
^IBA(364.7,716,3,12,0)="are more than 23 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,716,3,13,0)="lines after 23."
^IBA(364.7,717,0)="697^N^5^^^^N"
^IBA(364.7,717,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$S($P(Z1,U,8):$J($P(Z1,U,8),9,2),1:$J(0,9,2)),+Z1=2:$E($P(Z1,U,2),67,77),1:$E($P(Z1,U,2),62,72)) S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,717,3,0)="^^13^13^2990629^^^^"
^IBA(364.7,717,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,717,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,717,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,717,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,717,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the eighth '^'"
^IBA(364.7,717,3,6,0)="piece of the array and is formatted preceeded by a space.  For text line"
^IBA(364.7,717,3,7,0)="where the first piece = 2, the text is assumed to start in column 1, so the"
^IBA(364.7,717,3,8,0)="data is extracted from positions 67-77.  For text line where the first"
^IBA(364.7,717,3,9,0)="piece = 3, the text is assumed to start in column 6, so the data for this"
^IBA(364.7,717,3,10,0)="field is extracted from positions 62-72."
^IBA(364.7,717,3,11,0)="Since only 23 lines of service line can appear on one form, if there"
^IBA(364.7,717,3,12,0)="are more than 23 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,717,3,13,0)="lines after 23."
^IBA(364.7,718,0)="698^N^5^^^^N"
^IBA(364.7,718,1)="N Z,Z0,Z1,R S R=$G(^TMP(""IBXSAVE"",$J,""RM"")) F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$P(Z1,U,9),+Z1=2:$E($P(Z1,U,2),78,80+R),1:$E($P(Z1,U,2),73,75+R)) S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,718,3,0)="^^13^13^2990629^^^^"
^IBA(364.7,718,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,718,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,718,3,3,0)="^TMP(""IBC-RC"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,718,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,718,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the ninth '^'"
^IBA(364.7,718,3,6,0)="piece of the array.  For text line where the first piece = 2, the text is"
^IBA(364.7,718,3,7,0)="assumed to start in column 1, so the data is extracted from positions 78-81."
^IBA(364.7,718,3,8,0)="For text line where the first piece = 3, the text is assumed to start in"
^IBA(364.7,718,3,9,0)="column 6, so the data for this field is extracted from positions 73-76."
^IBA(364.7,718,3,10,0)="The ending extract point is one less in each case if the right margin is"
^IBA(364.7,718,3,11,0)="only 80, not 81. Since only 23 lines of service line can appear on one form,"
^IBA(364.7,718,3,12,0)="if there are more than 23 lines, subsequent pages are forced for the"
^IBA(364.7,718,3,13,0)="remaining data lines after 23."
^IBA(364.7,719,0)="699^N^13^^^^N"
^IBA(364.7,719,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA K IBXSAVE(""FL56"") F Z=1:1:4 S IBXSAVE(""FL56"",Z+1)=$E(IBZ,14*Z,(14*(Z+1)-1)) I Z=1 S IBXDATA=$E("" "",+$G(^TMP(""IBXSAVE"",$J,""RM"")))_$E(IBZ,1,13)"
^IBA(364.7,719,3,0)="^^9^9^2990611^^^^"
^IBA(364.7,719,3,1,0)="If this data element returns a value other than null, it can be output on"
^IBA(364.7,719,3,2,0)="5 lines where characters 1-13 print on line 1, 14-27 print on line 2, 28-41"
^IBA(364.7,719,3,3,0)="print on line 3, 42-55 print on line 4 and 56-69 print on line 5."
^IBA(364.7,719,3,4,0)="Save off characters 14-69 in IBXSAVE(""FL56"",line #) array and set value of"
^IBA(364.7,719,3,5,0)="this data element to the first 13 characters.  If the right margin is 81"
^IBA(364.7,719,3,6,0)="instead of 80, move the field over 1 space.  The rest of IBXSAVE(""FL56"")"
^IBA(364.7,719,3,7,0)="will be printed at a later time."
^IBA(364.7,719,3,8,0)=" "
^IBA(364.7,719,3,9,0)="If the Form Locator 56 field has no data then the Prior Bills will be used."
^IBA(364.7,720,0)="700^N^5^^^^N"
^IBA(364.7,720,1)="S:$D(IBXSAVE(""FL56"",2)) IBXDATA=$E("" "",+$G(^TMP(""IBXSAVE"",$J,""RM"")))_IBXSAVE(""FL56"",2)"
^IBA(364.7,720,3,0)="^^4^4^2990611^^^^"
^IBA(364.7,720,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL56"")"
^IBA(364.7,720,3,2,0)="variable previously extracted.  Form Locator 56 on the UB92 is split into"
^IBA(364.7,720,3,3,0)="5 lines and this is the 2nd line (14th-27th characters entered) for this"
^IBA(364.7,720,3,4,0)="field. If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,721,0)="701^N^5^^^^N"
^IBA(364.7,721,1)="S:$D(IBXSAVE(""FL56"",3)) IBXDATA=$E("" "",+$G(^TMP(""IBXSAVE"",$J,""RM"")))_IBXSAVE(""FL56"",3)"
^IBA(364.7,721,3,0)="^^4^4^2990611^^^^"
^IBA(364.7,721,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL56"")"
^IBA(364.7,721,3,2,0)="variable previously extracted.  Form Locator 56 on the UB92 is split into"
^IBA(364.7,721,3,3,0)="5 lines and this is the 3rd line (28th-41th characters entered) for this"
^IBA(364.7,721,3,4,0)="field. If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,722,0)="702^N^5^^^^N"
^IBA(364.7,722,1)="S:$D(IBXSAVE(""FL56"",4)) IBXDATA=$E("" "",+$G(^TMP(""IBXSAVE"",$J,""RM"")))_IBXSAVE(""FL56"",4)"
^IBA(364.7,722,3,0)="^^4^4^2990609^^^^"
^IBA(364.7,722,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL56"")"
^IBA(364.7,722,3,2,0)="variable previously extracted.  Form Locator 56 on the UB92 is split into"
^IBA(364.7,722,3,3,0)="5 lines and this is the 4th line (42nd-55th characters entered) for this"
^IBA(364.7,722,3,4,0)="field. If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,723,0)="703^N^5^^^^N"
^IBA(364.7,723,1)="S:$D(IBXSAVE(""FL56"",5)) IBXDATA=$E("" "",+$G(^TMP(""IBXSAVE"",$J,""RM"")))_IBXSAVE(""FL56"",5)"
^IBA(364.7,723,3,0)="^^4^4^2990609^^^^"
^IBA(364.7,723,3,1,0)="This data element's value relies on the existence of the IBXSAVE(""FL56"")"
^IBA(364.7,723,3,2,0)="variable previously extracted.  Form Locator 56 on the UB92 is split into"
^IBA(364.7,723,3,3,0)="5 lines and this is the 5th line (56th-69th characters entered) for this"
^IBA(364.7,723,3,4,0)="field. If the right margin is 81 instead of 80, move the field over 1 space."
^IBA(364.7,724,0)="704^N^194^^^^N"
^IBA(364.7,724,1)="N Z,Z0 M Z0=IBXDATA K IBXDATA S Z="""" F  S Z=$O(Z0(Z)) Q:'Z  I $D(^DGCR(399,IBXIEN,""I""_Z)) S IBXDATA(Z)=$S(Z<3&$$WNRBILL^IBEFUNC(IBXIEN,Z):""MEDICARE"",1:$E($P(Z0(Z),U),1,15))_$S($P(Z0(Z),U,2)'="""":"" ""_$P(Z0(Z),U,2),1:"""")"
^IBA(364.7,724,3,0)="^364.73^4^4^3000830^^^^"
^IBA(364.7,724,3,1,0)="The first 15 characters of the name of the primary, secondary, and tertiary"
^IBA(364.7,724,3,2,0)="insurance companies along with the claim office number and payer id, if"
^IBA(364.7,724,3,3,0)="known.  If the primary or secondary insurance is MEDICARE WNR, output"
^IBA(364.7,724,3,4,0)="'MEDICARE'."
^IBA(364.7,725,0)="705^N^195^^^^N"
^IBA(364.7,726,0)="706^N^23^^^^N"
^IBA(364.7,726,1)="N Z,Z0 S Z0=$S(IBXDATA:""R"",1:""Y"") F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,""I""_Z))) S IBXDATA(Z)=Z0"
^IBA(364.7,726,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,726,3,1,0)="For each insurance on file in the bill, print the ROI indicator = 'Y' if"
^IBA(364.7,726,3,2,0)="the record is not a sensitive record, or 'R' if it is a sensitive record."
^IBA(364.7,727,0)="707^N^24^^^^N"
^IBA(364.7,727,1)="N Z,Z0 S Z0=$S(IBXDATA=""""!(""Nn0""'[IBXDATA):""Y"",1:""N"") F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,""I""_Z))) S IBXDATA(Z)=Z0"
^IBA(364.7,727,3,0)="^^3^3^2990609^^^^"
^IBA(364.7,727,3,1,0)="For each insurance on file in the bill, print the ASSIGNMENT OF BENEFITS"
^IBA(364.7,727,3,2,0)="indicator = 'Y' if the data element value returned is null or is not 0,'n'"
^IBA(364.7,727,3,3,0)="or 'N', otherwise print 'N'."
^IBA(364.7,728,0)="708^N^156^^^^N"
^IBA(364.7,728,1)="N Z F Z=1:1:3 K:'$D(^DGCR(399,IBXIEN,""I""_Z)) IBXDATA(Z) I $D(IBXDATA(Z)) S IBXDATA(Z)=$S(IBXDATA(Z)'="""":$J(IBXDATA(Z),10,2),1:$J(0,10,2))"
^IBA(364.7,728,3,0)="^364.73^2^2^3040218^^^^"
^IBA(364.7,728,3,1,0)="If the insurance company for the prior payment does not exist for the bill,"
^IBA(364.7,728,3,2,0)="don't output the prior payment information."
^IBA(364.7,729,0)="709^N^152^^^^N"
^IBA(364.7,729,1)="N Z,Z0,IBZ S IBZ=$G(IBXDATA) K IBXDATA S Z0=$$COBN^IBCEF(IBXIEN),IBXDATA(Z0)=$J(+IBZ,9,2) F Z=1:1:3 I Z'=Z0,$D(^DGCR(399,IBXIEN,""I""_Z)) S IBXDATA(Z)=$J(0,9,2)"
^IBA(364.7,729,3,0)="^364.73^2^2^3040218^^^^"
^IBA(364.7,729,3,1,0)="Set the estimated amt for the current insurance equal to the balance on the"
^IBA(364.7,729,3,2,0)="bill."
^IBA(364.7,730,0)="710^N^5^^^^N"
^IBA(364.7,730,1)="K IBXDATA"
^IBA(364.7,730,3,0)="^^1^1^2991001^"
^IBA(364.7,730,3,1,0)="Not used"
^IBA(364.7,731,0)="711^N^5^^^^N"
^IBA(364.7,731,1)="K IBXDATA"
^IBA(364.7,731,3,0)="^^1^1^2990614^^^^"
^IBA(364.7,731,3,1,0)="Not used yet.  No output."
^IBA(364.7,732,0)="712^N^5^^^^N"
^IBA(364.7,732,1)="K IBXDATA"
^IBA(364.7,732,3,0)="^^1^1^2990609^^^"
^IBA(364.7,732,3,1,0)="Not used yet.  No output."
^IBA(364.7,733,0)="713^N^196^^^^N"
^IBA(364.7,733,1)="N Z F Z=1:1:3 I $G(IBXDATA(Z))'="""",IBXDATA(Z)'["","" S Q=$$NAME^IBCEFG1(IBXDATA(Z),1),IBXDATA(Z)=$P(Q,U)_$S($P(Q,U,2)'="""":"",""_$P(Q,U,2),1:"""")"
^IBA(364.7,734,0)="714^N^197^^^^N"
^IBA(364.7,735,0)="715^N^198^^^^N"
^IBA(364.7,736,0)="716^N^199^^^^N"
^IBA(364.7,736,1)="N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 S IBXDATA(Z)=$G(IBXDATA(Z))_"" "" I $D(^DGCR(399,IBXIEN,""I""_Z)),$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)="""""
^IBA(364.7,736,3,0)="^364.73^3^3^3040226^^^"
^IBA(364.7,736,3,1,0)="If the insurance is MEDICARE WNR, do not output the group name."
^IBA(364.7,736,3,2,0)="Add a space to the end of the Group Name to separate it from"
^IBA(364.7,736,3,3,0)="the next field , Group Number."
^IBA(364.7,737,0)="717^N^200^^^^N"
^IBA(364.7,737,1)="N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 I $D(^DGCR(399,IBXIEN,""I""_Z)),Z0=Z,$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)="""""
^IBA(364.7,737,3,0)="^364.73^1^1^3000830^^^"
^IBA(364.7,737,3,1,0)="If the insurance is MEDICARE WNR, do not output the group number."
^IBA(364.7,738,0)="718^N^265^^^^N"
^IBA(364.7,739,0)="719^N^202^^^^N"
^IBA(364.7,739,1)="N Z,Z0,A,IBZ S A=""OIEMP"" M Z0=IBXDATA K IBXSAVE(A),IBXDATA D F^IBCEF(""N-ALL INSURED EMPLOYER INFO"",""IBZ"") M IBXSAVE(A)=IBZ I $O(IBXSAVE(A,0)) F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,""I""_Z))) S IBXDATA(Z)=$S(Z0(Z)="""":9,1:+Z0(Z))"
^IBA(364.7,740,0)="720^N^5^^^^N"
^IBA(364.7,740,1)="N Z,IBZ D:'$D(IBXSAVE(""OIEMP"")) F^IBCEF(""N-ALL INSURED EMPLOYER INFO"",""IBZ"",,IBXIEN) K IBXDATA M:$O(IBZ("""")) IBXSAVE(""OIEMP"")=IBZ F Z=1:1:3 I $D(IBXSAVE(""OIEMP"",Z)) S IBXDATA(Z)=$P(IBXSAVE(""OIEMP"",Z),U)"
^IBA(364.7,740,3,0)="^^3^3^2991210^^^^"
^IBA(364.7,740,3,1,0)="If the array IBXSAVE(""OIEMP"") doesn't already exist, extract it.  For each"
^IBA(364.7,740,3,2,0)="insured on the bill, extract the first piece of the data element for output"
^IBA(364.7,740,3,3,0)="in this field."
^IBA(364.7,741,0)="721^N^5^^^^N"
^IBA(364.7,741,1)="N Z,IBZ S Z="""" F  S Z=$O(IBXSAVE(""OIEMP"",Z)) K:'Z IBXSAVE(""OIEMP"") Q:'Z  S IBZ=$P(IBXSAVE(""OIEMP"",Z),U,2),IBZ=IBZ_$S(IBZ'="""":"", "",1:"""")_$P(IBXSAVE(""OIEMP"",Z),U,3),IBXDATA(Z)=$E($P(IBXSAVE(""OIEMP"",Z),U,5),1,36-$L(IBZ)-1)_"" ""_IBZ"
^IBA(364.7,741,3,0)="^^5^5^2991015^^^^"
^IBA(364.7,741,3,1,0)="This data element relies on the existence of the IBXSAVE(""OIEMP"") array"
^IBA(364.7,741,3,2,0)="extracted previously.  The output here is as much of the street address (5th"
^IBA(364.7,741,3,3,0)="piece) that will fit if the whole city and state are printed, then the"
^IBA(364.7,741,3,4,0)="second piece (city), a comma if city not null, and the third piece for the"
^IBA(364.7,741,3,5,0)="state abbreviation."
^IBA(364.7,742,0)="722^N^53^^^^N"
^IBA(364.7,742,1)="I IBXDATA'="""" N Z S Z=$L(IBXDATA) S:Z>3 IBXSAVE(""FL78"")=$E(IBXDATA,3,5),IBXDATA=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_$E(IBXDATA,1,2) S:Z'>3 IBXSAVE(""FL78"")=$S($G(^TMP(""IBXSAVE"",$J,""RM"")):"" "",1:"""")_IBXDATA,IBXDATA="""""
^IBA(364.7,742,3,0)="^^8^8^2990609^^^^"
^IBA(364.7,742,3,1,0)="If this data element returns a value other than null, it can be output on"
^IBA(364.7,742,3,2,0)="2 lines if its length is bigger than 3 characters.  If less than 3"
^IBA(364.7,742,3,3,0)="characters in length, the text prints on line 2 and the entire text is"
^IBA(364.7,742,3,4,0)="saved in IBXSAVE(""FL78"").  If the length is greater than 3, characters 1-2"
^IBA(364.7,742,3,5,0)="print on line 1 and 3-5 print on line 2, save off characters 3-5 in"
^IBA(364.7,742,3,6,0)="IBXSAVE(""FL78"") array and set value of this data element to the first 2"
^IBA(364.7,742,3,7,0)="characters.  If the right margin is 81 instead of 80, move the field over 1"
^IBA(364.7,742,3,8,0)="space.  IBXSAVE(""FL78"") will be printed at a later time."
^IBA(364.7,744,0)="724^N^86^^^^N"
^IBA(364.7,744,1)="N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I '$$ECODE^IBCEU4(+IBZ(Z)) S C=C+1 S:C=1 IBXDATA=$P($G(^ICD9(+IBZ(Z),0)),U) I C>1 S IBXSAVE(""DX"",C)=+IBZ(Z)"
^IBA(364.7,744,3,0)="^^3^3^3000110^^^^"
^IBA(364.7,744,3,1,0)="The principal dx is found in the first occurrence of the data element's"
^IBA(364.7,744,3,2,0)="values.  The rest of the diagnoses are saved off in the IBXSAVE(""DX"") array"
^IBA(364.7,744,3,3,0)="for later use.  Only allow 1 E-code."
^IBA(364.7,745,0)="725^N^5^^^^N"
^IBA(364.7,745,1)="I $D(IBXSAVE(""DX"",2)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",2),0)),U) K IBXSAVE(""DX"",2)"
^IBA(364.7,745,3,0)="^^1^1^2991014^^^"
^IBA(364.7,745,3,1,0)="If there is a second diagnosis, print its name."
^IBA(364.7,746,0)="726^N^5^^^^N"
^IBA(364.7,746,1)="I $D(IBXSAVE(""DX"",3)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",3),0)),U) K IBXSAVE(""DX"",3)"
^IBA(364.7,746,3,0)="^^1^1^2960814^^^"
^IBA(364.7,746,3,1,0)="If there is a third diagnosis, print its name."
^IBA(364.7,747,0)="727^N^5^^^^N"
^IBA(364.7,747,1)="I $D(IBXSAVE(""DX"",4)) S IBXDATA=$P($G(^ICD9(+IBXSAVE(""DX"",4),0)),U) K IBXSAVE(""DX"",4)"
^IBA(364.7,747,3,0)="^^1^1^2960814^^"
^IBA(364.7,747,3,1,0)="If there is a fourth diagnosis, print its name."
^IBA(364.7,779,0)="766^N^5^^^^N"
^IBA(364.7,779,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=2,6 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,779,3,0)="^^5^5^2991014^^^^"
^IBA(364.7,779,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,779,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,779,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 2nd and 6th"
^IBA(364.7,779,3,4,0)="occurrences of occurrence codes found in the IBXSAVE(""OCC"",n) array data"
^IBA(364.7,779,3,5,0)="element.  Overflow codes are printed on a separate page."
^IBA(364.7,780,0)="767^N^5^^^^N"
^IBA(364.7,780,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=3,7 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,780,3,0)="^^5^5^2991014^^^^"
^IBA(364.7,780,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,780,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,780,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 3rd and 7th"
^IBA(364.7,780,3,4,0)="occurrences of occurrence codes found in the IBXSAVE(""OCC"",n) array data"
^IBA(364.7,780,3,5,0)="element.  Overflow codes are printed on a separate page."
^IBA(364.7,781,0)="768^N^5^^^^N"
^IBA(364.7,781,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=4,8 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,781,3,0)="^^5^5^2991014^^^^"
^IBA(364.7,781,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,781,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,781,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 4th and 8th"
^IBA(364.7,781,3,4,0)="occurrences of occurrence codes found in the IBXSAVE(""OCC"",n) array data"
^IBA(364.7,781,3,5,0)="element.  Overflow codes are printed on a separate page."
^IBA(364.7,782,0)="769^N^105^^^^N"
^IBA(364.7,782,1)="S:IBXDATA'="""" IBXSAVE(""ACCITY"")=IBXDATA_"" """
^IBA(364.7,782,3,0)="^^2^2^2990609^^^"
^IBA(364.7,782,3,1,0)="If the agent cashier city is defined, save it in array IBXSAVE for later"
^IBA(364.7,782,3,2,0)="use.  Include the space to be used between city and state."
^IBA(364.7,783,0)="770^N^106^^^^N"
^IBA(364.7,783,1)="I IBXDATA'="""" S IBXSAVE(""ACSTATE"")=$$STATE^IBCEFG1(IBXDATA)_"" """
^IBA(364.7,783,3,0)="^^3^3^2990609^^^^"
^IBA(364.7,783,3,1,0)="If the agent cashier state is defined, save the 2-character state"
^IBA(364.7,783,3,2,0)="abbreviation in array IBXSAVE for later use.  Include the space to be used"
^IBA(364.7,783,3,3,0)="between state and zip code."
^IBA(364.7,784,0)="771^N^107"
^IBA(364.7,784,1)="I IBXDATA'="""" S IBXSAVE(""ACZIP"")=$E(IBXDATA,1,5)_$S($E(IBXDATA,6,9)'="""":""-""_$E(IBXDATA,6,9),1:"""")"
^IBA(364.7,784,3,0)="^^2^2^2960814^^"
^IBA(364.7,784,3,1,0)="If the agent cashier zip code is defined, save the zip code in array IBXSAVE"
^IBA(364.7,784,3,2,0)="for later use."
^IBA(364.7,785,0)="772^N^4^^^^N"
^IBA(364.7,785,1)="I $TR(IBXDATA,"" ^"")'="""" N Q,Y S IBXSAVE(""RP"",1)=$P(IBXDATA,U,5),Q=1 X ""N Z,A F Z=6,7 S A=$P(IBXDATA,U,Z) I A'="""""""" S Q=Q+1,IBXSAVE(""""RP"""",Q)=A"" S Y=$P(IBXDATA,U,4) D ZIPOUT^VAFADDR S IBXSAVE(""RP"",Q+1)=$P(IBXDATA,U,2)_"", ""_$P(IBXDATA,U,3)_"" ""_Y"
^IBA(364.7,785,3,0)="^^2^2^2990609^^^^"
^IBA(364.7,785,3,1,0)="Takes data extracted from current insured's address and the city/state/zip"
^IBA(364.7,785,3,2,0)="and saves the values in IBXSAVE array."
^IBA(364.7,787,0)="774^N^5^^^^N"
^IBA(364.7,787,1)="D CKPGUB^IBCEF3"
^IBA(364.7,787,3,0)="^^1^1^2991118^^^"
^IBA(364.7,787,3,1,0)="Checks for multi-page output, adds the static fields to subsequent pages."
^IBA(364.7,788,0)="775^N^223^^^^N"
^IBA(364.7,788,3,0)="^^1^1^2961023^^^^"
^IBA(364.7,788,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,790,0)="777^N^5^^^^N"
^IBA(364.7,790,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,2)"
^IBA(364.7,790,3,0)="^^2^2^2970519^"
^IBA(364.7,790,3,1,0)="This field relies on the existence of variable IBXSAVE(""IADR"") previously"
^IBA(364.7,790,3,2,0)="extracted."
^IBA(364.7,791,0)="781^N^4^^^^N"
^IBA(364.7,791,1)="I '$G(IBXSAVE(""IBSAME"")) S IBXSAVE(""IADR"")=IBXDATA"
^IBA(364.7,792,0)="778^N^5^^^^N"
^IBA(364.7,792,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,3)"
^IBA(364.7,792,3,0)="^^2^2^2970519^^"
^IBA(364.7,792,3,1,0)="This field relies on the existence of variable IBXSAVE(""IADR"") previously"
^IBA(364.7,792,3,2,0)="extracted.  Output the state abbreviation."
^IBA(364.7,793,0)="779^N^5^^^^N"
^IBA(364.7,793,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,4)"
^IBA(364.7,793,3,0)="^^2^2^2970519^"
^IBA(364.7,793,3,1,0)="This field relies on the existence of variable IBXSAVE(""IADR"") previously"
^IBA(364.7,793,3,2,0)="extracted.  Output the insured's zip code."
^IBA(364.7,794,0)="780^N^5^^^^N"
^IBA(364.7,794,1)="S IBXDATA=$S('$G(IBXSAVE(""IBSAME"")):$P($G(IBXSAVE(""IDEM"")),U,3),1:"""") K IBXSAVE(""IBSAME"") I $L(IBXDATA)=10 S IBXDATA=$E(IBXDATA,1,3)_"" ""_$E(IBXDATA,4,10)"
^IBA(364.7,794,3,0)="^^2^2^2970519^"
^IBA(364.7,794,3,1,0)="This field relies on the existence of the variable IBXSAVE(""IDEM"")"
^IBA(364.7,794,3,2,0)="previously extracted."
^IBA(364.7,795,0)="782^N^6^^^^N"
^IBA(364.7,795,1)="S IBXSAVE(""IDEM"")=IBXDATA"
^IBA(364.7,795,3,0)="^^1^1^2970519^"
^IBA(364.7,795,3,1,0)="Save the insured's demographic data in IBXSAVE(""IDEM"")."
^IBA(364.7,796,0)="784^N^5^^^^N"
^IBA(364.7,796,1)="K IBXDATA"
^IBA(364.7,797,0)="785^N^5^^^^N"
^IBA(364.7,797,1)="K IBXDATA"
^IBA(364.7,797,3,0)="^^1^1^2981214^"
^IBA(364.7,797,3,1,0)="Field is not currently used by the V.A"
^IBA(364.7,798,0)="943^N^5^^^^N"
^IBA(364.7,798,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,""NAME"")),U,5)"
^IBA(364.7,798,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,798,3,1,0)="Finds SSN for ATTENDING or RENDERING PROVIDER"
^IBA(364.7,799,0)="788^N^127^^^^N"
^IBA(364.7,799,1)="N IBZ S IBZ=$$WNRBILL^IBEFUNC(IBXIEN,+$$COBN^IBCEF(IBXIEN)) S:IBZ IBXDATA=""VA0""_$P($$SITE^VASITE,U,3)"
^IBA(364.7,799,3,0)="^364.73^2^2^3000509^^^^"
^IBA(364.7,799,3,1,0)="If MRA is needed, use default of VA0 and the site #.  For other than MRA,"
^IBA(364.7,799,3,2,0)="use the provider number assigned to the site by the insurance co."
^IBA(364.7,800,0)="789^N^5^^^^N"
^IBA(364.7,800,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,3)"
^IBA(364.7,800,3,0)="^364.73^2^2^3070703^^^^"
^IBA(364.7,800,3,1,0)="Retrieves insured state data from IBXSAVE array previously extracted.  If"
^IBA(364.7,800,3,2,0)="data element's value is null, do not output."
^IBA(364.7,801,0)="790^N^64^^^^N"
^IBA(364.7,801,1)="S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,801,3,0)="^^1^1^2990921^^"
^IBA(364.7,801,3,1,0)="Strip all punctuation from phone number."
^IBA(364.7,802,0)="791^N^224^^^^N"
^IBA(364.7,802,1)="K IBXDATA"
^IBA(364.7,802,3,0)="^^2^2^2981124^^^^"
^IBA(364.7,802,3,1,0)="Set ^TMP(""IBHDR"",$J) global node so the header data is not extracted again."
^IBA(364.7,802,3,2,0)="No output needed."
^IBA(364.7,803,0)="807^N^131^^^^N"
^IBA(364.7,803,1)="S IBXDATA=""COB1"""
^IBA(364.7,804,0)="808^N^5^^^^N"
^IBA(364.7,804,1)="N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE(""CCOB"",IBZ)) Q:'IBZ  I IBZ<$$COBN^IBCEF(IBXIEN) S Z=Z+1,IBXDATA(Z)=$E(""PST"",IBZ) I Z>1 D ID^IBCEF2(Z,""COB1"")"
^IBA(364.7,804,3,0)="^364.73^5^5^3170417^^^^"
^IBA(364.7,804,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,804,3,2,0)="possible for the data element in the IBXDATA array.  It relies on the"
^IBA(364.7,804,3,3,0)="existence of the IBXSAVE(""CCOB"",COBSEQ) array that was previously extracted."
^IBA(364.7,804,3,4,0)="For other than the first occurrence, the RECORD ID 'COB1' must be output."
^IBA(364.7,804,3,5,0)="Only output 1 record per COB sequence."
^IBA(364.7,805,0)="864^N^5^^^^N"
^IBA(364.7,805,1)="D INS13^IBCEF2"
^IBA(364.7,805,3,0)="^364.73^2^2^3180131^^^"
^IBA(364.7,805,3,1,0)="Depending on the revenue code found, this field is set to DA or UN to"
^IBA(364.7,805,3,2,0)="specify the type of units being billed for."
^IBA(364.7,806,0)="793^N^5^^^^N"
^IBA(364.7,806,1)="K IBXDATA I $P($G(IBXSAVE(""CADR"")),U,2)'="""" S IBXDATA=$E($P(IBXSAVE(""CADR""),U,2)_"" ""_$P(IBXSAVE(""CADR""),U,3),1,30)"
^IBA(364.7,806,3,0)="^364.73^6^6^3030926^^^^"
^IBA(364.7,806,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,806,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,806,3,3,0)="element so there is no output.  Also don't output data element if its"
^IBA(364.7,806,3,4,0)="value is null."
^IBA(364.7,806,3,5,0)="This data relies on the presence of the IBXSAVE(""CADR"") array that should"
^IBA(364.7,806,3,6,0)="have been set in a previous data field."
^IBA(364.7,807,0)="885^N^192^^^^N"
^IBA(364.7,807,1)="K IBXSAVE(""CADR"") I $D(IBXDATA) N Q,Y,Z S Q=""CADR"",Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="""" $P(IBXSAVE(Q),U,6)=Y F Z=1:1:5,7 I $D(IBXDATA(Z)) S $P(IBXSAVE(Q),U,Z)=IBXDATA(Z)"
^IBA(364.7,807,3,0)="^^3^3^2991101^^^^"
^IBA(364.7,807,3,1,0)="Data element extracts address data into IBXDATA array"
^IBA(364.7,807,3,2,0)="Save the data in IBXSAVE(""CADR"")=Street addr 1^Street addr 2^Street addr 3^"
^IBA(364.7,807,3,3,0)="City^State^Zip^claim office id # for later use."
^IBA(364.7,808,0)="886^N^225^^^^N"
^IBA(364.7,808,1)="M IBXSAVE(""CCOB"")=IBXDATA K IBXDATA"
^IBA(364.7,808,3,0)="^^1^1^2990901^^"
^IBA(364.7,808,3,1,0)="Move data to IBXSAVE for later use."
^IBA(364.7,809,0)="809^N^5^^^^N"
^IBA(364.7,809,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,809,3,0)="^364.73^3^3^3150826^^^^"
^IBA(364.7,809,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,809,3,2,0)="insurance into the IBXSAVE(""CCOB"",COB,n,1) array.  Extract the second piece"
^IBA(364.7,809,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,810,0)="816^N^131^^^^N"
^IBA(364.7,810,1)="S IBXDATA=""MOA1"""
^IBA(364.7,811,0)="827^N^131^^^^N"
^IBA(364.7,811,1)="S IBXDATA=""MIA1"""
^IBA(364.7,812,0)="839^N^131^^^^N"
^IBA(364.7,812,1)="S IBXDATA=""MIA2"""
^IBA(364.7,813,0)="853^N^131^^^^N"
^IBA(364.7,813,1)="S IBXDATA=""CCAS"""
^IBA(364.7,814,0)="817^N^5^^^^N"
^IBA(364.7,814,1)="K:$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=$E(""PST"",IBZ) I Z>1 D ID^IBCEF2(Z,""MOA1"")"
^IBA(364.7,814,3,0)="^364.73^4^4^3050207^^^^"
^IBA(364.7,814,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,814,3,2,0)="possible for the data element in the IBXDATA array.  It relies on the"
^IBA(364.7,814,3,3,0)="existence of the IBXSAVE(""MOA"") array that was previously extracted."
^IBA(364.7,814,3,4,0)="For other than the first occurrence, the RECORD ID 'MOA1' must be output."
^IBA(364.7,815,0)="828^N^5^^^^N"
^IBA(364.7,815,1)="K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=$E(""PST"",IBZ) I Z>1 D ID^IBCEF2(Z,""MIA1"")"
^IBA(364.7,815,3,0)="^364.73^4^4^3050207^^^^"
^IBA(364.7,815,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,815,3,2,0)="possible for the data element in the IBXDATA array.  It relies on the"
^IBA(364.7,815,3,3,0)="existence of the IBXSAVE(""MIA45"") array that was previously extracted."
^IBA(364.7,815,3,4,0)="For other than the first occurrence, the RECORD ID 'MIA1' must be output."
^IBA(364.7,816,0)="840^N^5^^^^N"
^IBA(364.7,816,1)="K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=$E(""PST"",IBZ) I Z>1 D ID^IBCEF2(Z,""MIA2"")"
^IBA(364.7,816,3,0)="^364.73^4^4^3190327^^^^"
^IBA(364.7,816,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,816,3,2,0)="possible for the data element in the IBXDATA array.  It relies on the"
^IBA(364.7,816,3,3,0)="existence of the IBXSAVE(""MIA45"") array that was previously extracted."
^IBA(364.7,816,3,4,0)="For other than the first occurrence, the RECORD ID 'MIA2' must be output."
^IBA(364.7,817,0)="854^N^5^^^^N"
^IBA(364.7,817,1)="N Z,Z0 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1,IBXDATA(Z1)=$E(""PST"",Z) I Z1>1 D ID^IBCEF2(Z1,""CCAS"")"
^IBA(364.7,817,3,0)="^364.73^4^4^3050207^^^^"
^IBA(364.7,817,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,817,3,2,0)="possible for the data element in the IBXDATA array.  It relies on the"
^IBA(364.7,817,3,3,0)="existence of the IBXSAVE(""CCAS"") array that was previously extracted."
^IBA(364.7,817,3,4,0)="For other than the first occurrence, the RECORD ID 'CCAS' must be output."
^IBA(364.7,818,0)="887^N^227^^^^N"
^IBA(364.7,818,1)="K IBXSAVE(""MOA"") M IBXSAVE(""MOA"")=IBXDATA K IBXDATA"
^IBA(364.7,818,3,0)="^^1^1^2990901^^^^"
^IBA(364.7,818,3,1,0)="Move the IBXDATA array to the IBXSAVE array for later use."
^IBA(364.7,819,0)="888^N^226^^^^N"
^IBA(364.7,819,1)="K IBXSAVE(""MIA45"") M IBXSAVE(""MIA45"")=IBXDATA K IBXDATA"
^IBA(364.7,819,3,0)="^^1^1^2990901^^^^"
^IBA(364.7,819,3,1,0)="Move the IBXDATA array to the IBXSAVE array for later use."
^IBA(364.7,821,0)="890^N^228^^^^N"
^IBA(364.7,821,1)="K IBXSAVE(""CCAS"") M IBXSAVE(""CCAS"")=IBXDATA K IBXDATA"
^IBA(364.7,821,3,0)="^^1^1^2990901^^^^"
^IBA(364.7,821,3,1,0)="Move the IBXDATA array to the IBXSAVE array for later use."
^IBA(364.7,822,0)="841^N^5^^^^N"
^IBA(364.7,822,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=12 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,822,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,822,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,822,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the twelveth"
^IBA(364.7,822,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,822,3,4,0)="entry."
^IBA(364.7,823,0)="818^N^5^^^^N"
^IBA(364.7,823,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MOA"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MOA"",IBZ,Z,3)),U) S IBXDATA(Z0)=$G(IBXDATA(Z0))+$$DOLLAR^IBCEFG1($P(IBXSAVE(""MOA"",IBZ,Z,3),U))"
^IBA(364.7,823,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,823,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,823,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the first piece"
^IBA(364.7,823,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,824,0)="829^N^5^^^^N"
^IBA(364.7,824,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,4)),U,1)'="""" S IBXDATA(Z0)=$G(IBXDATA(Z0))+$P(IBXSAVE(""MIA45"",IBZ,Z,4),U)"
^IBA(364.7,824,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,824,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,824,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the first piece"
^IBA(364.7,824,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,825,0)="855^N^5^^^^N"
^IBA(364.7,825,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0)),U)'="""",$O(IBXSAVE(""CCAS"",Z,Z0,0)) S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0),U)"
^IBA(364.7,825,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,825,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,825,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n) array.  Extract the first"
^IBA(364.7,825,3,3,0)="piece for this data."
^IBA(364.7,826,0)="848^N^5^^^^N"
^IBA(364.7,826,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,5)),U)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MIA45"",IBZ,Z,5),U) Q"
^IBA(364.7,826,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,826,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,826,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,5) array.  Extract the first"
^IBA(364.7,826,3,3,0)="piece for this data.  Output only the first REMARKS CODE(1) found for each"
^IBA(364.7,826,3,4,0)="COB sequence."
^IBA(364.7,827,0)="856^N^5^^^^N"
^IBA(364.7,827,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,1)),U)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,1),U)"
^IBA(364.7,827,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,827,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,827,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,1) array.  Extract the first piece"
^IBA(364.7,827,3,3,0)="if not null for this data."
^IBA(364.7,828,0)="892^N^5^^^^N"
^IBA(364.7,828,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,2)),U)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,2),U)"
^IBA(364.7,828,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,828,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,828,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,2) array.  Extract the first piece"
^IBA(364.7,828,3,3,0)="for this data, if not null."
^IBA(364.7,829,0)="810^N^5^^^^N"
^IBA(364.7,829,1)="S IBXDATA="""""
^IBA(364.7,829,3,0)="^^1^1^3140416^"
^IBA(364.7,829,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,830,0)="866^N^5^^^^N"
^IBA(364.7,830,1)="N Z,A,B K IBXDATA S:'$D(IBXSAVE(""LCOB"")) IBXNOREQ=1 S (Z,B)=0 F  S Z=$O(IBXSAVE(""LCOB"",Z)) Q:'Z  S:'$O(IBXSAVE(""LCOB"",Z,""COB"",0)) IBXNOREQ=1 S A=0 F  S A=$O(IBXSAVE(""LCOB"",Z,""COB"",A)) Q:'A  S B=B+1,IBXDATA(B)=Z I B>1 D ID^IBCEF2(B,""LCOB"")"
^IBA(364.7,830,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,830,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,830,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,830,3,3,0)="associated with it, output the line # for each COB sequence found for the"
^IBA(364.7,830,3,4,0)="line.  For every line output > 1, output the 'LCOB' record id."
^IBA(364.7,831,0)="865^N^131^^^^N"
^IBA(364.7,831,1)="S IBXDATA=""LCOB"""
^IBA(364.7,831,3,0)="^^1^1^2990902^^^^"
^IBA(364.7,831,3,1,0)="Output record id for 'LCOB' record."
^IBA(364.7,832,0)="867^N^5^^^^N"
^IBA(364.7,832,1)="I $$COBN^IBCEF(IBXIEN)>1 D COBPYRID^IBCEU1(IBXIEN,.IBXSAVE,.IBXDATA)"
^IBA(364.7,832,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,832,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,832,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,832,3,3,0)="associated with it, output the payer id for each COB sequence found for the"
^IBA(364.7,832,3,4,0)="line."
^IBA(364.7,833,0)="878^N^131^^^^N"
^IBA(364.7,833,1)="S IBXDATA=""LCAS"""
^IBA(364.7,833,3,0)="^^1^1^2990902^^^^"
^IBA(364.7,833,3,1,0)="Output record id for 'LCAS' record."
^IBA(364.7,834,0)="879^N^5^^^^N"
^IBA(364.7,834,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,2)"
^IBA(364.7,834,3,0)="^^5^5^2990902^^^^"
^IBA(364.7,834,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,834,3,2,0)="was previously extracted with COB data for specific line items.  Each time"
^IBA(364.7,834,3,3,0)="we encounter a new line item (after the first), a new group code, or more"
^IBA(364.7,834,3,4,0)="than 6 reason codes for a given group code, output the 'LCAS' record id as"
^IBA(364.7,834,3,5,0)="these each need a new record."
^IBA(364.7,835,0)="880^N^5^^^^N"
^IBA(364.7,835,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,3)"
^IBA(364.7,835,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,835,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,835,3,2,0)="was previously extracted with COB data for specific line items.  Each time"
^IBA(364.7,835,3,3,0)="we encounter a new group code, or more than 6 reason codes for a given"
^IBA(364.7,835,3,4,0)="group code, output the group code as these each need a new record."
^IBA(364.7,837,0)="881^N^5^^^^N"
^IBA(364.7,837,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,4)"
^IBA(364.7,837,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,837,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,837,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,837,3,3,0)="reason codes can be output on a single record for the same line and group"
^IBA(364.7,837,3,4,0)="code.  This extracts the first, seventh, etc onto separate records."
^IBA(364.7,838,0)="907^N^5^^^^N"
^IBA(364.7,838,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,7)"
^IBA(364.7,838,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,838,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,838,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,838,3,3,0)="reason codes can be output on a single record for the same line and group"
^IBA(364.7,838,3,4,0)="code.  This extracts the second, eighth, etc onto separate records."
^IBA(364.7,839,0)="882^N^5^^^^N"
^IBA(364.7,839,1)="N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,5) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))"
^IBA(364.7,839,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,839,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,839,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,839,3,3,0)="adj amts can be output on a single record for the same line and group"
^IBA(364.7,839,3,4,0)="code.  This extracts the first, seventh, etc onto separate records."
^IBA(364.7,840,0)="811^N^5^^^^N"
^IBA(364.7,840,1)="S IBXDATA="""""
^IBA(364.7,840,3,0)="^^1^1^3140416^"
^IBA(364.7,840,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,842,0)="812^N^5^^^^N"
^IBA(364.7,842,1)="S IBXDATA="""""
^IBA(364.7,842,3,0)="^^1^1^3140416^"
^IBA(364.7,842,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,846,0)="819^N^5^^^^N"
^IBA(364.7,846,1)="N Z1,Z2,Z3 S Z1=""MOA"",Z2=3,Z3=2 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,846,3,0)="^^3^3^3030724^^^^"
^IBA(364.7,846,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,846,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the second piece"
^IBA(364.7,846,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,847,0)="820^N^5^^^^N"
^IBA(364.7,847,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MOA"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MOA"",IBZ,Z,3)),U,3)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MOA"",IBZ,Z,3),U,3) Q"
^IBA(364.7,847,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,847,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,847,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the third"
^IBA(364.7,847,3,3,0)="piece for this data.  Output only the first REMARKS CODE(1) found for each"
^IBA(364.7,847,3,4,0)="COB sequence."
^IBA(364.7,848,0)="821^N^5^^^^N"
^IBA(364.7,848,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MOA"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MOA"",IBZ,Z,3)),U,4)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MOA"",IBZ,Z,3),U,4) Q"
^IBA(364.7,848,3,0)="^^4^4^2991006^^^^"
^IBA(364.7,848,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,848,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the fourth"
^IBA(364.7,848,3,3,0)="piece for this data.  Output only the first REMARKS CODE(2) found for each"
^IBA(364.7,848,3,4,0)="COB sequence."
^IBA(364.7,849,0)="822^N^5^^^^N"
^IBA(364.7,849,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MOA"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MOA"",IBZ,Z,3)),U,5)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MOA"",IBZ,Z,3),U,5) Q"
^IBA(364.7,849,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,849,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,849,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the fifth"
^IBA(364.7,849,3,3,0)="piece for this data.  Output only the first REMARKS CODE(3) found for each"
^IBA(364.7,849,3,4,0)="COB sequence."
^IBA(364.7,850,0)="823^N^5^^^^N"
^IBA(364.7,850,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MOA"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MOA"",IBZ,Z,3)),U,6)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MOA"",IBZ,Z,3),U,6) Q"
^IBA(364.7,850,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,850,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,850,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the sixth"
^IBA(364.7,850,3,3,0)="piece for this data.  Output only the first REMARKS CODE(4) found for each"
^IBA(364.7,850,3,4,0)="COB sequence."
^IBA(364.7,851,0)="825^N^5^^^^N"
^IBA(364.7,851,1)="N Z1,Z2,Z3 S Z1=""MOA"",Z2=3,Z3=8 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,851,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,851,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,851,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the eighth piece"
^IBA(364.7,851,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,852,0)="826^N^5^^^^N"
^IBA(364.7,852,1)="N Z1,Z2,Z3 S Z1=""MOA"",Z2=3,Z3=9 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,852,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,852,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,852,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the ninth piece"
^IBA(364.7,852,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,853,0)="830^N^5^^^^N"
^IBA(364.7,853,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=3 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,853,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,853,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,853,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the third piece"
^IBA(364.7,853,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,854,0)="831^N^257^^^^N"
^IBA(364.7,854,1)="K:$$FT^IBCEF(IBXIEN)=7 IBXDATA I +$G(IBXDATA)=0 K IBXDATA"
^IBA(364.7,855,0)="832^N^5^^^^N"
^IBA(364.7,855,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=5 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,855,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,855,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,855,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the fifth piece"
^IBA(364.7,855,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,856,0)="833^N^5^^^^N"
^IBA(364.7,856,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=6 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,856,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,856,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,856,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the sixth piece"
^IBA(364.7,856,3,3,0)="for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry."
^IBA(364.7,857,0)="834^N^5^^^^N"
^IBA(364.7,857,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=7 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,857,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,857,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,857,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the seventh"
^IBA(364.7,857,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,857,3,4,0)="entry."
^IBA(364.7,858,0)="835^N^5^^^^N"
^IBA(364.7,858,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=8 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,858,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,858,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,858,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the eighth"
^IBA(364.7,858,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,858,3,4,0)="entry."
^IBA(364.7,859,0)="836^N^5^^^^N"
^IBA(364.7,859,1)="N Z1,Z2,Z2 S Z1=""MIA45"",Z2=4,Z3=9 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,859,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,859,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,859,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the ninth"
^IBA(364.7,859,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,859,3,4,0)="entry."
^IBA(364.7,860,0)="837^N^5^^^^N"
^IBA(364.7,860,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=10 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,860,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,860,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,860,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the tenth"
^IBA(364.7,860,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,860,3,4,0)="entry."
^IBA(364.7,861,0)="838^N^5^^^^N"
^IBA(364.7,861,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=11 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,861,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,861,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,861,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the eleventh"
^IBA(364.7,861,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,861,3,4,0)="entry."
^IBA(364.7,862,0)="842^N^5^^^^N"
^IBA(364.7,862,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=13 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,862,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,862,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,862,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the thirteenth"
^IBA(364.7,862,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,862,3,4,0)="entry."
^IBA(364.7,863,0)="843^N^5^^^^N"
^IBA(364.7,863,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,4)),U,14) S IBXDATA(Z0)=$G(IBXDATA(Z0))+$P(IBXSAVE(""MIA45"",IBZ,Z,4),U,14)"
^IBA(364.7,863,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,863,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,863,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the fourteenth"
^IBA(364.7,863,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,863,3,4,0)="entry."
^IBA(364.7,864,0)="844^N^5^^^^N"
^IBA(364.7,864,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=15 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,864,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,864,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,864,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the fifteenth"
^IBA(364.7,864,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,864,3,4,0)="entry."
^IBA(364.7,865,0)="847^N^5^^^^N"
^IBA(364.7,865,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=18 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,865,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,865,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,865,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the eighteenth"
^IBA(364.7,865,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,865,3,4,0)="entry."
^IBA(364.7,866,0)="849^N^5^^^^N"
^IBA(364.7,866,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,5)),U,2)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MIA45"",IBZ,Z,5),U,2) Q"
^IBA(364.7,866,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,866,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,866,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,5) array.  Extract the second"
^IBA(364.7,866,3,3,0)="piece for this data.  Output only the first REMARKS CODE(2) found for each"
^IBA(364.7,866,3,4,0)="COB sequence."
^IBA(364.7,867,0)="850^N^5^^^^N"
^IBA(364.7,867,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,5)),U,3)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MIA45"",IBZ,Z,5),U,3) Q"
^IBA(364.7,867,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,867,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,867,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,5) array.  Extract the third"
^IBA(364.7,867,3,3,0)="piece for this data.  Output only the first REMARKS CODE(3) found for each"
^IBA(364.7,867,3,4,0)="COB sequence."
^IBA(364.7,868,0)="851^N^5^^^^N"
^IBA(364.7,868,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,5)),U,4)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MIA45"",IBZ,Z,5),U,4) Q"
^IBA(364.7,868,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,868,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,868,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,5) array.  Extract the fourth"
^IBA(364.7,868,3,3,0)="piece for this data.  Output only the first REMARKS CODE(4) found for each"
^IBA(364.7,868,3,4,0)="COB sequence."
^IBA(364.7,869,0)="924^N^5^^^^N"
^IBA(364.7,869,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MIA45"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MIA45"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MIA45"",IBZ,Z,5)),U,5)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MIA45"",IBZ,Z,5),U,5) Q"
^IBA(364.7,869,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,869,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,869,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the fifth"
^IBA(364.7,869,3,3,0)="piece for this data.  Output only the first REMARKS CODE(5) found for each"
^IBA(364.7,869,3,4,0)="COB sequence."
^IBA(364.7,870,0)="845^N^5^^^^N"
^IBA(364.7,870,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=16 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,870,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,870,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,870,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the sixteenth"
^IBA(364.7,870,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,871,0)="846^N^5^^^^N"
^IBA(364.7,871,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=17 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,871,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,871,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,871,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the seventeenth"
^IBA(364.7,871,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,871,3,4,0)="entry."
^IBA(364.7,872,0)="857^N^5^^^^N"
^IBA(364.7,872,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,1)),U,2)'="""" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE(""CCAS"",Z,Z0,1),U,2))"
^IBA(364.7,872,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,872,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,872,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,1) array.  Extract the second piece"
^IBA(364.7,872,3,3,0)="if not null for this data."
^IBA(364.7,873,0)="893^N^5^^^^N"
^IBA(364.7,873,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,3)),U)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,3),U)"
^IBA(364.7,873,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,873,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,873,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,3) array.  Extract the first piece"
^IBA(364.7,873,3,3,0)="for this data, if not null."
^IBA(364.7,874,0)="858^N^5^^^^N"
^IBA(364.7,874,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,1)),U,3)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,1),U,3)"
^IBA(364.7,874,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,874,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,874,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,1) array.  Extract the third piece"
^IBA(364.7,874,3,3,0)="for this data, if not null."
^IBA(364.7,875,0)="897^N^5^^^^N"
^IBA(364.7,875,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,2)),U,2)'="""" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE(""CCAS"",Z,Z0,2),U,2))"
^IBA(364.7,875,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,875,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,875,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,2) array.  Extract the second piece"
^IBA(364.7,875,3,3,0)="for this data, if not null."
^IBA(364.7,876,0)="898^N^5^^^^N"
^IBA(364.7,876,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,3)),U,2)'="""" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE(""CCAS"",Z,Z0,3),U,2))"
^IBA(364.7,876,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,876,3,1,0)="his data element relies on the previous extract of COB data for other"
^IBA(364.7,876,3,2,0)="nsurance into the IBXSAVE(""CCAS"",COB,n,3) array.  Extract the second piece"
^IBA(364.7,876,3,3,0)="or this data, if not null."
^IBA(364.7,877,0)="902^N^5^^^^N"
^IBA(364.7,877,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,2)),U,3)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,2),U,3)"
^IBA(364.7,877,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,877,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,877,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,2) array.  Extract the third piece"
^IBA(364.7,877,3,3,0)="for this data, if not null."
^IBA(364.7,878,0)="903^N^5^^^^N"
^IBA(364.7,878,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,3)),U,3)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,3),U,3)"
^IBA(364.7,878,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,878,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,878,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,3) array.  Extract the third piece"
^IBA(364.7,878,3,3,0)="for this data, if not null."
^IBA(364.7,879,0)="904^N^5^^^^N"
^IBA(364.7,879,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,4)),U,3)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,4),U,3)"
^IBA(364.7,879,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,879,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,879,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,4) array.  Extract the third piece"
^IBA(364.7,879,3,3,0)="for this data, if not null."
^IBA(364.7,880,0)="905^N^5^^^^N"
^IBA(364.7,880,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,5)),U,3)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,5),U,3)"
^IBA(364.7,880,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,880,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,880,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,5) array.  Extract the third piece"
^IBA(364.7,880,3,3,0)="for this data, if not null."
^IBA(364.7,881,0)="906^N^5^^^^N"
^IBA(364.7,881,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,6)),U,3)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,6),U,3)"
^IBA(364.7,881,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,881,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,881,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,6) array.  Extract the third piece"
^IBA(364.7,881,3,3,0)="for this data, if not null."
^IBA(364.7,882,0)="899^N^5^^^^N"
^IBA(364.7,882,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,4)),U,2)'="""" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE(""CCAS"",Z,Z0,4),U,2))"
^IBA(364.7,882,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,882,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,882,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,4) array.  Extract the second piece"
^IBA(364.7,882,3,3,0)="for this data, if not null."
^IBA(364.7,883,0)="901^N^5^^^^N"
^IBA(364.7,883,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,6)),U,2)'="""" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE(""CCAS"",Z,Z0,6),U,2))"
^IBA(364.7,883,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,883,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,883,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,6) array.  Extract the second piece"
^IBA(364.7,883,3,3,0)="for this data, if not null."
^IBA(364.7,884,0)="894^N^5^^^^N"
^IBA(364.7,884,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,4)),U)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,4),U)"
^IBA(364.7,884,3,0)="^^3^3^2990901^^"
^IBA(364.7,884,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,884,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,4) array.  Extract the first piece"
^IBA(364.7,884,3,3,0)="for this data, if not null."
^IBA(364.7,885,0)="895^N^5^^^^N"
^IBA(364.7,885,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,5)),U)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,5),U)"
^IBA(364.7,885,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,885,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,885,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,5) array.  Extract the first piece"
^IBA(364.7,885,3,3,0)="for this data, if not null."
^IBA(364.7,886,0)="900^N^5^^^^N"
^IBA(364.7,886,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,5)),U,2)'="""" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE(""CCAS"",Z,Z0,5),U,2))"
^IBA(364.7,886,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,886,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,886,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,5) array.  Extract the second piece"
^IBA(364.7,886,3,3,0)="for this data, if not null."
^IBA(364.7,887,0)="896^N^5^^^^N"
^IBA(364.7,887,1)="N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE(""CCAS"",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE(""CCAS"",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE(""CCAS"",Z,Z0,6)),U)'="""" S IBXDATA(Z1)=$P(IBXSAVE(""CCAS"",Z,Z0,6),U)"
^IBA(364.7,887,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,887,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,887,3,2,0)="insurance into the IBXSAVE(""CCAS"",COB,n,6) array.  Extract the first piece"
^IBA(364.7,887,3,3,0)="for this data, if not null."
^IBA(364.7,888,0)="923^N^5^^^^N"
^IBA(364.7,888,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""MOA"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""MOA"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""MOA"",IBZ,Z,3)),U,7)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""MOA"",IBZ,Z,3),U,7) Q"
^IBA(364.7,888,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,888,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,888,3,2,0)="insurance into the IBXSAVE(""MOA"",COB,n,3) array.  Extract the seventh"
^IBA(364.7,888,3,3,0)="piece for this data.  Output only the first REMARKS CODE(5) found for each"
^IBA(364.7,888,3,4,0)="COB sequence."
^IBA(364.7,889,0)="862^N^5^^^^N"
^IBA(364.7,889,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P(IBXSAVE(""OUTPT"",Z),U,13)'="""" IBXDATA(Z)=$P(""N^Y"",U,$P(IBXSAVE(""OUTPT"",Z),U,13)+1)"
^IBA(364.7,889,3,0)="^^3^3^2991015^^^^"
^IBA(364.7,889,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,889,3,2,0)="possible for the data element in the previously extracted IBXSAVE array."
^IBA(364.7,889,3,3,0)="Only output the data for service lines that have data."
^IBA(364.7,890,0)="852^N^5^^^^N"
^IBA(364.7,890,1)="N Z1,Z2,Z3 S Z1=""MIA45"",Z2=4,Z3=4 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)"
^IBA(364.7,890,3,0)="^^4^4^2990901^^^^"
^IBA(364.7,890,3,1,0)="This data element relies on the previous extract of COB data for other"
^IBA(364.7,890,3,2,0)="insurance into the IBXSAVE(""MIA45"",COB,n,4) array.  Extract the fourth"
^IBA(364.7,890,3,3,0)="piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)"
^IBA(364.7,890,3,4,0)="entry."
^IBA(364.7,891,0)="863^N^5^^^^N"
^IBA(364.7,891,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,4) S IBXDATA(Z)=$S(Z0'=7:""UN"",1:""MJ"")"
^IBA(364.7,891,3,0)="^^5^5^2990901^^^^"
^IBA(364.7,891,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,891,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,891,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,891,3,4,0)="If the type of service not = 7 (anesthesia), this is units (UN) and for"
^IBA(364.7,891,3,5,0)="anesthesia, it's minutes (MJ)"
^IBA(364.7,892,0)="783^N^20^^^^N"
^IBA(364.7,892,1)="K IBXSAVE(""PS$"") K:'$G(IBXDATA) IBXDATA I $G(IBXDATA) S IBXDATA=$$DOLLAR^IBCEFG1(IBXDATA),IBXSAVE(""PS$"")=1"
^IBA(364.7,892,3,0)="^364.73^5^5^3070525^^"
^IBA(364.7,892,3,1,0)="SUB-7"
^IBA(364.7,892,3,2,0)="(P) 2300/AMT(2)/02"
^IBA(364.7,892,3,3,0)="Format the total purchased service charges amount into an EDI dollar "
^IBA(364.7,892,3,4,0)="format before transmitting.  Save the IBXSAVE(""PS$"") flag to indicate "
^IBA(364.7,892,3,5,0)="that a dollar amount exists and that the qualifier in SUB-11 is needed."
^IBA(364.7,893,0)="936^N^5^^^^N"
^IBA(364.7,893,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""NAME"")),U,5)"
^IBA(364.7,893,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,893,3,1,0)="Finds SSN for REFERING PROVIDER"
^IBA(364.7,894,0)="938^N^5^^^^N"
^IBA(364.7,894,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""NAME"")),U,1)"
^IBA(364.7,894,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,894,3,1,0)="Changes data element (name) into LAST^FIRST^MIDDLE format.  Saves data in"
^IBA(364.7,894,3,2,0)="IBXSAVE array for use by later fields."
^IBA(364.7,896,0)="948^N^5^^^^N"
^IBA(364.7,896,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,""NAME"")),U,1)"
^IBA(364.7,896,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,896,3,1,0)="Changes data element (name) into LAST^FIRST^MIDDLE format.  Saves data in"
^IBA(364.7,896,3,2,0)="IBXSAVE array for use by later fields."
^IBA(364.7,897,0)="950^N^5^^^^N"
^IBA(364.7,897,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,""NAME"")),U,5)"
^IBA(364.7,897,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,897,3,1,0)="Finds the Operating Physicians SSN "
^IBA(364.7,898,0)="794^N^235^^^^N"
^IBA(364.7,898,3,0)="^^2^2^3000204^^^^"
^IBA(364.7,898,3,1,0)="This is the X12 definition for the current insurance plan type"
^IBA(364.7,898,3,2,0)="(Refer to the 837 v4010 field 2000B/SBR/09.)"
^IBA(364.7,900,0)="804^N^351^^^^N"
^IBA(364.7,900,1)="S IBXDATA=$S(IBXDATA]"""":""A8"",1:"""")"
^IBA(364.7,901,0)="805^N^236^^^^N"
^IBA(364.7,901,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $P($G(IBZ),U,Z)'="""",$D(^DGCR(399,IBXIEN,""I""_(Z+1))) S IBXDATA(Z)=$P(IBZ,U,Z)"
^IBA(364.7,901,3,0)="^^11^11^3000203^^^^"
^IBA(364.7,901,3,1,0)="This is the X12 interpretation of the 'other' insurance plan types"
^IBA(364.7,901,3,2,0)="(see codes below or refer to the 837 v4010 field 2000B/SBR/09.)"
^IBA(364.7,901,3,3,0)="    X12 CODES: MA = MEDICARE PART A    3"
^IBA(364.7,901,3,4,0)="               MB = MEDICARE PART B    3"
^IBA(364.7,901,3,5,0)="               HM = HMO"
^IBA(364.7,901,3,6,0)="               MC = MEDICAID    4"
^IBA(364.7,901,3,7,0)="               12 = PPO"
^IBA(364.7,901,3,8,0)="               CH = TRICARE     5"
^IBA(364.7,901,3,9,0)="               WC = WORKERS COMP"
^IBA(364.7,901,3,10,0)="               CI = COMMERCIAL  (default if none defined),1,2"
^IBA(364.7,901,3,11,0)="               15 = INDEMNITY"
^IBA(364.7,902,0)="806^N^266^^^^N"
^IBA(364.7,902,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $G(IBZ(Z))'="""" S IBXDATA(Z)=""G1"""
^IBA(364.7,914,0)="941^N^5^^^^N"
^IBA(364.7,914,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,""NAME"")),U,1)"
^IBA(364.7,914,3,0)="^364.73^4^4^3101109^^^^"
^IBA(364.7,914,3,1,0)="Changes data element (name) into LAST^FIRST^MIDDLE^CREDENTIALS format. Saves"
^IBA(364.7,914,3,2,0)="data in IBXSAVE array for use by later fields."
^IBA(364.7,914,3,3,0)="If the provider name is blank and the provider id is SLF000 (self), this"
^IBA(364.7,914,3,4,0)="field is not required."
^IBA(364.7,915,0)="942^N^5^^^^N"
^IBA(364.7,915,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,""NAME"")),U,2)"
^IBA(364.7,915,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,915,3,1,0)="If the attending/rendering provider exists, output the first name from the"
^IBA(364.7,915,3,2,0)="second '^' piece."
^IBA(364.7,916,0)="946^N^5^^^^N"
^IBA(364.7,916,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,""NAME"")),U,2)"
^IBA(364.7,916,3,0)="^364.73^1^1^3101109^^^^"
^IBA(364.7,916,3,1,0)="Operating provider first name"
^IBA(364.7,917,0)="949^N^5^^^^N"
^IBA(364.7,917,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,""NAME"")),U,2)"
^IBA(364.7,917,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,917,3,1,0)="If the operating provider exists, output the first name from the second '^'"
^IBA(364.7,917,3,2,0)="piece."
^IBA(364.7,918,0)="937^N^5^^^^N"
^IBA(364.7,918,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""NAME"")),U,2)"
^IBA(364.7,918,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,918,3,1,0)="If the referring provider exists, output the first name from the second '^'"
^IBA(364.7,918,3,2,0)="piece."
^IBA(364.7,919,0)="947^N^5^^^^N"
^IBA(364.7,919,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,""NAME"")),U,5)"
^IBA(364.7,920,0)="939^N^5^^^^N"
^IBA(364.7,920,1)="K IBXDATA"
^IBA(364.7,921,0)="944^N^5^^^^N"
^IBA(364.7,921,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,922,0)="935^N^5^^^^N"
^IBA(364.7,922,1)="S IBXDATA=""AT"" I $G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,""TAXONOMY""))']"""" S IBXDATA="""""
^IBA(364.7,923,0)="951^N^5^^^^N"
^IBA(364.7,923,1)="S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,""TAXONOMY""))"
^IBA(364.7,924,0)="952^N^5^^^^N"
^IBA(364.7,924,1)="K IBXDATA"
^IBA(364.7,924,3,0)="^^1^1^2990614^^^^"
^IBA(364.7,924,3,1,0)="This field is blank."
^IBA(364.7,925,0)="859^N^5^^^^N"
^IBA(364.7,925,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","",2) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,925,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,925,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,925,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,925,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,926,0)="860^N^5^^^^N"
^IBA(364.7,926,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","",3) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,926,3,0)="^^3^3^2990901^^^^"
^IBA(364.7,926,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,926,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,926,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,927,0)="861^N^5^^^^N"
^IBA(364.7,927,1)="K IBXDATA N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","",4) K IBXSAVE(""PROCMODS"",Z) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,927,3,0)="^^3^3^3000120^^^^"
^IBA(364.7,927,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,927,3,2,0)="possible for the data element in the previously extract IBXSAVE array.  If"
^IBA(364.7,927,3,3,0)="any service line data is found, the data is output."
^IBA(364.7,928,0)="953^N^230^^^^ZL"
^IBA(364.7,928,1)="S IBXDATA=$E($P(IBXDATA,U,3),4,7) I $TR(IBXDATA,0)="""" K IBXDATA"
^IBA(364.7,928,3,0)="^^2^2^2991006^^^^"
^IBA(364.7,928,3,1,0)="Always 0-fill data to the left.  If primary site, don't output.  If not"
^IBA(364.7,928,3,2,0)="primary site, this is the site suffix (up to 4 digits)"
^IBA(364.7,929,0)="954^N^246^^^^N"
^IBA(364.7,929,1)="I $G(IBXDATA)'="""" S:$G(^TMP(""IBXSAVE"",$J,""RM"")) IBXDATA="" ""_IBXDATA"
^IBA(364.7,929,3,0)="^^1^1^2990609^^^"
^IBA(364.7,929,3,1,0)="If the right margin is 81 instead of 80, move the output over 1 space."
^IBA(364.7,930,0)="955^N^247^^^^N"
^IBA(364.7,930,1)="I $G(IBXDATA)'="""" S:$G(^TMP(""IBXSAVE"",$J,""RM"")) IBXDATA="" ""_IBXDATA"
^IBA(364.7,930,3,0)="^^1^1^2990609^^^"
^IBA(364.7,930,3,1,0)="If the right margin is 81 instead of 80, move the output over 1 space."
^IBA(364.7,931,0)="956^N^266^^^^N"
^IBA(364.7,931,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $G(IBZ(Z))'="""" S IBXDATA(Z)=IBZ(Z)"
^IBA(364.7,931,3,0)="^^3^3^2990722^^^"
^IBA(364.7,931,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,931,3,2,0)="possible for the data element in the IBXDATA array.  If any other insurance"
^IBA(364.7,931,3,3,0)="company data is found, these authorization codes are output."
^IBA(364.7,932,0)="957^N^262^^^^N"
^IBA(364.7,933,0)="958^N^5^^^^N"
^IBA(364.7,933,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""INPT"",Z)) Q:'Z  I $P(IBXSAVE(""INPT"",Z),U,11)'="""" S IBXDATA(Z)=""N4"""
^IBA(364.7,933,3,0)="^364.73^1^1^3140305^^^^"
^IBA(364.7,933,3,1,0)="If data element's value is null, do not output."
^IBA(364.7,934,0)="960^N^5^^^^N"
^IBA(364.7,934,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,934,3,0)="^364.73^1^1^3140425^^^^"
^IBA(364.7,934,3,1,0)="Explanation of benefits indicator should always be set to ""y"""
^IBA(364.7,935,0)="959^N^5^^^^N"
^IBA(364.7,936,0)="965^N^293^^^^N"
^IBA(364.7,936,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,936,3,0)="^^2^2^3000302^^"
^IBA(364.7,936,3,1,0)="Format data element in CCYYMMDD date format.  If data element's value is"
^IBA(364.7,936,3,2,0)="null, do not output."
^IBA(364.7,937,0)="967^N^71^^^^N"
^IBA(364.7,937,1)="S IBXDATA=$$FMTE^XLFDT(IBXDATA,""5D"")"
^IBA(364.7,937,3,0)="^^1^1^2991209^^^^"
^IBA(364.7,937,3,1,0)="Format data element in MM/DD/CCYY date format."
^IBA(364.7,938,0)="795^N^292^^^^N"
^IBA(364.7,938,1)="S:IBXDATA IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,939,0)="977^N^5^^^^N"
^IBA(364.7,939,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P(IBXSAVE(""OUTPT"",Z),U,16)'="""" S IBXDATA(Z)=+$TR($J($P(IBXSAVE(""OUTPT"",Z),U,16),11,3),"" ."")"
^IBA(364.7,939,3,0)="^364.73^1^1^3170508^^^^"
^IBA(364.7,939,3,1,0)="This element is blank."
^IBA(364.7,940,0)="978^N^5^^^^N"
^IBA(364.7,940,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P($G(IBXSAVE(""OUTPT"",Z,""AUX"")),U,3)'="""" IBXDATA(Z)=$P(""N^Y"",U,$P(IBXSAVE(""OUTPT"",Z,""AUX""),U,3)+1)"
^IBA(364.7,940,3,0)="^^3^3^2990901^^^"
^IBA(364.7,940,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,940,3,2,0)="possible for the data element in the previously extracted IBXSAVE array."
^IBA(364.7,940,3,3,0)="Only output the data for service lines that have data."
^IBA(364.7,941,0)="979^N^5^^^^N"
^IBA(364.7,941,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P(IBXSAVE(""OUTPT"",Z),U,16)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,17) I IBXDATA(Z)="""" S IBXDATA(Z)=""UN"""
^IBA(364.7,941,3,0)="^364.73^1^1^3170413^^^^"
^IBA(364.7,941,3,1,0)="This element is blank."
^IBA(364.7,942,0)="980^N^5^^^^N"
^IBA(364.7,942,1)="K IBXDATA"
^IBA(364.7,942,3,0)="^^1^1^2990901^^^^"
^IBA(364.7,942,3,1,0)="This element is blank."
^IBA(364.7,943,0)="981^N^5^^^^N"
^IBA(364.7,943,1)="K IBXDATA"
^IBA(364.7,943,3,0)="^^1^1^2990901^^^^"
^IBA(364.7,943,3,1,0)="This element is blank."
^IBA(364.7,944,0)="982^N^5^^^^N"
^IBA(364.7,944,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P($G(IBXSAVE(""OUTPT"",Z,""AUX"")),U,7)'="""" IBXDATA(Z)=$P(""N^Y"",U,$P(IBXSAVE(""OUTPT"",Z,""AUX""),U,7)+1)"
^IBA(364.7,944,3,0)="0^^3^3^2990901^^^^"
^IBA(364.7,944,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,944,3,2,0)="possible for the data element in the previously extracted IBXSAVE array."
^IBA(364.7,944,3,3,0)="Only output the data for service lines that have data."
^IBA(364.7,945,0)="177^N^5^^^^N"
^IBA(364.7,945,1)="S IBXDATA=$G(IBXSAVE(""PRV-BP"",""NAME""))"
^IBA(364.7,945,3,0)="^364.73^2^2^3090213^^"
^IBA(364.7,945,3,1,0)="PRV-3"
^IBA(364.7,945,3,2,0)="Billing provider name"
^IBA(364.7,946,0)="796^N^270^^^^N"
^IBA(364.7,946,1)="S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,946,3,0)="^^2^2^2991115^^^^"
^IBA(364.7,946,3,1,0)="Format data element in CCYYMMDD date format.  If data element's value is "
^IBA(364.7,946,3,2,0)="null do not output."
^IBA(364.7,947,0)="970^N^112^^^^N"
^IBA(364.7,947,1)="I $D(IBXDATA) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)"
^IBA(364.7,947,3,0)="^^1^1^3060111^"
^IBA(364.7,947,3,1,0)="Format code for the CLIA# in SUB-8.  Just remove any punctuation."
^IBA(364.7,948,0)="971^N^5^^^^N"
^IBA(364.7,948,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,948,3,0)="^364.73^5^5^3140425^^"
^IBA(364.7,948,3,1,0)="SUB-9  lab/facility primary ID#"
^IBA(364.7,948,3,2,0)="Remove punctuation from the returned tax ID number."
^IBA(364.7,948,3,3,0)=" "
^IBA(364.7,948,3,4,0)="esg - 6/25/09 - IB*2*400 - Tie SUB-9 and SUB-13 together as an "
^IBA(364.7,948,3,5,0)="ID/qualifier pair for purchased services."
^IBA(364.7,949,0)="972^N^273^^^^N"
^IBA(364.7,949,1)="I '$$SUB1OK^IBCEP8A(IBXIEN) K IBXDATA"
^IBA(364.7,949,3,0)="^^15^15^3081014^"
^IBA(364.7,949,3,1,0)="The data element calls N-PURCHASED SERVICE TYPE which extracts the NON-VA "
^IBA(364.7,949,3,2,0)="CARE TYPE field from the claim (399,233)."
^IBA(364.7,949,3,3,0)=" "
^IBA(364.7,949,3,4,0)="1:FEE BASIS, NON-LAB"
^IBA(364.7,949,3,5,0)="2:FEE BASIS, LAB"
^IBA(364.7,949,3,6,0)="3:NON-FEE BASIS, NON-LAB"
^IBA(364.7,949,3,7,0)="4:NON-FEE BASIS, LAB"
^IBA(364.7,949,3,8,0)=" "
^IBA(364.7,949,3,9,0)="Austin uses this field for professional claims only.  If the value is 1 "
^IBA(364.7,949,3,10,0)="or 2 then Austin populates the purchased service loop 2310C."
^IBA(364.7,949,3,11,0)=" "
^IBA(364.7,949,3,12,0)="Invoke the $$SUB1OK function to determine if this claim is for purchased "
^IBA(364.7,949,3,13,0)="services.  If $$SUB1OK is true, then leave the value of IBXDATA alone as "
^IBA(364.7,949,3,14,0)="extracted from the data element.  But if $$SUB1OK is false, then kill "
^IBA(364.7,949,3,15,0)="IBXDATA to make this field blank."
^IBA(364.7,952,0)="974^N^5^^^^N"
^IBA(364.7,952,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P(IBXSAVE(""OUTPT"",Z),U,15)'="""" S IBXDATA(Z)=""N4"""
^IBA(364.7,952,3,0)="^^1^1^3140305^"
^IBA(364.7,952,3,1,0)="Added NDC code in piece 22 as part of IB*2.0*516."
^IBA(364.7,953,0)="975^N^5^^^^N"
^IBA(364.7,953,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P(IBXSAVE(""OUTPT"",Z),U,15)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,15)"
^IBA(364.7,953,3,0)="^^4^4^3060818^"
^IBA(364.7,953,3,1,0)="esg - 8/18/06 - IB patch 348 - New CMS-1500 claim form project"
^IBA(364.7,953,3,2,0)=" "
^IBA(364.7,953,3,3,0)="Box 24K no longer exists on the 1500 form.  Austin FSC was not mapping "
^IBA(364.7,953,3,4,0)="this field to anything anyway."
^IBA(364.7,954,0)="968^N^5^^^^N"
^IBA(364.7,954,1)="K IBXDATA"
^IBA(364.7,954,3,0)="^364.73^1^1^3080828^^^^"
^IBA(364.7,954,3,1,0)="IB patch 320.  Move the data in this field to CI1A-3."
^IBA(364.7,957,0)="868^N^5^^^^N"
^IBA(364.7,957,1)="N S,N K IBXDATA S S=4 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) S N=0 F  S N=$O(IBXDATA(N)) Q:'N  S IBXDATA(N)=$$DOLLAR^IBCEFG1(IBXDATA(N))"
^IBA(364.7,957,3,0)="^364.73^4^4^3050208^^"
^IBA(364.7,957,3,1,0)="This data element assumes the existence of the IBXSAVE array for each "
^IBA(364.7,957,3,2,0)="line item (LCOB) that was previously extracted.  If the line has COB data "
^IBA(364.7,957,3,3,0)="associated with it, output the amount paid for each COB sequence found for"
^IBA(364.7,957,3,4,0)="the line."
^IBA(364.7,958,0)="869^N^5^^^^N"
^IBA(364.7,958,1)="N S K IBXDATA S S=5 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)"
^IBA(364.7,958,3,0)="^^4^4^2990902^^^"
^IBA(364.7,958,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,958,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,958,3,3,0)="associated with it, output the procedure for each COB sequence found for the"
^IBA(364.7,958,3,4,0)="line."
^IBA(364.7,959,0)="870^N^5^^^^N"
^IBA(364.7,959,1)="N S K IBXDATA S S=11 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)"
^IBA(364.7,959,3,0)="^^4^4^2990902^^^"
^IBA(364.7,959,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,959,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,959,3,3,0)="associated with it, output the revenue code for each COB sequence found for"
^IBA(364.7,959,3,4,0)="the line."
^IBA(364.7,960,0)="871^N^5^^^^N"
^IBA(364.7,960,1)="D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,1)"
^IBA(364.7,960,3,0)="^^4^4^2990902^^^"
^IBA(364.7,960,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,960,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,960,3,3,0)="associated with it, output the modifier 1 for each COB sequence found for"
^IBA(364.7,960,3,4,0)="the line."
^IBA(364.7,961,0)="872^N^5^^^^N"
^IBA(364.7,961,1)="D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,2)"
^IBA(364.7,961,3,0)="^^4^4^2990902^^"
^IBA(364.7,961,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,961,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,961,3,3,0)="associated with it, output the modifier 2 for each COB sequence found for"
^IBA(364.7,961,3,4,0)="the line."
^IBA(364.7,962,0)="873^N^5^^^^N"
^IBA(364.7,962,1)="D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,3)"
^IBA(364.7,962,3,0)="^^4^4^2990902^^"
^IBA(364.7,962,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,962,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,962,3,3,0)="associated with it, output the modifier 3 for each COB sequence found for"
^IBA(364.7,962,3,4,0)="the line."
^IBA(364.7,963,0)="874^N^5^^^^N"
^IBA(364.7,963,1)="D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,4)"
^IBA(364.7,963,3,0)="^^4^4^2990902^^"
^IBA(364.7,963,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,963,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,963,3,3,0)="associated with it, output the modifier 4 for each COB sequence found for"
^IBA(364.7,963,3,4,0)="the line."
^IBA(364.7,964,0)="875^N^5^^^^N"
^IBA(364.7,964,1)="K IBXDATA D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,10)"
^IBA(364.7,964,3,0)="^^4^4^2990902^^"
^IBA(364.7,964,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,964,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,964,3,3,0)="associated with it, output the description for each COB sequence found for"
^IBA(364.7,964,3,4,0)="the line."
^IBA(364.7,965,0)="876^N^5^^^^N"
^IBA(364.7,965,1)="N S,N K IBXDATA S S=12 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) S N=0 F  S N=$O(IBXDATA(N)) Q:'N  S:$G(IBXDATA(N)) IBXDATA(N)=$FN(IBXDATA(N),"""",0)"
^IBA(364.7,965,3,0)="^^4^4^2990902^^"
^IBA(364.7,965,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,965,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,965,3,3,0)="associated with it, output the paid units for each COB sequence found for"
^IBA(364.7,965,3,4,0)="the line."
^IBA(364.7,966,0)="877^N^5^^^^N"
^IBA(364.7,966,1)="N S K IBXDATA S S=13 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) K:'$G(IBXTRA) IBXDATA"
^IBA(364.7,966,3,0)="^^4^4^2990902^^"
^IBA(364.7,966,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,966,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,966,3,3,0)="associated with it, output the assigned line # for each COB sequence found"
^IBA(364.7,966,3,4,0)="for the line."
^IBA(364.7,967,0)="976^N^5^^^^N"
^IBA(364.7,967,1)="N S,N K IBXDATA S S=20 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) S N=0 F  S N=$O(IBXDATA(N)) Q:'N  S:$G(IBXDATA(N)) IBXDATA(N)=$$DT^IBCEFG1(IBXDATA(N),"""",""D8"")"
^IBA(364.7,967,3,0)="^^5^5^2991115^^^^"
^IBA(364.7,967,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,967,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,967,3,3,0)="associated with it, output the date paid for each COB sequence found for"
^IBA(364.7,967,3,4,0)="the line.  This data is only stored at the claim level, not the line level,"
^IBA(364.7,967,3,5,0)="so it is assumed it applies to every line item on the EOB."
^IBA(364.7,968,0)="883^N^5^^^^N"
^IBA(364.7,968,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,6)"
^IBA(364.7,968,3,0)="^^4^4^2990902^^^"
^IBA(364.7,968,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,968,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,968,3,3,0)="adj quantity can be output on a single record for the same line and group"
^IBA(364.7,968,3,4,0)="code.  This extracts the first, seventh, etc onto separate records."
^IBA(364.7,969,0)="912^N^5^^^^N"
^IBA(364.7,969,1)="N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,8) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))"
^IBA(364.7,969,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,969,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,969,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,969,3,3,0)="adj amts can be output on a single record for the same line and group"
^IBA(364.7,969,3,4,0)="code.  This extracts the second, eighth, etc onto separate records."
^IBA(364.7,970,0)="908^N^5^^^^N"
^IBA(364.7,970,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,10)"
^IBA(364.7,970,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,970,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,970,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,970,3,3,0)="reason codes can be output on a single record for the same line and group"
^IBA(364.7,970,3,4,0)="code.  This extracts the third, ninth, etc onto separate records."
^IBA(364.7,971,0)="909^N^5^^^^N"
^IBA(364.7,971,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,13)"
^IBA(364.7,971,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,971,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,971,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,971,3,3,0)="reason codes can be output on a single record for the same line and group"
^IBA(364.7,971,3,4,0)="code.  This extracts the fourth, tenth, etc onto separate records."
^IBA(364.7,972,0)="910^N^5^^^^N"
^IBA(364.7,972,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,16)"
^IBA(364.7,972,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,972,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,972,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,972,3,3,0)="reason codes can be output on a single record for the same line and group"
^IBA(364.7,972,3,4,0)="code.  This extracts the fifth, eleventh, etc onto separate records."
^IBA(364.7,973,0)="921^N^5^^^^N"
^IBA(364.7,973,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,21)"
^IBA(364.7,973,3,0)="^^4^4^2990902^^^"
^IBA(364.7,973,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,973,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,973,3,3,0)="adj quantity can be output on a single record for the same line and group"
^IBA(364.7,973,3,4,0)="code.  This extracts the sixth, twelveth, etc onto separate records."
^IBA(364.7,974,0)="911^N^5^^^^N"
^IBA(364.7,974,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,19)"
^IBA(364.7,974,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,974,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,974,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,974,3,3,0)="reason codes can be output on a single record for the same line and group"
^IBA(364.7,974,3,4,0)="code.  This extracts the sixth, twelveth, etc onto separate records."
^IBA(364.7,975,0)="914^N^5^^^^N"
^IBA(364.7,975,1)="N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,14) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))"
^IBA(364.7,975,3,0)="^^4^4^2990902^^^"
^IBA(364.7,975,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,975,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,975,3,3,0)="adj amts can be output on a single record for the same line and group"
^IBA(364.7,975,3,4,0)="code.  This extracts the fourth, tenth, etc onto separate records."
^IBA(364.7,976,0)="918^N^5^^^^N"
^IBA(364.7,976,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,12)"
^IBA(364.7,976,3,0)="^^4^4^2990902^^^"
^IBA(364.7,976,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,976,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,976,3,3,0)="adj quantity can be output on a single record for the same line and group"
^IBA(364.7,976,3,4,0)="code.  This extracts the third, ninth, etc onto separate records."
^IBA(364.7,977,0)="920^N^5^^^^N"
^IBA(364.7,977,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,18)"
^IBA(364.7,977,3,0)="^^4^4^2990902^^^"
^IBA(364.7,977,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,977,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,977,3,3,0)="adj quantity can be output on a single record for the same line and group"
^IBA(364.7,977,3,4,0)="code.  This extracts the fifth, eleventh, etc onto separate records."
^IBA(364.7,978,0)="913^N^5^^^^N"
^IBA(364.7,978,1)="N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,11) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))"
^IBA(364.7,978,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,978,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,978,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,978,3,3,0)="adj amts can be output on a single record for the same line and group"
^IBA(364.7,978,3,4,0)="code.  This extracts the third, ninth, etc onto separate records."
^IBA(364.7,979,0)="919^N^5^^^^N"
^IBA(364.7,979,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,15)"
^IBA(364.7,979,3,0)="^^4^4^2990902^^^"
^IBA(364.7,979,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,979,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,979,3,3,0)="adj quantity can be output on a single record for the same line and group"
^IBA(364.7,979,3,4,0)="code.  This extracts the fourth, tenth, etc onto separate records."
^IBA(364.7,980,0)="915^N^5^^^^N"
^IBA(364.7,980,1)="N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,17) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))"
^IBA(364.7,980,3,0)="^^4^4^2990902^^^"
^IBA(364.7,980,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,980,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,980,3,3,0)="adj amts can be output on a single record for the same line and group"
^IBA(364.7,980,3,4,0)="code.  This extracts the fifth, eleventh, etc onto separate records."
^IBA(364.7,981,0)="917^N^5^^^^N"
^IBA(364.7,981,1)="D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,9)"
^IBA(364.7,981,3,0)="^^4^4^2990902^^^"
^IBA(364.7,981,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,981,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,981,3,3,0)="adj quantity can be output on a single record for the same line and group"
^IBA(364.7,981,3,4,0)="code.  This extracts the second, eighth, etc onto separate records."
^IBA(364.7,982,0)="916^N^5^^^^N"
^IBA(364.7,982,1)="N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,20) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))"
^IBA(364.7,982,3,0)="^^4^4^2990902^^^^"
^IBA(364.7,982,3,1,0)="This data element assumes the existence of the IBXSAVE(""LCOB"") array that"
^IBA(364.7,982,3,2,0)="was previously extracted with COB data for specific line items.  Up to 6"
^IBA(364.7,982,3,3,0)="adj amts can be output on a single record for the same line and group"
^IBA(364.7,982,3,4,0)="code.  This extracts the sixth, twelveth, etc onto separate records."
^IBA(364.7,984,0)="884^N^100^^^^N"
^IBA(364.7,984,1)="K IBXSAVE"
^IBA(364.7,984,3,0)="^^1^1^2990901^"
^IBA(364.7,984,3,1,0)="Cleans up the IBXSAVE array.  No output."
^IBA(364.7,985,0)="983^N^5^^^^N"
^IBA(364.7,985,1)="N Z,Z0 K IBXDATA I $$COBN^IBCEF(IBXIEN)>1 F Z0=""INPT"",""OUTPT"",""RX"" S Z=0 F  S Z=$O(IBXSAVE(Z0,Z)) K:'Z IBXSAVE(Z0) Q:'Z  D CKCOBTST^IBCEU1(IBXIEN,.IBXSAVE,Z0,Z,+$G(IBRSBTST))"
^IBA(364.7,985,3,0)="^364.73^4^4^3180411^^^^"
^IBA(364.7,985,3,1,0)="The arrays IBXSAVE(""INPT""), IBXSAVE(""OUTPT"") and IBXSAVE(""RX"") are created"
^IBA(364.7,985,3,2,0)="when the line items on the bill are produced.  This field takes the data"
^IBA(364.7,985,3,3,0)="from these arrays and creates a new IBXSAVE(""LCOB"") array with just the COB"
^IBA(364.7,985,3,4,0)="data and deletes the original IBXSAVE arrays."
^IBA(364.7,987,0)="985^N^5^^^^N"
^IBA(364.7,987,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,0)),U,3)"
^IBA(364.7,988,0)="986^N^5^^^^N"
^IBA(364.7,988,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,0)),U,4)"
^IBA(364.7,989,0)="988^N^5^^^^N"
^IBA(364.7,989,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,989,3,0)="^364.73^1^1^3140425^^^^"
^IBA(364.7,989,3,1,0)="If there is no street address, don't use the rest of the address either."
^IBA(364.7,992,0)="993^N^5^^^^N"
^IBA(364.7,992,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,0)),U,3)"
^IBA(364.7,993,0)="991^N^5^^^^N"
^IBA(364.7,993,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,0)),U,3)"
^IBA(364.7,994,0)="992^N^5^^^^N"
^IBA(364.7,994,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,0)),U,4)"
^IBA(364.7,995,0)="994^N^5^^^^N"
^IBA(364.7,995,1)="S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,0)),U,4)"
^IBA(364.7,997,0)="996^N^146^^^^N"
^IBA(364.7,997,1)="S IBXDATA=$J("""",6)_IBXDATA"
^IBA(364.7,998,0)="995^N^145^^^^N"
^IBA(364.7,998,1)="N IBZ D F^IBCEF(""N-ROI INDICATOR"",""IBZ"") I IBZ S IBXDATA=""MODIFIED/RESTRICTED RELEASE ""_IBXDATA"
^IBA(364.7,1000,0)="999^N^55^^^^N"
^IBA(364.7,1001,0)="1000^N^55^^^^N"
^IBA(364.7,1001,1)="S IBXDATA=$S(IBXDATA]"""":""F8"",1:"""")"
^IBA(364.7,1002,0)="1001^N^282^^^^SR"
^IBA(364.7,1002,1)="S IBXDATA=$S('IBXDATA:"""",1:$TR($J(IBXDATA,10,2),"" ""))"
^IBA(364.7,1002,3,0)="^364.73^1^1^3000919^^^^"
^IBA(364.7,1002,3,1,0)="Format data in 10 characters with 2 decimals."
^IBA(364.7,1003,0)="1002^N^148^^^^N"
^IBA(364.7,1003,1)="I $$FT^IBCEF(IBXIEN)'=2,$$FT^IBCEF(IBXIEN)'=7 K IBXDATA"
^IBA(364.7,1003,3,0)="^364.73^1^1^3170901^^^"
^IBA(364.7,1003,3,1,0)="Claim must be a CMS-1500 claim for this to be transmitted."
^IBA(364.7,1005,0)="1004^N^5^^^^N"
^IBA(364.7,1005,1)="K IBXDATA"
^IBA(364.7,1006,0)="1005^N^234^^^^N"
^IBA(364.7,1006,1)="N A,Q,Z S Q=$G(IBXDATA) K IBXDATA I $$FT^IBCEF(IBXIEN)=2!($$FT^IBCEF(IBXIEN)=7) F Z=1,2 S A=$P(Q,U,Z) I $D(^DGCR(399,IBXIEN,""I""_(Z+1))) S IBXDATA(Z)=$S(A=1:""HM"",A=2:""C1"",A=3:""MB"",A=4:""MC"",A=5:""GP"",1:""OT"") D OIT^IBCEF12"
^IBA(364.7,1006,3,0)="^364.73^12^12^3171108^^^^"
^IBA(364.7,1006,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1006,3,2,0)="possible for the data element in the IBXDATA array.  If any 'other'"
^IBA(364.7,1006,3,3,0)="insurance company data is found, the data is formatted as the insurance type"
^IBA(364.7,1006,3,4,0)="of the insurance company in X12 format (see codes below or refer to the"
^IBA(364.7,1006,3,5,0)="837 V4010 field 2320/SBR/05 - professional guide)"
^IBA(364.7,1006,3,6,0)=" "
^IBA(364.7,1006,3,7,0)="     Type codes: = 1:HMO  (HM)"
^IBA(364.7,1006,3,8,0)="                   2:COMMERCIAL  (C1)"
^IBA(364.7,1006,3,9,0)="                   3:MEDICARE  (MB)"
^IBA(364.7,1006,3,10,0)="                   4:MEDICAID  (MC)"
^IBA(364.7,1006,3,11,0)="                   5:GROUP POLICY  (GP)"
^IBA(364.7,1006,3,12,0)="                   9:OTHER  (OT)"
^IBA(364.7,1007,0)="1006^N^5^^^^N"
^IBA(364.7,1007,1)="K IBXDATA N Z,IBZ S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P($G(IBXSAVE(""OUTPT"",Z,""AUX"")),U,8)'="""" S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""AUX""),U,8),IBZ=$P(IBXSAVE(""OUTPT"",Z,""AUX""),U,9) S:IBZ="""" IBZ=""  "" S IBXDATA(Z)=IBZ_IBXDATA(Z)"
^IBA(364.7,1007,3,0)="^^11^11^3060818^"
^IBA(364.7,1007,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1007,3,2,0)="possible for the data element in the previously extracted IBXSAVE array."
^IBA(364.7,1007,3,3,0)="Only output the data for service lines that have data."
^IBA(364.7,1007,3,4,0)=" "
^IBA(364.7,1007,3,5,0)="esg - 8/18/06 - IB patch 348 - new CMS 1500 claim form"
^IBA(364.7,1007,3,6,0)="If the service line comment qualifier doesn't exist, then add 2 blank "
^IBA(364.7,1007,3,7,0)="spaces in front of the service line comment.  If it does exist, then add "
^IBA(364.7,1007,3,8,0)="it to the front of the comment."
^IBA(364.7,1007,3,9,0)=" "
^IBA(364.7,1007,3,10,0)="Length was also reduced from 80 chars to 61 chars in the field since that "
^IBA(364.7,1007,3,11,0)="is all the Box 24 shaded area allows for the comment per line item."
^IBA(364.7,1008,0)="1007^N^5^^^^N"
^IBA(364.7,1008,1)="I $$FT^IBCEF(IBXIEN)'=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")),U,4)"
^IBA(364.7,1008,3,0)="^364.73^2^2^3170719^^"
^IBA(364.7,1008,3,1,0)="Credentials should be in the 4th piece of the ""NAME"" node of the "
^IBA(364.7,1008,3,2,0)="Rendering Provider IBXSAVE array."
^IBA(364.7,1009,0)="1008^N^113^^^^N"
^IBA(364.7,1009,1)="D BOX324^IBCEP8A(IBXIEN,.IBXSAVE,.IBXDATA)"
^IBA(364.7,1009,3,0)="^^3^3^3060116^"
^IBA(364.7,1009,3,1,0)="HCFA-1500 form, Box 32, Line 4."
^IBA(364.7,1009,3,2,0)="Display mammography certification number if it exists."
^IBA(364.7,1009,3,3,0)="Otherwise, display the facility tax ID for remote VA site or non-VA site."
^IBA(364.7,1010,0)="1009^N^233^^^^N"
^IBA(364.7,1010,1)="I $D(IBXDATA) K IBXSAVE(""DEFID"") S IBXDATA=$P(""HM^C1^MB^MC^GP^^^^OT"",U,+IBXDATA) S:IBXDATA=""C1"" IBXSAVE(""DEFID"")=1 S IBXDATA="""" S IBXDATA="""""
^IBA(364.7,1010,3,0)="^364.73^2^2^3030911^^^^"
^IBA(364.7,1010,3,1,0)="Translate to X12 code, default to Group Policy (GP) if data is missing."
^IBA(364.7,1010,3,2,0)="Refer to Professional 837 V4010 2000B/SBR/05 for codes. REMOVED DEFAULT ""GP"""
^IBA(364.7,1011,0)="1010^N^5^^^^N"
^IBA(364.7,1011,1)="K IBXDATA"
^IBA(364.7,1011,3,0)="^^1^1^2990901^^^^"
^IBA(364.7,1011,3,1,0)="This element is blank."
^IBA(364.7,1012,0)="1011^N^5^^^^N"
^IBA(364.7,1012,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")),$P(IBXSAVE(""OUTPT"",Z,""RX""),U,3)'="""" S IBXDATA(Z)=""N4"""
^IBA(364.7,1012,3,0)="^364.73^3^3^3040309^^^^"
^IBA(364.7,1012,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1012,3,2,0)="possible for the data element in the previously extract IBXSAVE array."
^IBA(364.7,1012,3,3,0)="Changes the internal code into a valid X12 837 code (N1,N2,N3,N4)."
^IBA(364.7,1013,0)="1012^N^5"
^IBA(364.7,1013,1)="N S K IBXDATA S S=19 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)"
^IBA(364.7,1013,3,0)="^^4^4^3030331^"
^IBA(364.7,1013,3,1,0)="This data element assumes the existence of the IBXSAVE array for each line"
^IBA(364.7,1013,3,2,0)="item (LCOB) that was previously extracted.  If the line has COB data"
^IBA(364.7,1013,3,3,0)="associated with it, output the procedure type code for each COB sequence"
^IBA(364.7,1013,3,4,0)="found for the line."
^IBA(364.7,1015,0)="1014^N^5^^^^N"
^IBA(364.7,1015,1)="S IBXDATA=""718.0"" I '$$PROD^XUPROD(1) S $E(IBXDATA,11)=""D"""
^IBA(364.7,1015,3,0)="^364.73^7^7^3220214^^^^"
^IBA(364.7,1015,3,1,0)="This field contains the VistA IB patch# that pertains to the"
^IBA(364.7,1015,3,2,0)="applicable changes in the claim map.  Austin uses this field to determine"
^IBA(364.7,1015,3,3,0)="which set of EDI claim maps to use when processing the EDI claims."
^IBA(364.7,1015,3,4,0)=""
^IBA(364.7,1015,3,5,0)="If the EDI claims are being transmitted from a non-production account,"
^IBA(364.7,1015,3,6,0)="then the ""D"" in the 11th position indicates to Austin that it is test"
^IBA(364.7,1015,3,7,0)="data."
^IBA(364.7,1018,0)="1301^N^5^^^^N"
^IBA(364.7,1018,1)="K IBXSAVE(""OSQ"") N Q,OK M Q=IBXSAVE(""PROVINF"",IBXIEN,""O"") S (C,Z)=0 F  S Z=$O(Q(Z)) Q:'Z  S OK=0 X ""N A F A=1:1 Q:'$D(Q(Z,5,A))  I $P(Q(Z,5,A),U,4)'="""""""" S OK=1 Q"" I OK S C=C+1,IBXDATA(C)=$G(Q(Z)),IBXSAVE(""OSQ"",Z)=C D:C>1 ID^IBCEF2(C,""OP8 "")"
^IBA(364.7,1018,3,0)="^364.73^9^9^3101109^^^^"
^IBA(364.7,1018,3,1,0)="Output if an ID exists for the 'other insurance'.  If more than 1 ins,"
^IBA(364.7,1018,3,2,0)="must output the record id.  Must kill the IBXSAVE(""OSQ"") array as this is"
^IBA(364.7,1018,3,3,0)="used to determine the current bill's sequence of other providers and which"
^IBA(364.7,1018,3,4,0)="IBXDATA array entry needs to be set for each.  IBXSAVE(""OSQ"") must be killed"
^IBA(364.7,1018,3,5,0)="at the last field for this record."
^IBA(364.7,1018,3,6,0)="IBXSAVE(""OSQ"",n)=m where n = the sequence for the other insurance (if bill"
^IBA(364.7,1018,3,7,0)="is primary, 1=secondary, 2=tertiary; if bill is secondary, 1=primary,"
^IBA(364.7,1018,3,8,0)="2=tertiary; if bill is tertiary, 1=primary, 2=secondary).  And where"
^IBA(364.7,1018,3,9,0)="m = the IBXDATA(m) entry to set for the 'n' COB sequence."
^IBA(364.7,1019,0)="1303^N^5^^^^N"
^IBA(364.7,1019,1)="K IBXDATA D PROVSEQ^IBCEF72(IBXIEN,.IBXSAVE,.IBXDATA,3,""OP1 "")"
^IBA(364.7,1019,3,0)="^364.73^9^9^3101108^^^^"
^IBA(364.7,1019,3,1,0)="Output if an ID exists for the 'other insurance'.  If more than 1"
^IBA(364.7,1019,3,2,0)="insurance, must output the record id.  The IBXSAVE(""OSQ"") array is "
^IBA(364.7,1019,3,3,0)="used to determine the current bill's sequence of other providers and"
^IBA(364.7,1019,3,4,0)="which IBXDATA array entry needs to be set for each.  This variable must"
^IBA(364.7,1019,3,5,0)="be killed at the last field for this record.  IBXSAVE(""OSQ"",n)=m where"
^IBA(364.7,1019,3,6,0)="n = the sequence for the other insurance (if bill is primary, 1=secondary,"
^IBA(364.7,1019,3,7,0)="2=tertiary; if bill is secondary, 1=primary, 2=tertiary; if bill is"
^IBA(364.7,1019,3,8,0)="tertiary, 1=primary, 2=secondary.  And where m=the IBXDATA(m) entry to"
^IBA(364.7,1019,3,9,0)="set for the 'n' COB sequence."
^IBA(364.7,1020,0)="1305^N^5^^^^N"
^IBA(364.7,1020,1)="D OTH^IBCEF76(IBXIEN,.IBXSAVE,.IBXDATA,($$FT^IBCEF(IBXIEN)=3),""OP3 "")"
^IBA(364.7,1020,3,0)="^^3^3^3060314^"
^IBA(364.7,1020,3,1,0)="OP3-2"
^IBA(364.7,1020,3,2,0)="Call the provider ID function only if the claim is a UB claim."
^IBA(364.7,1020,3,3,0)="Output the other payer sequence."
^IBA(364.7,1021,0)="1306^N^5^^^^N"
^IBA(364.7,1021,1)="K IBXDATA D PROVSEQ^IBCEF72(IBXIEN,.IBXSAVE,.IBXDATA,1,""OP4 "")"
^IBA(364.7,1021,3,0)="^364.73^9^9^3101108^^^^"
^IBA(364.7,1021,3,1,0)="Output if an ID exists for the 'other insurance'.  If more than 1 insurance"
^IBA(364.7,1021,3,2,0)="must output the record id.  Must kill the IBXSAVE(""OSQ"") array as this"
^IBA(364.7,1021,3,3,0)="is used to determine the current bill's sequence of other providers and"
^IBA(364.7,1021,3,4,0)="which IBXDATA array entry needs to be set for each.  This variable must"
^IBA(364.7,1021,3,5,0)="be killed at the last field for this record.  IBXSAVE(""OSQ"",n)=m where"
^IBA(364.7,1021,3,6,0)="n = the sequence for the other insurance (if bill is primary, 1=secondary,"
^IBA(364.7,1021,3,7,0)="2=tertiary; if bill is secondary, 1=primary, 2=tertiary; if bill is"
^IBA(364.7,1021,3,8,0)="tertiary, 1=primary, 2=secondary.  And where m=the IBXDATA(m) entry to"
^IBA(364.7,1021,3,9,0)="set for the 'n' COB sequence."
^IBA(364.7,1023,0)="1309^N^5^^^^N"
^IBA(364.7,1023,1)="D OTH^IBCEF76(IBXIEN,.IBXSAVE,.IBXDATA,($$FT^IBCEF(IBXIEN)=2!($$FT^IBCEF(IBXIEN)=7)),""OP7 "")"
^IBA(364.7,1023,3,0)="^364.73^3^3^3170522^^"
^IBA(364.7,1023,3,1,0)="OP7-2"
^IBA(364.7,1023,3,2,0)="other payer sequence.  Call provider ID function only when claim is a "
^IBA(364.7,1023,3,3,0)="1500 claim."
^IBA(364.7,1024,0)="1310^N^5^^^^N"
^IBA(364.7,1024,1)="K IBXSAVE(""OSQ"") N C,Z,Q,OK M Q=IBXSAVE(""PROVINF"",IBXIEN,""O"") S (C,Z)=0 F  S Z=$O(Q(Z)) Q:'Z  S OK=0 X ""N A F A=1:1 Q:'$D(Q(Z,9,A))  I $P(Q(Z,9,A),U,4)'="""""""" S OK=1 Q"" I OK S C=C+1,IBXDATA(C)=$G(Q(Z)),IBXSAVE(""OSQ"",Z)=C D:C>1 ID^IBCEF2(C,""OP9 "")"
^IBA(364.7,1024,3,0)="^364.73^9^9^3101109^^^^"
^IBA(364.7,1024,3,1,0)="Output if an ID exists for the 'other insurance'.  If more than 1 insurance"
^IBA(364.7,1024,3,2,0)="must output the record id.  Must kill the IBXSAVE(""OSQ"") array as this"
^IBA(364.7,1024,3,3,0)="is used to determine the current bill's sequence of other providers and"
^IBA(364.7,1024,3,4,0)="which IBXDATA array entry needs to be set for each.  This variable must"
^IBA(364.7,1024,3,5,0)="be killed at the last field for this record.  IBXSAVE(""OSQ"",n)=m where"
^IBA(364.7,1024,3,6,0)="n = the sequence for the other insurance (if bill is primary, 1=secondary,"
^IBA(364.7,1024,3,7,0)="2=tertiary; if bill is secondary, 1=primary, 2=tertiary; if bill is"
^IBA(364.7,1024,3,8,0)="tertiary, 1=primary, 2=secondary.  And where m=the IBXDATA(m) entry to"
^IBA(364.7,1024,3,9,0)="set for the 'n' COB sequence."
^IBA(364.7,1025,0)="1304^N^312^^^^N"
^IBA(364.7,1025,1)="K IBXSAVE(""OSQ"") N C,Z,Q,OK M Q=IBXSAVE(""PROVINF"",IBXIEN,""O"") S (C,Z)=0 F  S Z=$O(Q(Z)) Q:'Z  S OK=0 X ""N A F A=1:1 Q:'$D(Q(Z,2,A))  I $P(Q(Z,2,A),U,4)'="""""""" S OK=1 Q"" I OK S C=C+1,IBXDATA(C)=$G(Q(Z)),IBXSAVE(""OSQ"",Z)=C D:C>1 ID^IBCEF2(C,""OP2 "")"
^IBA(364.7,1025,3,0)="^^9^9^3030826^^^^"
^IBA(364.7,1025,3,1,0)="Output if an ID exists for the 'other insurance'.  If more than 1 insurance"
^IBA(364.7,1025,3,2,0)="must output the record id.  Must kill the IBXSAVE(""OSQ"") array as this"
^IBA(364.7,1025,3,3,0)="is used to determine the current bill's sequence of other providers and"
^IBA(364.7,1025,3,4,0)="which IBXDATA array entry needs to be set for each.  This variable must"
^IBA(364.7,1025,3,5,0)="be killed at the last field for this record.  IBXSAVE(""OSQ"",n)=m where"
^IBA(364.7,1025,3,6,0)="n = the sequence for the other insurance (if bill is primary, 1=secondary,"
^IBA(364.7,1025,3,7,0)="2=tertiary; if bill is secondary, 1=primary, 2=tertiary; if bill is"
^IBA(364.7,1025,3,8,0)="tertiary, 1=primary, 2=secondary.  And where m=the IBXDATA(m) entry to"
^IBA(364.7,1025,3,9,0)="set for the 'n' COB sequence."
^IBA(364.7,1026,0)="1084^N^5^^^^N"
^IBA(364.7,1026,1)="N Z0 K IBXDATA S Z0=0 F  S Z0=$O(IBXSAVE(Z0)) Q:'Z0  S IBXDATA(Z0)=$P(IBXSAVE(Z0),U,1)"
^IBA(364.7,1026,3,0)="^^3^3^3070529^"
^IBA(364.7,1026,3,1,0)="OI3-5"
^IBA(364.7,1026,3,2,0)="2330C/NM108"
^IBA(364.7,1026,3,3,0)="Other payer patient primary ID qualifier"
^IBA(364.7,1027,0)="1311^N^101^^^^N"
^IBA(364.7,1027,1)="N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI3 "")"
^IBA(364.7,1027,3,0)="^364.73^7^7^3030916^^^^"
^IBA(364.7,1027,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1027,3,2,0)="possible for the data element in the IBXDATA array.  The IBXSAVE(1) variable"
^IBA(364.7,1027,3,3,0)="holds the indicator of which insurance [(P)rimary/(S)econdary/(T)ertiary] is"
^IBA(364.7,1027,3,4,0)="currently responsible for the bill.  Using this data as a guide, the next"
^IBA(364.7,1027,3,5,0)="insurance for the primary is secondary, then tertiary.  For secondary, it's"
^IBA(364.7,1027,3,6,0)="primary then tertiary, and for tertiary, it's primary, then secondary. For"
^IBA(364.7,1027,3,7,0)="other than the first occurrence, the RECORD ID 'OI3 ' must be output."
^IBA(364.7,1028,0)="1312^N^101^^^^N"
^IBA(364.7,1028,1)="N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI4 "")"
^IBA(364.7,1028,3,0)="^364.73^7^7^3030929^^^^"
^IBA(364.7,1028,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1028,3,2,0)="possible for the data element in the IBXDATA array.  The IBXSAVE(1) variable"
^IBA(364.7,1028,3,3,0)="holds the indicator of which insurance [(P)rimary/(S)econdary/(T)ertiary] is"
^IBA(364.7,1028,3,4,0)="currently responsible for the bill.  Using this data as a guide, the next"
^IBA(364.7,1028,3,5,0)="insurance for the primary is secondary, then tertiary.  For secondary, it's"
^IBA(364.7,1028,3,6,0)="primary then tertiary, and for tertiary, it's primary, then secondary. For"
^IBA(364.7,1028,3,7,0)="other than the first occurrence, the RECORD ID 'OI4 ' must be output."
^IBA(364.7,1029,0)="1313^N^101^^^^N"
^IBA(364.7,1029,1)="N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI5 "")"
^IBA(364.7,1029,3,0)="^364.73^7^7^3040728^^^^"
^IBA(364.7,1029,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1029,3,2,0)="possible for the data element in the IBXDATA array.  The IBXSAVE(1) variable"
^IBA(364.7,1029,3,3,0)="holds the indicator of which insurance [(P)rimary/(S)econdary/(T)ertiary] is"
^IBA(364.7,1029,3,4,0)="currently responsible for the bill.  Using this data as a guide, the next"
^IBA(364.7,1029,3,5,0)="insurance for the primary is secondary, then tertiary.  For secondary, it's"
^IBA(364.7,1029,3,6,0)="primary then tertiary, and for tertiary, it's primary, then secondary. For"
^IBA(364.7,1029,3,7,0)="other than the first occurrence, the RECORD ID 'OI5 ' must be output."
^IBA(364.7,1030,0)="1314^N^101^^^^N"
^IBA(364.7,1030,1)="N IBZ,Z,Z0,Z1 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S Z1=0 F Z0=1:1:3 I $D(IBXSAVE(1,Z0)) S Z1=Z1+1,IBXDATA(Z1)=""QC"""
^IBA(364.7,1030,3,0)="^364.73^2^2^3030916^^^^"
^IBA(364.7,1030,3,1,0)="If the previous extract returned a value for ibxdata then the"
^IBA(364.7,1030,3,2,0)="QC modifier is needed here."
^IBA(364.7,1031,0)="1315^N^5"
^IBA(364.7,1031,1)="K IBXDATA"
^IBA(364.7,1031,3,0)="^^1^1^3070808^"
^IBA(364.7,1031,3,1,0)="This data is being moved to CI5[8] with eClaims Iteration III."
^IBA(364.7,1032,0)="1316^N^5^^^^N"
^IBA(364.7,1032,1)="K IBXDATA"
^IBA(364.7,1032,3,0)="^^1^1^3070808^"
^IBA(364.7,1032,3,1,0)="This data is being moved to CI5[9] with eClaims Iteration III."
^IBA(364.7,1033,0)="1317^N^5"
^IBA(364.7,1033,1)="S IBXDATA="""""
^IBA(364.7,1033,3,0)="^^3^3^3060222^"
^IBA(364.7,1033,3,1,0)="Prior to IB patch 320, this was the current insurance billing provider ID "
^IBA(364.7,1033,3,2,0)="qualifier (one of them).  All billing provider ID's and qualifiers are "
^IBA(364.7,1033,3,3,0)="now in the CI1A segment so this field has been removed."
^IBA(364.7,1034,0)="973^N^5^^^^N"
^IBA(364.7,1034,1)="S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,4,""ENTITY TYPE""))"
^IBA(364.7,1034,3,0)="^^2^2^3101105^"
^IBA(364.7,1034,3,1,0)="Get the attending provider id info.  If facility provider,"
^IBA(364.7,1034,3,2,0)="output 2 for non-person or 1 for person."
^IBA(364.7,1035,0)="1318^N^5"
^IBA(364.7,1035,1)="S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""ENTITY TYPE""))"
^IBA(364.7,1035,3,0)="^364.73^2^2^3101105^^"
^IBA(364.7,1035,3,1,0)="Get the referring provider id info.  If facility provider, output 2 for"
^IBA(364.7,1035,3,2,0)="non-person or 1 for person."
^IBA(364.7,1036,0)="1319^N^5"
^IBA(364.7,1036,1)="S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,2,""ENTITY TYPE""))"
^IBA(364.7,1036,3,0)="^364.73^2^2^3101105^^^"
^IBA(364.7,1036,3,1,0)="Get the operating provider id info.  If facility provider, output 2 for"
^IBA(364.7,1036,3,2,0)="non-person or 1 for person."
^IBA(364.7,1037,0)="990^N^5^^^^N"
^IBA(364.7,1037,1)="S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,9,""ENTITY TYPE""))"
^IBA(364.7,1037,3,0)="^364.73^2^2^3101105^^^"
^IBA(364.7,1037,3,1,0)="Get the other provider id info.  If facility provider, output 2 for"
^IBA(364.7,1037,3,2,0)="non-person or 1 for person."
^IBA(364.7,1038,0)="1320^N^5"
^IBA(364.7,1038,1)="K IBXSAVE N A,L,Z S L=0 F  S L=$O(^TMP(""IBXDATA"",$J,IBXREC,IBXPG,L)) Q:'L  S A=0 X ""S Z=2 F  S Z=$O(^TMP(""""IBXDATA"""",$J,IBXREC,IBXPG,L,Z)) Q:'Z  I $G(^(Z))'="""""""" S A=1 Q"" I 'A K ^TMP(""IBXDATA"",$J,IBXREC,IBXPG,L)"
^IBA(364.7,1038,3,0)="^364.73^2^2^3070925^^^"
^IBA(364.7,1038,3,1,0)="Check all the data elements on the record.  If all but the 1st and second"
^IBA(364.7,1038,3,2,0)="are null, force a null into the second element so no output occurs."
^IBA(364.7,1039,0)="1321^N^101^^^^N^0"
^IBA(364.7,1039,1)="K IBXDATA"
^IBA(364.7,1039,3,0)="^364.73^5^5^3101019^^^^"
^IBA(364.7,1039,3,1,0)="Get the current payer sequence from the claim. "
^IBA(364.7,1039,3,2,0)="Output ""P"" if primary, ""S"" if secondary or tertiary. "
^IBA(364.7,1039,3,3,0)=" "
^IBA(364.7,1039,3,4,0)="This field is a duplicate of CI2.2. It was decided to blank this field "
^IBA(364.7,1039,3,5,0)="out so as not to confuse the user.  8/24/10"
^IBA(364.7,1040,0)="1322^N^5^^^^N^0"
^IBA(364.7,1040,1)="S IBXDATA=$S($$COBN^IBCEF(IBXIEN)=1:"""",+$$MRASEC^IBCEF4(IBXIEN):""M"",1:""N"")"
^IBA(364.7,1040,3,0)="^^3^3^3050110^"
^IBA(364.7,1040,3,1,0)="If the bill payer is secondary to MEDICARE WNR with an MRA on file"
^IBA(364.7,1040,3,2,0)="output 'M'. For non-secondaries, output nothing. "
^IBA(364.7,1040,3,3,0)="For non-MRA secondaries, output 'N'. "
^IBA(364.7,1100,0)="1400^N^142^^^^N"
^IBA(364.7,1100,1)="N Z S Z=$J("""",+$P($G(^IBE(350.9,1,1)),U,27)),IBXDATA=Z_IBXDATA K ^UTILITY(""VADM"",$J),^UTILITY(""VAPA"",$J),^TMP(""IBXSAVE"",$J),IBXSAVE S ^TMP(""IB 1500 PRINT"",$J,IBXIEN)=1"
^IBA(364.7,1100,3,0)="^^6^6^3090330^"
^IBA(364.7,1100,3,1,0)="Move the text over to the column specified in the 1500 ADDRESS COLUMN"
^IBA(364.7,1100,3,2,0)="parameter (file 350.9, field 1.27).  Also initialize utility globals"
^IBA(364.7,1100,3,3,0)="and variables used in this form."
^IBA(364.7,1100,3,4,0)=" "
^IBA(364.7,1100,3,5,0)="3/30/09 - IB patch 400 - Set the claim into the scratch global which "
^IBA(364.7,1100,3,6,0)="indicates this claim is currently being printed as a CMS-1500 claim form."
^IBA(364.7,1101,0)="1401^N^280^^^^N"
^IBA(364.7,1101,1)="N Z S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA=""MEDICARE"" S Z="""",$P(Z,"" "",+$P($G(^IBE(350.9,1,1)),U,27)+1)="""" S IBXSAVE(""INDENT"")=Z S:IBXDATA'="""" IBXDATA=Z_IBXDATA"
^IBA(364.7,1101,3,0)="^^4^4^3060713^"
^IBA(364.7,1101,3,1,0)="If the 1500 ADDRESS COLUMN parameter exists, move the text over to"
^IBA(364.7,1101,3,2,0)="this column by adding spaces at the start of it.  Save the indent parameter"
^IBA(364.7,1101,3,3,0)="in IBXSAVE(""INDENT"") for future use.  If the current insurance is MEDICARE"
^IBA(364.7,1101,3,4,0)="WNR, output 'MEDICARE'."
^IBA(364.7,1102,0)="1402^N^192^^^^N"
^IBA(364.7,1102,1)="N Y,Z K IBXSAVE(""CADR"") I $O(IBXDATA(0)) S Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="""" $P(IBXSAVE(""CADR""),U,6)=Y F Z=1:1:5,7 S:$D(IBXDATA(Z)) $P(IBXSAVE(""CADR""),U,Z)=IBXDATA(Z) I Z=7 D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,,1)"
^IBA(364.7,1102,3,0)="^^5^5^3060713^"
^IBA(364.7,1102,3,1,0)="If the 1500 ADDRESS COLUMN parameter exists, move the text over to this"
^IBA(364.7,1102,3,2,0)="column by adding spaces at the start of it.  Format the address so each"
^IBA(364.7,1102,3,3,0)="street address occupies one line, then a line containing city followed by"
^IBA(364.7,1102,3,4,0)="a comma and space, the state abbreviation, a space and the zip code,"
^IBA(364.7,1102,3,5,0)="formatted for zip plus 4 if appropriate."
^IBA(364.7,1103,0)="1403^N^235^^^^N"
^IBA(364.7,1103,1)="N Z S Z=IBXDATA D F^IBCEF(""N-CURRENT INSURANCE CO TYPE"") S IBXDATA=$J("""",$S(Z=16!(Z=""MB"")!(Z=""MA""):0,Z=""TV""!(Z=""MC""):7,Z=""CH"":14,$$CHAMPVA^IBCEU3(IBXIEN)&($P($G(^DIC(36,+$$CURR^IBCEF2(IBXIEN),0)),U,2)=""Y""):23,IBXDATA=5:30,1:44))_""X"""
^IBA(364.7,1103,3,0)="^^7^7^3060721^"
^IBA(364.7,1103,3,1,0)="Check appropriate box for type of insurance. "
^IBA(364.7,1103,3,2,0)="CMS-1500, Box 1.  Possibility of checking one box.  FECA BLK LUNG is not "
^IBA(364.7,1103,3,3,0)="an available selection.  Choices are mainly extracted from the ELECTRONIC "
^IBA(364.7,1103,3,4,0)="PLAN TYPE field (#.15) in FILE# 355.3.  Also used for the Group Health "
^IBA(364.7,1103,3,5,0)="Plan box is the 3.09 field in file 36 (if the value is 5)."
^IBA(364.7,1103,3,6,0)=" "
^IBA(364.7,1103,3,7,0)="Code is basically setting IBXDATA=$J("""",[some offset amount])_""X""."
^IBA(364.7,1104,0)="1404^N^3^^^^N"
^IBA(364.7,1104,3,0)="^^1^1^3060714^"
^IBA(364.7,1104,3,1,0)="1500 form, Box 1a.  Current insurance insured's ID number."
^IBA(364.7,1105,0)="1405^N^65^^^^N"
^IBA(364.7,1105,3,0)="^^1^1^3060714^"
^IBA(364.7,1105,3,1,0)="1500 form, Box 2.  Patient Name"
^IBA(364.7,1106,0)="1406^N^66^^^^N"
^IBA(364.7,1106,1)="S IBXDATA=$$DATE^IBCF2(+IBXDATA,1)"
^IBA(364.7,1106,3,0)="^364.73^1^1^3060714^^^^"
^IBA(364.7,1106,3,1,0)="Format the date as MM DD YYYY."
^IBA(364.7,1107,0)="1407^N^67^^^^N"
^IBA(364.7,1107,1)="S IBXSAVE(""SEX"")=IBXDATA,IBXDATA=$S($G(IBXSAVE(""SEX""))=""M"":""X"",1:"""")"
^IBA(364.7,1107,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1107,3,1,0)="Save the value of patient sex in IBXSAVE variable for later use.  If the"
^IBA(364.7,1107,3,2,0)="value is 'M', this field's value is 'X'."
^IBA(364.7,1108,0)="1408^N^5^^^^N"
^IBA(364.7,1108,1)="S:$G(IBXSAVE(""SEX""))'=""M"" IBXDATA=""X"" K IBXSAVE(""SEX"")"
^IBA(364.7,1108,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1108,3,1,0)="This field relies on the existence of variable IBXSAVE(""SEX"") previously"
^IBA(364.7,1108,3,2,0)="extracted.  If its value is not 'M', assume the sex is female and this"
^IBA(364.7,1108,3,3,0)="field's value will be 'X'."
^IBA(364.7,1109,0)="1409^N^6^^^^N"
^IBA(364.7,1109,1)="S IBXSAVE(""IDEM"")=IBXDATA"
^IBA(364.7,1109,3,0)="^364.73^1^1^3060714^^"
^IBA(364.7,1109,3,1,0)="Save the insured's demographic data in IBXSAVE(""IDEM"")."
^IBA(364.7,1110,0)="1410^N^2^^^^N"
^IBA(364.7,1110,3,0)="^^6^6^3060823^"
^IBA(364.7,1110,3,1,0)="If the current insured is the patient, the word 'SAME' is printed instead"
^IBA(364.7,1110,3,2,0)="of repeating the name."
^IBA(364.7,1110,3,3,0)=" "
^IBA(364.7,1110,3,4,0)="esg - 8/23/06 - IB*2*348 - Requirement 3.2.1.12 - No longer print the "
^IBA(364.7,1110,3,5,0)="word ""SAME"" in Box 4 ever.  We have to print the name of the insured in "
^IBA(364.7,1110,3,6,0)="all cases."
^IBA(364.7,1111,0)="1411^N^157^^^^N"
^IBA(364.7,1111,1)="N Z F Z=1:1:3 S IBXDATA=IBXDATA_$S(Z>1:"" "",1:"""")_$G(^UTILITY(""VAPA"",$J,Z))"
^IBA(364.7,1111,3,0)="^364.73^1^1^3060714^^"
^IBA(364.7,1111,3,1,0)="Concatenate all 3 lines of the address together, separated by a space."
^IBA(364.7,1112,0)="1412^N^25^^^^N"
^IBA(364.7,1112,1)="S IBXSAVE(""PREL"")=+IBXDATA,IBXDATA=$S(IBXSAVE(""PREL"")=1:""X"",1:"""")"
^IBA(364.7,1112,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1112,3,1,0)="Save the value of patient sex in IBXSAVE variable for later use.  If"
^IBA(364.7,1112,3,2,0)="the value is '1' (patient), this field's value is 'X'."
^IBA(364.7,1113,0)="1413^N^5^^^^N"
^IBA(364.7,1113,1)="I $G(IBXSAVE(""PREL""))=2 S IBXDATA=""X"""
^IBA(364.7,1113,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1113,3,1,0)="This field relies on the existence of variable IBXSAVE(""PREL"")"
^IBA(364.7,1113,3,2,0)="previously extracted.  If its value is '2' (spouse), this field's value"
^IBA(364.7,1113,3,3,0)="will be 'X'."
^IBA(364.7,1114,0)="1414^N^5^^^^N"
^IBA(364.7,1114,1)="I $G(IBXSAVE(""PREL""))=3 S IBXDATA=""X"""
^IBA(364.7,1114,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1114,3,1,0)="This field relies on the existence of variable IBXSAVE(""PREL"") previously"
^IBA(364.7,1114,3,2,0)="extracted.  If its value is '3' (child), this field's value will be 'X'."
^IBA(364.7,1115,0)="1415^N^5^^^^N"
^IBA(364.7,1115,1)="S:$G(IBXSAVE(""PREL""))=""""!(""123""'[$G(IBXSAVE(""PREL""))) IBXDATA=""X"" K IBXSAVE(""PREL"")"
^IBA(364.7,1115,3,0)="^364.73^3^3^3060714^^^"
^IBA(364.7,1115,3,1,0)="This field relies on the existence of variable IBXSAVE(""PREL"") previously"
^IBA(364.7,1115,3,2,0)="extracted.  If its value is not a '1', '2', or '3', assume it is other and"
^IBA(364.7,1115,3,3,0)="this field's value will be 'X'."
^IBA(364.7,1116,0)="1416^N^4^^^^N"
^IBA(364.7,1116,1)="S IBXSAVE(""IADR"")=IBXDATA"
^IBA(364.7,1116,3,0)="^^5^5^3060823^"
^IBA(364.7,1116,3,1,0)="If patient is different than the insured, then save the address "
^IBA(364.7,1116,3,2,0)="information."
^IBA(364.7,1116,3,3,0)=" "
^IBA(364.7,1116,3,4,0)="esg - 8/23/06 - IB*2*348 - Requirement 3.2.1.8 - Save the address "
^IBA(364.7,1116,3,5,0)="information in all cases.  Remove printing of the word ""SAME"" in Box 7."
^IBA(364.7,1117,0)="1417^N^5^^^^N"
^IBA(364.7,1117,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U)"
^IBA(364.7,1117,3,0)="^^1^1^3060714^"
^IBA(364.7,1117,3,1,0)="1500 form, Box 7 - Insured's address"
^IBA(364.7,1118,0)="1418^N^61^^^^N"
^IBA(364.7,1119,0)="1419^N^62^^^^N"
^IBA(364.7,1119,1)="S IBXDATA=$$STATE^IBCEFG1(IBXDATA)"
^IBA(364.7,1119,3,0)="^364.73^1^1^3060714^^^"
^IBA(364.7,1119,3,1,0)="Output the state abbreviation."
^IBA(364.7,1120,0)="1420^N^5^^^^N"
^IBA(364.7,1120,1)="S IBXDATA="""""
^IBA(364.7,1120,3,0)="^364.73^4^4^3140709^^^^"
^IBA(364.7,1120,3,1,0)="This is no longer used."
^IBA(364.7,1120,3,2,0)=" "
^IBA(364.7,1120,3,3,0)="Save the value of marital status in IBXSAVE variable for later use.  If"
^IBA(364.7,1120,3,4,0)="the value is 'I' (NEVER MARRIED), this field's value is 'X'."
^IBA(364.7,1121,0)="1421^N^5^^^^N"
^IBA(364.7,1121,1)="S IBXDATA="""""
^IBA(364.7,1121,3,0)="^364.73^5^5^3140709^^^"
^IBA(364.7,1121,3,1,0)="This field is no longer used."
^IBA(364.7,1121,3,2,0)=" "
^IBA(364.7,1121,3,3,0)="This field relies on the existence of variable IBXSAVE(""MSTAT"")"
^IBA(364.7,1121,3,4,0)="previously extracted. If its value is 'M' (MARRIED), this field's value"
^IBA(364.7,1121,3,5,0)="will be 'X'."
^IBA(364.7,1122,0)="1422^N^5^^^^N"
^IBA(364.7,1122,1)="S IBXDATA="""""
^IBA(364.7,1122,3,0)="^364.73^5^5^3140709^^^^"
^IBA(364.7,1122,3,1,0)="This field is no longer used."
^IBA(364.7,1122,3,2,0)=" "
^IBA(364.7,1122,3,3,0)="This field relies on the existence of variable IBXSAVE(""MSTAT"") previously"
^IBA(364.7,1122,3,4,0)="extracted.  If its value is not a 'M', or 'I', assume it must be other and"
^IBA(364.7,1122,3,5,0)="this field's value will be 'X'."
^IBA(364.7,1123,0)="1423^N^5^^^^N"
^IBA(364.7,1123,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,2)"
^IBA(364.7,1123,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1123,3,1,0)="This field relies on the existence of variable IBXSAVE(""IADR"") previously"
^IBA(364.7,1123,3,2,0)="extracted."
^IBA(364.7,1124,0)="1424^N^5^^^^N"
^IBA(364.7,1124,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,3)"
^IBA(364.7,1124,3,0)="^364.73^2^2^3060714^^^"
^IBA(364.7,1124,3,1,0)="This field relies on the existence of variable IBXSAVE(""IADR"") previously"
^IBA(364.7,1124,3,2,0)="extracted.  Output the state abbreviation."
^IBA(364.7,1125,0)="1425^N^63"
^IBA(364.7,1125,1)="N Y S Y=IBXDATA D ZIPOUT^VAFADDR S IBXDATA=Y"
^IBA(364.7,1125,3,0)="^364.73^1^1^3060714^^"
^IBA(364.7,1125,3,1,0)="Format zip code as zip plus 4 if needed."
^IBA(364.7,1126,0)="1426^N^64^^^^N"
^IBA(364.7,1126,1)="N IBZ S IBZ=$$NOPUNCT^IBCEF(IBXDATA,1) S IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_"" ""_$E(IBZ,4,6)_""-""_$E(IBZ,7,10)),1:$J(IBXDATA,14))"
^IBA(364.7,1126,3,0)="^^6^6^3060721^"
^IBA(364.7,1126,3,1,0)="CMS-1500, Box 5 patient telephone with area code."
^IBA(364.7,1126,3,2,0)="Strip out all punctuation.  If you have exactly 10 numbers left, then "
^IBA(364.7,1126,3,3,0)="format as nnn nnn-nnnn because the form already has the area code "
^IBA(364.7,1126,3,4,0)="parenthesis pre-printed."
^IBA(364.7,1126,3,5,0)="If you have something other than 10 numbers, then just display the raw "
^IBA(364.7,1126,3,6,0)="data right justified so as to not overwrite those pre-printed parenthesis."
^IBA(364.7,1127,0)="1427^N^5^^^^N"
^IBA(364.7,1127,1)="S IBXDATA="""""
^IBA(364.7,1127,3,0)="^364.73^5^5^3140709^^^"
^IBA(364.7,1127,3,1,0)="This field is no longer used."
^IBA(364.7,1127,3,2,0)=" "
^IBA(364.7,1127,3,3,0)="If the value of this field is '1' (EMPLOYED FULL TIME), '2' (EMPLOYED"
^IBA(364.7,1127,3,4,0)="PART TIME), '4' (SELF EMPLOYED), or '6' (FULL TIME MILITARY), assume"
^IBA(364.7,1127,3,5,0)="employed and output this field as 'X'."
^IBA(364.7,1128,0)="1428^N^5^^^^N"
^IBA(364.7,1128,1)="S IBXDATA=$P($G(IBXSAVE(""IADR"")),U,4)"
^IBA(364.7,1128,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1128,3,1,0)="This field relies on the existence of variable IBXSAVE(""IADR"") previously"
^IBA(364.7,1128,3,2,0)="extracted.  Output the insured's zip code."
^IBA(364.7,1129,0)="1429^N^5^^^^N"
^IBA(364.7,1129,1)="S IBXDATA=$P($G(IBXSAVE(""IDEM"")),U,3) I IBXDATA'="""" N IBZ S IBZ=$$NOPUNCT^IBCEF(IBXDATA,1),IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_"" ""_$E(IBZ,4,6)_""-""_$E(IBZ,7,10)),1:$J(IBXDATA,14))"
^IBA(364.7,1129,3,0)="^^2^2^3060823^"
^IBA(364.7,1129,3,1,0)="This field relies on the existence of the variable IBXSAVE(""IDEM"")"
^IBA(364.7,1129,3,2,0)="previously extracted."
^IBA(364.7,1130,0)="1430^N^32^^^^N"
^IBA(364.7,1130,1)="N IBZ M IBZ=IBXDATA K IBXDATA S IBXDATA=$G(IBZ(1))"
^IBA(364.7,1131,0)="1431^N^27^^^^N"
^IBA(364.7,1131,1)="N Z S Z=$$WNRBILL^IBEFUNC(IBXIEN,+$$COBN^IBCEF(IBXIEN)) S:Z IBXDATA=""NONE"" Q:Z  I $$POLICY^IBCEF(IBXIEN,2,$P($G(^DGCR(399,IBXIEN,0)),U,21))="""" S IBXDATA="""""
^IBA(364.7,1131,3,0)="^364.73^1^1^3060714^^^^"
^IBA(364.7,1131,3,1,0)="Only output the group number if the SUBSCRIBER ID field is non-null."
^IBA(364.7,1132,0)="1432^N^33^^^^N"
^IBA(364.7,1132,1)="N IBZ M IBZ=IBXDATA K IBXDATA,IBXSAVE(""OINUM"") D:$G(IBZ(1))="""" F^IBCEF(""N-OTH INSURED ID"",""IBZ"") S:$E($$OTHINS1^IBCEF2(IBXIEN)) (IBXDATA,IBXSAVE(""OINUM""))=$G(IBZ(1))"
^IBA(364.7,1132,3,0)="^364.73^6^6^3060714^^^^"
^IBA(364.7,1132,3,1,0)="Save the value of other insured group number in IBXSAVE variable for later"
^IBA(364.7,1132,3,2,0)="use.  Use the first occurrence of other insured group number for this"
^IBA(364.7,1132,3,3,0)="field's value.  If the other insurance is a medigap (MEDICARE WNR is"
^IBA(364.7,1132,3,4,0)="before this insurance on the bill), the group # is preceeded by 'MG'"
^IBA(364.7,1132,3,5,0)="on output.  If no other insured group number is found, use the other"
^IBA(364.7,1132,3,6,0)="insured's policy id number instead."
^IBA(364.7,1133,0)="1433^N^87^^^^N"
^IBA(364.7,1133,1)="S IBXSAVE(""CONDE"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,1133,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1133,3,1,0)="Save the value of condition related to employment in IBXSAVE variable for"
^IBA(364.7,1133,3,2,0)="later use.  If this value is 1 (yes), this field's value is 'X'."
^IBA(364.7,1134,0)="1434^N^5^^^^N"
^IBA(364.7,1134,1)="S:'$G(IBXSAVE(""CONDE"")) IBXDATA=""X"" K IBXSAVE(""CONDE"")"
^IBA(364.7,1134,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1134,3,1,0)="This field relies on the existence of the IBXSAVE(""CONDE"") variable"
^IBA(364.7,1134,3,2,0)="previously extracted.  If this variable's value is 0 or null, this assumes"
^IBA(364.7,1134,3,3,0)="condition is not related and this field's value is 'X'."
^IBA(364.7,1135,0)="1435^N^5^^^^N"
^IBA(364.7,1135,1)="S IBXDATA=$$DATE^IBCF2($P($G(IBXSAVE(""IDEM"")),U),1)"
^IBA(364.7,1135,3,0)="^364.73^2^2^3060714^^^^"
^IBA(364.7,1135,3,1,0)="This field relies on the existence of the variable IBXSAVE(""IDEM"")"
^IBA(364.7,1135,3,2,0)="previously extracted.  Format the birthdate as MM DD YYYY."
^IBA(364.7,1136,0)="1436^N^5^^^^N"
^IBA(364.7,1136,1)="S:$P($G(IBXSAVE(""IDEM"")),U,2)=""M"" IBXDATA=""X"""
^IBA(364.7,1136,3,0)="^364.73^3^3^3060714^^^"
^IBA(364.7,1136,3,1,0)="This field relies on the existence of the IBXSAVE(""IDEM"") variable"
^IBA(364.7,1136,3,2,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,1136,3,3,0)="is an 'M', this field's value is 'X'."
^IBA(364.7,1137,0)="1437^N^5^^^^N"
^IBA(364.7,1137,1)="S:""M""'[$P($G(IBXSAVE(""IDEM"")),U,2) IBXDATA=""X"""
^IBA(364.7,1137,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1137,3,1,0)="This field relies on the existence of the IBXSAVE(""IDEM"") variable"
^IBA(364.7,1137,3,2,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,1137,3,3,0)="is not an 'M', this field's value is 'X'."
^IBA(364.7,1138,0)="1438^N^5^^^^N"
^IBA(364.7,1138,1)="S IBXDATA="""""
^IBA(364.7,1138,3,0)="^^4^4^3140115^"
^IBA(364.7,1138,3,1,0)="This is no longer used."
^IBA(364.7,1138,3,2,0)=" "
^IBA(364.7,1138,3,3,0)="Save the other insured's demographic data in IBXSAVE for later use. Format"
^IBA(364.7,1138,3,4,0)="the birthdate as MM DD YYYY."
^IBA(364.7,1139,0)="1439^N^5^^^^N"
^IBA(364.7,1139,1)="S IBXDATA="""""
^IBA(364.7,1139,3,0)="^^6^6^3140115^"
^IBA(364.7,1139,3,1,0)="This is no longer used."
^IBA(364.7,1139,3,2,0)=" "
^IBA(364.7,1139,3,3,0)=" "
^IBA(364.7,1139,3,4,0)="This field relies on the existence of the IBXSAVE(""OIDEM"") variable"
^IBA(364.7,1139,3,5,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,1139,3,6,0)="is an 'M', this field's value is 'X'."
^IBA(364.7,1140,0)="1440^N^5^^^^N"
^IBA(364.7,1140,1)="S IBXDATA="""""
^IBA(364.7,1140,3,0)="^364.73^5^5^3140115^^"
^IBA(364.7,1140,3,1,0)="This field is no longer used."
^IBA(364.7,1140,3,2,0)=" "
^IBA(364.7,1140,3,3,0)="This field relies on the existence of the IBXSAVE(""OIDEM"") variable"
^IBA(364.7,1140,3,4,0)="previously extracted.  The second '^' piece contains the sex and if this"
^IBA(364.7,1140,3,5,0)="is not a null and is not an 'M', this field's value is 'X'."
^IBA(364.7,1141,0)="1441^N^88^^^^N"
^IBA(364.7,1141,1)="S IBXSAVE(""CONDA"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,1141,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1141,3,1,0)="Save the value of condition related to auto accident in IBXSAVE variable"
^IBA(364.7,1141,3,2,0)="for later use.  If this value is 1 (yes), this field's value is 'X'."
^IBA(364.7,1142,0)="1442^N^5^^^^N"
^IBA(364.7,1142,1)="S:'$G(IBXSAVE(""CONDA"")) IBXDATA=""X"""
^IBA(364.7,1142,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1142,3,1,0)="This field relies on the existence of the IBXSAVE(""CONDA"") variable"
^IBA(364.7,1142,3,2,0)="previously extracted.  If this variable's value is 0 or null, this assumes"
^IBA(364.7,1142,3,3,0)="condition is not related and this field's value is 'X'."
^IBA(364.7,1143,0)="1443^N^159^^^^N"
^IBA(364.7,1143,1)="S IBXDATA=$$STATE^IBCEFG1(IBXDATA) K IBXSAVE(""CONDA"")"
^IBA(364.7,1143,3,0)="^364.73^1^1^3060714^^^^"
^IBA(364.7,1143,3,1,0)="Output state abbreviation."
^IBA(364.7,1144,0)="1444^N^110^^^^N"
^IBA(364.7,1144,1)="S IBXDATA=$P(IBXDATA,U)"
^IBA(364.7,1144,3,0)="^364.73^1^1^3140115^^"
^IBA(364.7,1144,3,1,0)="This is the Property/Casualty number."
^IBA(364.7,1145,0)="1445^N^5^^^^N"
^IBA(364.7,1145,1)="S IBXDATA="""""
^IBA(364.7,1145,3,0)="^^1^1^3140711^"
^IBA(364.7,1145,3,1,0)="9C is now a reserved empty box.  "
^IBA(364.7,1146,0)="1446^N^89^^^^N"
^IBA(364.7,1146,1)="S IBXSAVE(""CONDOA"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,1146,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1146,3,1,0)="Save the value of condition related to other accident in IBXSAVE variable"
^IBA(364.7,1146,3,2,0)="for later use.  If this value is 1 (yes), this field's value is 'X'."
^IBA(364.7,1147,0)="1447^N^5^^^^N"
^IBA(364.7,1147,1)="S:'$G(IBXSAVE(""CONDOA"")) IBXDATA=""X"" K IBXSAVE(""CONDOA"")"
^IBA(364.7,1147,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1147,3,1,0)="This field relies on the existence of the IBXSAVE(""CONDOA"") variable"
^IBA(364.7,1147,3,2,0)="previously extracted.  If this variable's value is 0 or null, this assumes"
^IBA(364.7,1147,3,3,0)="condition is not related and this field's value is 'X'."
^IBA(364.7,1148,0)="1448^N^26^^^^N"
^IBA(364.7,1149,0)="1449^N^31^^^^N"
^IBA(364.7,1149,1)="K IBXSAVE(""OINUM"") S IBXDATA="""" I $O(IBXDATA("""")) N C,Z,Z0 S C=$$OTHINS1^IBCEF2(IBXIEN),Z=$G(IBXDATA(1)) K IBXDATA I $E(C) S IBXDATA=$S($$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBXIEN,""I""_$E(C)))):""MEDICARE"",$P(Z,U,2):$P($G(^DIC(36,+Z,0)),U),1:$P(Z,U))"
^IBA(364.7,1149,3,0)="^364.73^6^6^3060714^^^^"
^IBA(364.7,1149,3,1,0)="Use the first occurrence of other insured group name.  The first '^' piece"
^IBA(364.7,1149,3,2,0)="of this value has either the group name or the insurance company pointer."
^IBA(364.7,1149,3,3,0)="If the second '^' piece is a 1, the insurance company name is extracted"
^IBA(364.7,1149,3,4,0)="using the insurance company pointer in the first '^' piece, otherwise, the"
^IBA(364.7,1149,3,5,0)="name in the first '^' piece is output."
^IBA(364.7,1149,3,6,0)="MEDICARE WNR always outputs MEDICARE."
^IBA(364.7,1150,0)="1450^N^122^^^^N"
^IBA(364.7,1151,0)="1451^N^144^^^^N"
^IBA(364.7,1151,1)="S IBXSAVE(""OI"")=IBXDATA,IBXDATA=$S(IBXDATA:""X"",1:"""")"
^IBA(364.7,1151,3,0)="^364.73^2^2^3060714^^"
^IBA(364.7,1151,3,1,0)="Save the other insurance exists data in the IBXSAVE variable for later"
^IBA(364.7,1151,3,2,0)="use.  If the value is 1, output an 'X'."
^IBA(364.7,1152,0)="1452^N^5^^^^N"
^IBA(364.7,1152,1)="S:'$G(IBXSAVE(""OI"")) IBXDATA=""X"" K IBXSAVE(""OI"")"
^IBA(364.7,1152,3,0)="^364.73^3^3^3060714^^"
^IBA(364.7,1152,3,1,0)="This field relies on the existence of the IBXSAVE(""OI"") variable"
^IBA(364.7,1152,3,2,0)="previously extracted.  If the value of this data element is null or 0,"
^IBA(364.7,1152,3,3,0)="output an 'X' in this field"
^IBA(364.7,1153,0)="1453^N^145^^^^N"
^IBA(364.7,1153,1)="N IBZ D F^IBCEF(""N-ROI INDICATOR"",""IBZ"") S:IBZ IBXDATA=""MODIFIED/RESTRICTED RELEASE ""_IBXDATA S:$L(IBXDATA)<35 IBXDATA=$J("""",3)_IBXDATA"
^IBA(364.7,1154,0)="1454^N^146^^^^N"
^IBA(364.7,1154,1)="S IBXDATA=$J("""",3)_IBXDATA"
^IBA(364.7,1155,0)="1455^N^65^^^^N"
^IBA(364.7,1155,1)="N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_"" ""_$S($P(Z,U,3)'="""":$E($P(Z,U,3))_"" "",1:"""")_$P(Z,U)"
^IBA(364.7,1155,3,0)="^364.73^1^1^3060717^^"
^IBA(364.7,1155,3,1,0)="Output the patient's name as the signature first middle last name."
^IBA(364.7,1156,0)="1456^N^71^^^^N"
^IBA(364.7,1156,1)="S IBXDATA=$$FMTE^XLFDT(IBXDATA,""5D"")"
^IBA(364.7,1156,3,0)="^364.73^1^1^3060717^^^^"
^IBA(364.7,1156,3,1,0)="Format data element in MM/DD/CCYY date format."
^IBA(364.7,1157,0)="1457^N^2^^^^N"
^IBA(364.7,1157,1)="N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_"" ""_$S($P(Z,U,3)'="""":$E($P(Z,U,3))_"" "",1:"""")_$P(Z,U)"
^IBA(364.7,1157,3,0)="^364.73^2^2^3060717^^^"
^IBA(364.7,1157,3,1,0)="Output the current insured's name as the signature first name, middle name"
^IBA(364.7,1157,3,2,0)="last name"
^IBA(364.7,1158,0)="1458^N^140^^^^N"
^IBA(364.7,1158,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,1158,3,0)="^364.73^1^1^3140407^^^^"
^IBA(364.7,1158,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,1159,0)="1459^N^141^^^^N"
^IBA(364.7,1159,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,1159,3,0)="^364.73^1^1^3140407^^^^"
^IBA(364.7,1159,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,1160,0)="1460^N^93^^^^N"
^IBA(364.7,1160,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,1160,3,0)="^364.73^1^1^3060717^^^^"
^IBA(364.7,1160,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,1161,0)="1461^N^94^^^^N"
^IBA(364.7,1161,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,1161,3,0)="^364.73^1^1^3060717^^^^"
^IBA(364.7,1161,3,1,0)="Format date as MM DD YYYY."
^IBA(364.7,1162,0)="1462^N^5^^^^N"
^IBA(364.7,1162,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,1,""B1"") I IBXDATA="""" S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,5,""B1"")"
^IBA(364.7,1162,3,0)="^364.73^2^2^3140213^^"
^IBA(364.7,1162,3,1,0)="cms-1500, box 17a/1, 2 character qualifier for the Referring provider "
^IBA(364.7,1162,3,2,0)="other ID (non-NPI ID)."
^IBA(364.7,1163,0)="1463^N^5^^^^N"
^IBA(364.7,1163,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,1,""B2"") I IBXDATA="""" S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,5,""B2"")"
^IBA(364.7,1163,3,0)="^364.73^2^2^3140213^^"
^IBA(364.7,1163,3,1,0)="CMS-1500, Box 17a/2, Referring Provider other ID number (non NPI ID "
^IBA(364.7,1163,3,2,0)="number)."
^IBA(364.7,1164,0)="1464^N^364^^^^N"
^IBA(364.7,1165,0)="1465^N^5^^^^N"
^IBA(364.7,1165,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,1,""B3"") I IBXDATA="""" S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,5,""B3"")"
^IBA(364.7,1165,3,0)="^364.73^1^1^3140213^^^"
^IBA(364.7,1165,3,1,0)="NPI# of Referring Physician"
^IBA(364.7,1166,0)="1466^N^147^^^^N"
^IBA(364.7,1166,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,1166,3,0)="^364.73^1^1^3060717^^^^"
^IBA(364.7,1166,3,1,0)="'From' date is the first '^' piece of this data.  Format date as MM DD YYYY."
^IBA(364.7,1167,0)="1467^N^160^^^^N"
^IBA(364.7,1167,1)="D:'IBXDATA&'$$INPAT^IBCEF(IBXIEN,1) F^IBCEF(""N-STATEMENT COVERS TO DATE"",,,IBXIEN) S IBXDATA=$$DATE^IBCF2(IBXDATA,1)"
^IBA(364.7,1167,3,0)="^364.73^2^2^3060717^^^^"
^IBA(364.7,1167,3,1,0)="If there is no date in IBXDATA, set it to Statement Covers To Date then "
^IBA(364.7,1167,3,2,0)="format the resulted date."
^IBA(364.7,1168,0)="1468^N^148"
^IBA(364.7,1168,1)="S IBXSAVE(""BOX19"")=$S($L(IBXDATA)<49:$J("""",48),$L(IBXDATA)<84:$J("""",25),1:"""")_IBXDATA,IBXDATA=$E(IBXSAVE(""BOX19""),1,48)"
^IBA(364.7,1168,3,0)="^364.73^1^1^3140213^^^^"
^IBA(364.7,1168,3,1,0)="This field holds the 1st through 48th characters of the box's data."
^IBA(364.7,1169,0)="1469^N^5^^^^N"
^IBA(364.7,1169,1)="D:'$D(IBXSAVE(""BOX19"")) F^IBCEF(""N-HCFA 1500 BOX 19"",,,IBXIEN) S IBXDATA=$E($G(IBXSAVE(""BOX19"")),49,96) K IBXSAVE(""BOX19"")"
^IBA(364.7,1169,3,0)="^364.73^2^2^3140217^^^^"
^IBA(364.7,1169,3,1,0)="If the array that holds the entire box 19 data is not defined, extract it."
^IBA(364.7,1169,3,2,0)="This field will hold the 49th through 96th characters of the box's data."
^IBA(364.7,1170,0)="1470^N^5^^^^N"
^IBA(364.7,1170,1)="I $P($G(^DGCR(399,IBXIEN,""U2"")),U,10) S IBXDATA=""X"""
^IBA(364.7,1170,3,0)="^^4^4^3070604^"
^IBA(364.7,1170,3,1,0)="cms-1500, box 20 Outside Lab=YES"
^IBA(364.7,1170,3,2,0)="Changed with IB patch 371"
^IBA(364.7,1170,3,3,0)="If there is an outside facility on the claim, then an ""X"" should display "
^IBA(364.7,1170,3,4,0)="in the YES box."
^IBA(364.7,1171,0)="1471^N^20^^^^N"
^IBA(364.7,1171,1)="S IBXDATA=$S('IBXDATA:"""",1:$$DOL^IBCEF77(IBXDATA,9)) I '$P($G(^DGCR(399,IBXIEN,""U2"")),U,10) K IBXDATA"
^IBA(364.7,1171,3,0)="^^4^4^3070606^"
^IBA(364.7,1171,3,1,0)="Format the amount in 9 characters with 2 decimals."
^IBA(364.7,1171,3,2,0)=" "
^IBA(364.7,1171,3,3,0)="If there is not an Outside facility on the claim, then NO gets the ""X"" "
^IBA(364.7,1171,3,4,0)="and the charges field will be blank."
^IBA(364.7,1172,0)="1472^N^5^^^^N"
^IBA(364.7,1172,1)="K IBXDATA"
^IBA(364.7,1172,3,0)="^^2^2^3070604^"
^IBA(364.7,1172,3,1,0)="The 1500 instruction manual says that this area should always be left "
^IBA(364.7,1172,3,2,0)="blank."
^IBA(364.7,1173,0)="1473^N^86^^^^N"
^IBA(364.7,1173,1)="N IB M IB=IBXDATA K IBXDATA D DXSV^IBCEF31(.IB,.IBXSAVE) S IBXDATA=$P($$ICD9^IBACSV(+$G(IBXSAVE(""DX"",1)),$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(1,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1173,3,0)="^364.73^4^4^3060717^^^^"
^IBA(364.7,1173,3,1,0)="Save the diagnoses in the IBXSAVE array for later use. Output the"
^IBA(364.7,1173,3,2,0)="diagnosis code for the first diagnosis. Check for any diagnosis codes"
^IBA(364.7,1173,3,3,0)="that should display in the first position on pages subsequent to page 1"
^IBA(364.7,1173,3,4,0)="and output them."
^IBA(364.7,1174,0)="1474^N^163^^^^N"
^IBA(364.7,1174,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(3,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1174,3,0)="^364.73^3^3^3140213^^^^"
^IBA(364.7,1174,3,1,0)="Output the third diagnosis code. Check for any diagnosis codes that should"
^IBA(364.7,1174,3,2,0)="display in the third position on pages subsequent to page 1 and output"
^IBA(364.7,1174,3,3,0)="them."
^IBA(364.7,1175,0)="1475^N^221^^^^N"
^IBA(364.7,1175,1)="K IBXSAVE(""FQCD"") S:(""^7^8^""[(U_IBXDATA_U)) IBXSAVE(""FQCD"")=IBXDATA I '$D(IBXSAVE(""FQCD"")) K IBXDATA"
^IBA(364.7,1176,0)="1476^N^55^^^^N"
^IBA(364.7,1176,1)="I '$D(IBXSAVE(""FQCD"")) K IBXDATA"
^IBA(364.7,1177,0)="1477^N^162^^^^N"
^IBA(364.7,1177,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(2,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1177,3,0)="^364.73^3^3^3060717^^^^"
^IBA(364.7,1177,3,1,0)="Output the second diagnosis code.  Check for any diagnosis codes that should"
^IBA(364.7,1177,3,2,0)="display in the second position on pages subsequent to page 1 and output"
^IBA(364.7,1177,3,3,0)="them."
^IBA(364.7,1178,0)="1478^N^164^^^^N"
^IBA(364.7,1178,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(4,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1178,3,0)="^364.73^3^3^3140213^^^^"
^IBA(364.7,1178,3,1,0)="Output the forth diagnosis code. Check for any diagnosis codes that should"
^IBA(364.7,1178,3,2,0)="display in the forth position on pages subsequent to page 1 and output"
^IBA(364.7,1178,3,3,0)="them."
^IBA(364.7,1179,0)="1479^N^358^^^^N"
^IBA(364.7,1179,1)="I $$OLAB^IBCEU(IBXIEN) N IBZ S IBZ=IBXDATA D F^IBCEF(""N-LAB CLIA #"",,,IBXIEN) I IBXDATA="""",IBZ'="""" S IBXDATA=IBZ"
^IBA(364.7,1179,3,0)="^364.73^2^2^3060717^^^^"
^IBA(364.7,1179,3,1,0)="If the bill is for services rendered at an outside lab, get the CLIA number."
^IBA(364.7,1179,3,2,0)="If this # is not available, use the prior authorization #."
^IBA(364.7,1180,0)="1480^N^5^^^^N"
^IBA(364.7,1180,1)="I '$O(IBXSAVE(""BOX24"",0)) D B24^IBCEF3(.IBXSAVE,IBXIEN,1)"
^IBA(364.7,1180,3,0)="^364.73^1^1^3060717^^^^"
^IBA(364.7,1180,3,1,0)="If array doesn't already exist, extract it"
^IBA(364.7,1181,0)="1481^N^165^^^^N"
^IBA(364.7,1181,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1181,3,0)="^364.73^2^2^3060717^^^^"
^IBA(364.7,1181,3,1,0)="If more than 6 service dates (12 lines) exist"
^IBA(364.7,1181,3,2,0)="for the bill, this outputs the rest on additional bill pages."
^IBA(364.7,1182,0)="1482^N^166^^^^N"
^IBA(364.7,1182,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1182,3,0)="^364.73^2^2^3060717^^^^"
^IBA(364.7,1182,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1182,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1183,0)="1483^N^167^^^^N"
^IBA(364.7,1183,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1183,3,0)="^364.73^2^2^3060717^^^^"
^IBA(364.7,1183,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1183,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1184,0)="1484^N^229^^^^N"
^IBA(364.7,1184,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1184,3,0)="^^2^2^3060816^"
^IBA(364.7,1184,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1184,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1185,0)="1485^N^169^^^^N"
^IBA(364.7,1185,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1185,3,0)="^364.73^2^2^3060816^^^^"
^IBA(364.7,1185,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1185,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1186,0)="1486^N^170^^^^N"
^IBA(364.7,1186,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1186,3,0)="^364.73^2^2^3060717^^^"
^IBA(364.7,1186,3,1,0)="If more than 6 service dates (12 lines) exist for the bill, this outputs"
^IBA(364.7,1186,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1187,0)="1487^N^171^^^^N"
^IBA(364.7,1187,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1187,3,0)="^^2^2^3060816^"
^IBA(364.7,1187,3,1,0)="If more than 6 service dates (12 lines) exist for the bill, this outputs"
^IBA(364.7,1187,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1188,0)="1488^N^172^^^^N"
^IBA(364.7,1188,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1188,3,0)="^^2^2^3060816^"
^IBA(364.7,1188,3,1,0)="If more than 6 service dates (12 lines) exist for the bill, this outputs"
^IBA(364.7,1188,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1189,0)="1489^N^174^^^^N"
^IBA(364.7,1189,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1189,3,0)="^364.73^2^2^3060717^^^^"
^IBA(364.7,1189,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1189,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1190,0)="1490^N^371^^^^N"
^IBA(364.7,1190,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1190,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,1190,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1190,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1191,0)="1491^N^372^^^^N"
^IBA(364.7,1191,1)="N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)"
^IBA(364.7,1191,3,0)="^364.73^2^2^3101109^^^^"
^IBA(364.7,1191,3,1,0)="If more than 6 service dates (12 lines) exists for the bill, this outputs"
^IBA(364.7,1191,3,2,0)="the rest on additional bill pages."
^IBA(364.7,1192,0)="1492^N^5^^^^N"
^IBA(364.7,1192,1)="K IBXSAVE(""DX""),IBXSAVE(""BOX24""),IBXSAVE(""OCC""),IBXSAVE(""OCCS""),IBXSAVE(""IDEM""),IBXSAVE(""IADR"")"
^IBA(364.7,1192,3,0)="^364.73^1^1^3060718^^^^"
^IBA(364.7,1192,3,1,0)="Clean up IBXSAVE array."
^IBA(364.7,1193,0)="1493^N^109^^^^N"
^IBA(364.7,1194,0)="1494^N^151^^^^N"
^IBA(364.7,1195,0)="1495^N^210^^^^N"
^IBA(364.7,1196,0)="1496^N^24^^^^N"
^IBA(364.7,1196,1)="N Z S Z=$S(IBXDATA=""""!(""Nn0""'[IBXDATA):1,1:6) S IBXDATA=$J(""X"",Z)"
^IBA(364.7,1196,3,0)="^364.73^2^2^3060718^^^^"
^IBA(364.7,1196,3,1,0)="Print indicator of ASSIGNMENT OF BENEFITS.  Check Yes if data element value"
^IBA(364.7,1196,3,2,0)="returned is null or is not 0,'n', or 'N', otherwise check No."
^IBA(364.7,1197,0)="1497^N^95^^^^N"
^IBA(364.7,1197,1)="S IBXSAVE(""TOT"")=IBXDATA K IBXDATA I $O(^TMP(""IBXDATA"",$J,IBXREC,""""),-1)'>1 S IBXDATA=$$DOL^IBCEF77(IBXSAVE(""TOT""),9)"
^IBA(364.7,1197,3,0)="^364.73^3^3^3060825^^"
^IBA(364.7,1197,3,1,0)="Save the total charges in IBXSAVE array for later use.  If"
^IBA(364.7,1197,3,2,0)="total is not null, output as numeric with 2 decimal places."
^IBA(364.7,1197,3,3,0)="Only output totals on last page of form."
^IBA(364.7,1198,0)="1498^N^156^^^^N"
^IBA(364.7,1198,1)="S IBXSAVE(""PAID"")=0 K IBXDATA I $O(^TMP(""IBXDATA"",$J,IBXREC,""""),-1)'>1 S IBXDATA=$$DOL^IBCEF77(IBXSAVE(""PTOT""),8) K IBXSAVE(""PAID"")"
^IBA(364.7,1198,3,0)="^^1^1^3150924^"
^IBA(364.7,1198,3,1,0)="The payment received from the patient or other payers."
^IBA(364.7,1199,0)="1499^N^5^^^^N"
^IBA(364.7,1199,1)="S IBXDATA="""""
^IBA(364.7,1199,3,0)="^^4^4^3140115^"
^IBA(364.7,1199,3,1,0)="this field is no longer used."
^IBA(364.7,1199,3,2,0)=" "
^IBA(364.7,1199,3,3,0)="If not 0, output as numeric with 2 decimals."
^IBA(364.7,1199,3,4,0)="Only output total on last page of form."
^IBA(364.7,1200,0)="1500^N^5^^^^N"
^IBA(364.7,1200,1)="N IBZ S IBXDATA=$G(IBXSAVE(""BOX33"",""PHONE"")),IBZ=$$NOPUNCT^IBCEF(IBXDATA,1),IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_"" ""_$E(IBZ,4,6)_""-""_$E(IBZ,7,10)),1:$J(IBXDATA,13))"
^IBA(364.7,1200,3,0)="^364.73^5^5^3090213^^"
^IBA(364.7,1200,3,1,0)="Billing provider phone number, CMS-1500, Box 33, upper right hand corner."
^IBA(364.7,1200,3,2,0)=" "
^IBA(364.7,1200,3,3,0)="This is actually the Pay-To Provider phone number."
^IBA(364.7,1200,3,4,0)=" "
^IBA(364.7,1200,3,5,0)="IB*2*400 changes."
^IBA(364.7,1201,0)="1501^N^5^^^^N"
^IBA(364.7,1201,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""BPSFDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),0)"
^IBA(364.7,1201,3,0)="^^2^2^3081001^"
^IBA(364.7,1201,3,1,0)="esg - 10/1/08 - IB*2*400 - Print the service facility name only if there "
^IBA(364.7,1201,3,2,0)="is a service facility for the claim"
^IBA(364.7,1202,0)="1502^N^5^^^^N"
^IBA(364.7,1202,1)="S IBXDATA=$G(IBXSAVE(""BOX33"",""NAME""))"
^IBA(364.7,1202,3,0)="^^1^1^3090213^"
^IBA(364.7,1202,3,1,0)="Billing provider name - Box 33 on the CMS-1500."
^IBA(364.7,1203,0)="1503^N^370^^^^N"
^IBA(364.7,1203,1)="S IBXSAVE(""BOX31"")=IBXDATA,IBXDATA=$$NAME31^IBCF2(IBXIEN,IBXDATA)"
^IBA(364.7,1203,3,0)="^364.73^2^2^3101103^^"
^IBA(364.7,1203,3,1,0)="Formats the name in 21 spaces for block 31 of the 1500."
^IBA(364.7,1203,3,2,0)="IBXSAVE(""BOX31"") is the name in format Last,first mi^ien in file 200"
^IBA(364.7,1204,0)="1504^N^96^^^^N"
^IBA(364.7,1204,1)="N Z S Z=$P(IBXDATA,U,3),IBXSAVE(""SERVFACFLAG"")=$S(Z="""":0,1:1),IBXSAVE(""BPSFDATA"")=IBXDATA D GETBP^IBCEF79(IBXIEN,"""",+IBXDATA,""BOX33"",.IBXSAVE)"
^IBA(364.7,1204,3,0)="^^12^12^3090213^"
^IBA(364.7,1204,3,1,0)="Calculate only field to populate boxes 32 and 33 on the CMS-1500 claim "
^IBA(364.7,1204,3,2,0)="form.  The data element call to N-BILLING PROVIDER will save information "
^IBA(364.7,1204,3,3,0)="about the service facility and the billing provider for this claim."
^IBA(364.7,1204,3,4,0)=" "
^IBA(364.7,1204,3,5,0)="IBXSAVE(""SERVFACFLAG"") is a 0/1 flag indicating if there is a service "
^IBA(364.7,1204,3,6,0)="facility for this claim."
^IBA(364.7,1204,3,7,0)=" "
^IBA(364.7,1204,3,8,0)="IBXSAVE(""BPSFDATA"") is the string of information returned by the "
^IBA(364.7,1204,3,9,0)="$$B^IBCEF79 function call."
^IBA(364.7,1204,3,10,0)=" "
^IBA(364.7,1204,3,11,0)="The IBXSAVE(""BOX33"") array elements will be built with information about "
^IBA(364.7,1204,3,12,0)="the billing provider name, address, and phone# to go into Box 33."
^IBA(364.7,1205,0)="1505^N^5^^^^N"
^IBA(364.7,1205,1)="KILL IBXSAVE(""SERVFACFLAG""),IBXSAVE(""BPSFDATA""),IBXSAVE(""BOX33""),^TMP(""IB 1500 PRINT"",$J,IBXIEN),IBXPROV"
^IBA(364.7,1205,3,0)="^364.73^1^1^3101104^^^^"
^IBA(364.7,1205,3,1,0)="Remove IBXSAVE array entries used in the construction of Boxes 32 and 33."
^IBA(364.7,1206,0)="1506^N^5^^^^N"
^IBA(364.7,1206,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""BPSFDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),12)"
^IBA(364.7,1206,3,0)="^^2^2^3081001^"
^IBA(364.7,1206,3,1,0)="Box 32 - service facility address lines 1&2"
^IBA(364.7,1206,3,2,0)="Only print data if there is a service facility for this claim."
^IBA(364.7,1207,0)="1507^N^5^^^^N"
^IBA(364.7,1207,1)="S IBXDATA=$G(IBXSAVE(""BOX33"",""ADDR1""))_"" ""_$G(IBXSAVE(""BOX33"",""ADDR2""))"
^IBA(364.7,1207,3,0)="^364.73^1^1^3090213^^"
^IBA(364.7,1207,3,1,0)="cms-1500, Box 33  Billing provider address lines 1&2."
^IBA(364.7,1208,0)="1508^N^209^^^^N"
^IBA(364.7,1208,1)="N A,Z S Z=$$DATE31^IBCF2(IBXDATA,IBXIEN) S A=$$GETPRV^IBCEF83(IBXIEN,,3,""A6""),IBXDATA=A_$J("""",11-$L(A))_Z"
^IBA(364.7,1208,3,0)="^364.73^2^2^3101104^^^^"
^IBA(364.7,1208,3,1,0)="Print credentials left justified and date right justified. Format date as"
^IBA(364.7,1208,3,2,0)="MM/DD/YYYY."
^IBA(364.7,1209,0)="1509^N^5^^^^N"
^IBA(364.7,1209,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N Z S Z=$G(IBXSAVE(""BPSFDATA"")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),3,26)"
^IBA(364.7,1209,3,0)="^^6^6^3081003^"
^IBA(364.7,1209,3,1,0)="CMS-1500, Box 32, service facility city,st,zip"
^IBA(364.7,1209,3,2,0)="Only print this information if there is a service facility for this claim."
^IBA(364.7,1209,3,3,0)=" "
^IBA(364.7,1209,3,4,0)="The 4th parameter to the $$GETFAC function is 26 since there is only room "
^IBA(364.7,1209,3,5,0)="for 26 characters for city, st zip.  This function will try to truncate "
^IBA(364.7,1209,3,6,0)="the city, st zip in the best possible way if necessary."
^IBA(364.7,1213,0)="1513^N^5^^^^N"
^IBA(364.7,1213,1)="S IBXDATA=$$CSZ^IBCEP8($G(IBXSAVE(""BOX33"",""CITY"")),$G(IBXSAVE(""BOX33"",""ST"")),$G(IBXSAVE(""BOX33"",""ZIP"")),29)"
^IBA(364.7,1213,3,0)="^^5^5^3090213^"
^IBA(364.7,1213,3,1,0)="cms-1500, Box 33, Billing Provider city,st,zip"
^IBA(364.7,1213,3,2,0)=" "
^IBA(364.7,1213,3,3,0)="There is only room for 29 characters for city, st zip.  This $$CSZ"
^IBA(364.7,1213,3,4,0)="function will try to truncate the city, st zip in the best possible way if"
^IBA(364.7,1213,3,5,0)="necessary."
^IBA(364.7,1214,0)="1514^N^5^^^^N"
^IBA(364.7,1214,1)="I '$D(^DGCR(399,IBXIEN,""PRV"",0)) S IBXDATA=$E($P($G(IBXSAVE(""BOX31"")),U),43,63)"
^IBA(364.7,1214,3,0)="^^1^1^3060908^"
^IBA(364.7,1214,3,1,0)="This line is no longer printed on the standard 1500."
^IBA(364.7,1215,0)="1515^N^5^^^^N"
^IBA(364.7,1215,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  S IBXDATA=$P($$ORGNPI^IBCEF73A(IBXIEN),U,1),IBXSAVE(""NPISVC"")=IBXDATA"
^IBA(364.7,1215,3,0)="^364.73^4^4^3081001^^"
^IBA(364.7,1215,3,1,0)="CMS-1500 form, Box 32a."
^IBA(364.7,1215,3,2,0)="Service Facility NPI#"
^IBA(364.7,1215,3,3,0)=" "
^IBA(364.7,1215,3,4,0)="Save the service facility NPI# in IBXSAVE(""NPISVC"") for use in Box 32b."
^IBA(364.7,1216,0)="1516^N^5^^^^N"
^IBA(364.7,1216,1)="Q:'$G(IBXSAVE(""SERVFACFLAG""))  N IBX,IBY,IBZ S IBY=$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE(""NPISVC""))) K IBXSAVE(""NPISVC""),IBXDATA I IBY D ALLIDS^IBCEF75(IBXIEN,.IBZ,1) S IBX=$G(IBZ(""LAB/FAC"",IBXIEN,""C"",1,1)),IBXDATA=$P(IBX,U,1)_$P(IBX,U,2)"
^IBA(364.7,1216,3,0)="^364.73^2^2^3081001^^^^"
^IBA(364.7,1216,3,1,0)="1500, Box 32b.  Accommodate the reporting of other ID numbers."
^IBA(364.7,1216,3,2,0)="Enter the 2 digit qualifier followed by the secondary ID number."
^IBA(364.7,1217,0)="1517^N^5^^^^N"
^IBA(364.7,1217,1)="S IBXDATA=$P($$ORGNPI^IBCEF73A(IBXIEN),U,3),IBXSAVE(""NPIBILL"")=IBXDATA"
^IBA(364.7,1217,3,0)="^^3^3^3081001^"
^IBA(364.7,1217,3,1,0)="cms-1500 form, Box 33a.  Billing provider NPI."
^IBA(364.7,1217,3,2,0)=" "
^IBA(364.7,1217,3,3,0)="Save the billing provider NPI in IBXSAVE(""NPIBILL"") for use in Box 33b."
^IBA(364.7,1218,0)="1518^N^5^^^^N"
^IBA(364.7,1218,1)="N IBX,IBY,IBZ S IBY=$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE(""NPIBILL""))) K IBXSAVE(""NPIBILL""),IBXDATA I IBY D ALLIDS^IBCEF75(IBXIEN,.IBZ,1) S IBX=$G(IBZ(""BILLING PRV"",IBXIEN,""C"",1,2)),IBXDATA=$P(IBX,U,1)_$P(IBX,U,2)"
^IBA(364.7,1218,3,0)="^364.73^2^2^3081001^^^^"
^IBA(364.7,1218,3,1,0)="1500 form.  Box 33b.  Billing provider Other ID number."
^IBA(364.7,1218,3,2,0)="Enter the 2 digit qualifier followed by the secondary ID#."
^IBA(364.7,1219,0)="1519^N^5^^^^N"
^IBA(364.7,1219,1)="I $O(^TMP(""IBXDATA"",$J,IBXREC,1)) N Z,FLDS X ""F Z=1:1:+$O(^IBA(364.6,""""ASEQ"""",2,1,""""""""),-1) S:(Z'>43!(Z'<57))&(Z'=6)&(Z'=39)&(Z'=41) FLDS(Z)="""""""""" F Z=2:1:+$O(^TMP(""IBXDATA"",$J,IBXREC,Z),-1) D MPG^IBCEF3(Z,.FLDS,2)"
^IBA(364.7,1219,3,0)="^364.73^4^4^3061005^^^"
^IBA(364.7,1219,3,1,0)="If there is more than 1 page of bill extracted, the variable"
^IBA(364.7,1219,3,2,0)="FLDS(line,column) holds the lines and columns that should be duplicated on"
^IBA(364.7,1219,3,3,0)="pages after the first.  This takes care of the population of these static"
^IBA(364.7,1219,3,4,0)="fields on these subsequent pages."
^IBA(364.7,1220,0)="1520^N^5^^^^N"
^IBA(364.7,1220,1)="I '$P($G(^DGCR(399,IBXIEN,""U2"")),U,10) S IBXDATA=""X"""
^IBA(364.7,1220,3,0)="^^4^4^3070604^"
^IBA(364.7,1220,3,1,0)="CMS-1500, box 20 Outside Lab=NO."
^IBA(364.7,1220,3,2,0)="Changed with IB patch 371"
^IBA(364.7,1220,3,3,0)="If there is not an outside facility on the claim, then the NO box gets "
^IBA(364.7,1220,3,4,0)="the ""X""."
^IBA(364.7,1250,0)="1550^N^5^^^^N"
^IBA(364.7,1250,1)="K ^UTILITY(""VADM"",$J),^UTILITY(""VAPA"",$J),^TMP(""IBXSAVE"",$J),IBXSAVE"
^IBA(364.7,1250,3,0)="^364.73^1^1^3061103^^^^"
^IBA(364.7,1250,3,1,0)="Kills off globals,other variables to be used, sets right margin variable."
^IBA(364.7,1251,0)="1551^N^142^^^^N"
^IBA(364.7,1252,0)="1552^N^96^^^^N"
^IBA(364.7,1252,1)="S IBXSAVE(""BPDATA"")=IBXDATA,IBXDATA=$$BNIEN^XUAF4(+IBXSAVE(""BPDATA"")) S:IBXDATA="""" IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE(""BPDATA""),0,0)"
^IBA(364.7,1252,3,0)="^^4^4^3081020^"
^IBA(364.7,1252,3,1,0)="Billing Provider name.  Use the data element to extract the billing "
^IBA(364.7,1252,3,2,0)="provider IEN for this claim.  Save this string into scratch variable "
^IBA(364.7,1252,3,3,0)="IBXSAVE(""BPDATA"") for use in other fields in FL-1.  Extract the facility "
^IBA(364.7,1252,3,4,0)="name from file 4."
^IBA(364.7,1253,0)="1553^N^5^^^^N"
^IBA(364.7,1253,1)="S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE(""BPDATA""),0,12)"
^IBA(364.7,1253,3,0)="^364.73^2^2^3081020^^"
^IBA(364.7,1253,3,1,0)="Retrieve the billing provider address from the Institution file "
^IBA(364.7,1253,3,2,0)="(file#4).  Grab both address line 1 and address line 2."
^IBA(364.7,1254,0)="1554^N^5^^^^N"
^IBA(364.7,1254,1)="S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE(""BPDATA""),0,""3C"")"
^IBA(364.7,1254,3,0)="^364.73^1^1^3081020^^^"
^IBA(364.7,1254,3,1,0)="Get the billing provider city from file 4."
^IBA(364.7,1255,0)="1555^N^5^^^^N"
^IBA(364.7,1255,1)="S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE(""BPDATA""),0,""3S"")"
^IBA(364.7,1255,3,0)="^364.73^1^1^3081020^^^"
^IBA(364.7,1255,3,1,0)="Get the billing provider state from file 4."
^IBA(364.7,1256,0)="1556^N^5^^^^N"
^IBA(364.7,1256,1)="S IBXDATA=$TR($$GETFAC^IBCEP8(+IBXSAVE(""BPDATA""),0,""3Z""),""-"")"
^IBA(364.7,1256,3,0)="^^2^2^3090310^"
^IBA(364.7,1256,3,1,0)="Get the billing provider zip code from file 4.  Form Locator 1"
^IBA(364.7,1256,3,2,0)="accommodates a 9-digit zip code so strip out the hyphen."
^IBA(364.7,1257,0)="1557^N^5^^^^N"
^IBA(364.7,1257,1)="D GETBP^IBCEF79(IBXIEN,"""",+IBXSAVE(""BPDATA""),""FL1"",.IBXSAVE) S IBXDATA=$G(IBXSAVE(""FL1"",""PHONE"")),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,1257,3,0)="^364.73^1^1^3090310^^"
^IBA(364.7,1257,3,1,0)="This is the Pay-To provider phone number being used in FL-1, line 4."
^IBA(364.7,1258,0)="1558^N^5^^^^N"
^IBA(364.7,1259,0)="1559^N^5^^^^N"
^IBA(364.7,1260,0)="1560^N^5^^^^N"
^IBA(364.7,1260,1)="S IBXDATA=$P($G(IBXSAVE(""UBFL2"")),U,1)"
^IBA(364.7,1260,3,0)="^364.73^1^1^3081105^^"
^IBA(364.7,1260,3,1,0)="Pay-to provider name"
^IBA(364.7,1261,0)="1561^N^5^^^^N"
^IBA(364.7,1261,1)="S IBXDATA=$P($G(IBXSAVE(""UBFL2"")),U,5)_"" ""_$P($G(IBXSAVE(""UBFL2"")),U,6)"
^IBA(364.7,1261,3,0)="^^4^4^3081105^"
^IBA(364.7,1261,3,1,0)="UB-04, FL-2"
^IBA(364.7,1261,3,2,0)="Pay-to provider street address"
^IBA(364.7,1261,3,3,0)="Concatenate address line 1 and line 2 together and try to fit as much as "
^IBA(364.7,1261,3,4,0)="possible within the given 25 characters."
^IBA(364.7,1262,0)="1562^N^5^^^^N"
^IBA(364.7,1262,1)="S IBXDATA=$P($G(IBXSAVE(""UBFL2"")),U,7)"
^IBA(364.7,1262,3,0)="^^2^2^3081105^"
^IBA(364.7,1262,3,1,0)="UB-04, FL-2"
^IBA(364.7,1262,3,2,0)="pay-to provider city name"
^IBA(364.7,1263,0)="1563^N^5^^^^N"
^IBA(364.7,1263,1)="S IBXDATA=$P($G(IBXSAVE(""UBFL2"")),U,8)"
^IBA(364.7,1263,3,0)="^^2^2^3081105^"
^IBA(364.7,1263,3,1,0)="UB-04, FL-2"
^IBA(364.7,1263,3,2,0)="pay-to provider state code"
^IBA(364.7,1264,0)="1564^N^5^^^^N"
^IBA(364.7,1264,1)="S IBXDATA=$P($G(IBXSAVE(""UBFL2"")),U,9)"
^IBA(364.7,1264,3,0)="^^2^2^3081105^"
^IBA(364.7,1264,3,1,0)="UB-04, FL-2"
^IBA(364.7,1264,3,2,0)="pay-to provider zip code"
^IBA(364.7,1265,0)="1565^N^5^^^^N"
^IBA(364.7,1265,1)="K IBXDATA I $D(IBXSAVE(""PROC"",1)) S IBXDATA=$P(IBXSAVE(""PROC"",1),U),IBXDATA=$S(IBXDATA[""ICPT""!(IBXDATA[""ICD0""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,1265,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1265,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1265,3,2,0)="previously extracted.  If the first occurrence exists, output the code"
^IBA(364.7,1265,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,1266,0)="1566^N^5^^^^N"
^IBA(364.7,1266,1)="K IBXDATA,IBXSAVE(""UBFL2""),IBXSAVE(""BPDATA""),IBXSAVE(""FL1"")"
^IBA(364.7,1266,3,0)="^364.73^3^3^3090310^^"
^IBA(364.7,1266,3,1,0)="NOT USED.  Reserved for Assignment by the NUBC."
^IBA(364.7,1266,3,2,0)=" "
^IBA(364.7,1266,3,3,0)="Kill some scratch arrays here used for FL-1 and FL-2."
^IBA(364.7,1267,0)="1567^N^210^^^^N"
^IBA(364.7,1268,0)="1568^N^10^^^^N"
^IBA(364.7,1268,1)="S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,1269,0)="1569^N^5^^^^N"
^IBA(364.7,1269,1)="K IBXDATA S IBXDATA=0_$$TOB^IBCEF1(IBXIEN)"
^IBA(364.7,1269,3,0)="^^2^2^3061106^"
^IBA(364.7,1269,3,1,0)="Type of bill is 4 characters long with the first digit being a leading "
^IBA(364.7,1269,3,2,0)="zero."
^IBA(364.7,1270,0)="1570^N^230^^^^ZL"
^IBA(364.7,1270,1)="S IBXDATA=$E($P(IBXDATA,U,3),4,7) I $TR(IBXDATA,0)="""" K IBXDATA"
^IBA(364.7,1270,3,0)="^364.73^2^2^3061106^^^^"
^IBA(364.7,1270,3,1,0)="Always 0-fill data to the left.  If primary site, don't output.  If not"
^IBA(364.7,1270,3,2,0)="primary site, this is the site suffix (up to 4 digits)"
^IBA(364.7,1271,0)="1571^N^109^^^^N"
^IBA(364.7,1272,0)="1572^N^71^^^^N"
^IBA(364.7,1272,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,,1)"
^IBA(364.7,1272,3,0)="^364.73^1^1^3061106^^^^"
^IBA(364.7,1272,3,1,0)="Format date in MMDDYY format."
^IBA(364.7,1273,0)="1573^N^133^^^^N"
^IBA(364.7,1273,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,,1)"
^IBA(364.7,1273,3,0)="^364.73^1^1^3061106^^^^"
^IBA(364.7,1273,3,1,0)="Format date in MMDDYY format."
^IBA(364.7,1274,0)="1574^N^5^^^^N"
^IBA(364.7,1274,1)="K IBXDATA"
^IBA(364.7,1274,3,0)="^^1^1^3061106^"
^IBA(364.7,1274,3,1,0)="Reserved for Assignment by the NUBC."
^IBA(364.7,1275,0)="1575^N^5^^^^N"
^IBA(364.7,1275,1)="K IBXDATA"
^IBA(364.7,1275,3,0)="^^1^1^3061106^"
^IBA(364.7,1275,3,1,0)="Reserved for Assignment by the NUBC."
^IBA(364.7,1276,0)="1576^N^25^^^^N"
^IBA(364.7,1276,1)="S IBXDATA=$S(IBXDATA'=""01"":$P($$INSSECID^IBCEF21(IBXIEN,""PAT""),U,2),1:"""")"
^IBA(364.7,1276,3,0)="^^6^6^3070717^"
^IBA(364.7,1276,3,1,0)="This is the patient identification number as assigned by the current "
^IBA(364.7,1276,3,2,0)="payer for this patient."
^IBA(364.7,1276,3,3,0)=" "
^IBA(364.7,1276,3,4,0)="The patient ID in box 8a is situational.  It should be used only when the "
^IBA(364.7,1276,3,5,0)="patient is not the subscriber.  Report if number is different from the "
^IBA(364.7,1276,3,6,0)="subscriber ID in FL-60.  FL-60 holds the subscriber ID#."
^IBA(364.7,1277,0)="1577^N^65^^^^N"
^IBA(364.7,1278,0)="1578^N^157^^^^N"
^IBA(364.7,1278,1)="S IBXDATA=$G(^UTILITY(""VAPA"",$J,1))_"" ""_$G(^UTILITY(""VAPA"",$J,2))_"" ""_$G(^UTILITY(""VAPA"",$J,3))"
^IBA(364.7,1278,3,0)="^^1^1^3061107^"
^IBA(364.7,1278,3,1,0)="Patient address - street address"
^IBA(364.7,1279,0)="1579^N^61^^^^N"
^IBA(364.7,1279,3,0)="^^1^1^3061107^"
^IBA(364.7,1279,3,1,0)="Patient address - city"
^IBA(364.7,1280,0)="1580^N^62^^^^N"
^IBA(364.7,1280,1)="S IBXDATA=$$GET1^DIQ(5,$S(+$$PTADDR^IBCEF(IBXIEN,25)>1:+$$PTADDR^IBCEF(IBXIEN,23),1:+IBXDATA),1)"
^IBA(364.7,1280,3,0)="^^1^1^3061107^"
^IBA(364.7,1280,3,1,0)="Patient address - state/province (2-char code)"
^IBA(364.7,1281,0)="1581^N^63^^^^N"
^IBA(364.7,1281,1)="S:+$$PTADDR^IBCEF(IBXIEN,25)>1 IBXDATA=$$PTADDR^IBCEF(IBXIEN,24)"
^IBA(364.7,1281,3,0)="^^1^1^3061107^"
^IBA(364.7,1281,3,1,0)="Patient address - zip code/postal code"
^IBA(364.7,1282,0)="1582^N^190^^^^N"
^IBA(364.7,1282,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=1,5 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,1282,3,0)="^364.73^3^3^3061108^^^^"
^IBA(364.7,1282,3,1,0)="The data element extracts multiply-occurring data for the occurrence codes"
^IBA(364.7,1282,3,2,0)="and occurrence span codes and outputs the first occurrence code here."
^IBA(364.7,1282,3,3,0)="Overflow codes are printed on a separate page."
^IBA(364.7,1283,0)="1583^N^5^^^^N"
^IBA(364.7,1283,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=1:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>5 IBXDATA(Z0)=Z1 D:Z>5 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,31) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,1283,3,0)="^364.73^6^6^3061108^^^^"
^IBA(364.7,1283,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1283,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1283,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 1st and 5th"
^IBA(364.7,1283,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,1283,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,1283,3,6,0)="Overflow codes (9,13,...) are printed on a separate page."
^IBA(364.7,1284,0)="1584^N^5^^^^N"
^IBA(364.7,1284,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=2,6 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,1284,3,0)="^364.73^5^5^3061108^^^^"
^IBA(364.7,1284,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1284,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1284,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 2nd and 6th"
^IBA(364.7,1284,3,4,0)="occurrences of occurrence codes found in the IBXSAVE(""OCC"",n) array data"
^IBA(364.7,1284,3,5,0)="element.  Overflow codes are printed on a separate page."
^IBA(364.7,1285,0)="1585^N^5^^^^N"
^IBA(364.7,1285,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=2:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>6 IBXDATA(Z0)=Z1 D:Z>6 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,32) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,1285,3,0)="^364.73^6^6^3061108^^^^"
^IBA(364.7,1285,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1285,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1285,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 2nd and 6th"
^IBA(364.7,1285,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,1285,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,1285,3,6,0)="Overflow codes (10,14,...) are printed on a separate page."
^IBA(364.7,1286,0)="1586^N^5^^^^N"
^IBA(364.7,1286,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=3,7 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,1286,3,0)="^364.73^5^5^3061108^^^^"
^IBA(364.7,1286,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1286,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1286,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 3rd and 7th"
^IBA(364.7,1286,3,4,0)="occurrences of occurrence codes found in the IBXSAVE(""OCC"",n) array data"
^IBA(364.7,1286,3,5,0)="element.  Overflow codes are printed on a separate page."
^IBA(364.7,1287,0)="1587^N^5^^^^N"
^IBA(364.7,1287,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=3:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>7 IBXDATA(Z0)=Z1 D:Z>7 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,33) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,1287,3,0)="^364.73^6^6^3061108^^^^"
^IBA(364.7,1287,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1287,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1287,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 3rd and 7th"
^IBA(364.7,1287,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,1287,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,1287,3,6,0)="Any overflow codes (11,15,...) are output on a separate page."
^IBA(364.7,1288,0)="1588^N^5^^^^N"
^IBA(364.7,1288,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=4,8 S Z0=Z0+1 S:$G(IBXSAVE(""OCC"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCC"",Z),U)"
^IBA(364.7,1288,3,0)="^364.73^5^5^3061108^^^^"
^IBA(364.7,1288,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1288,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1288,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 4th and 8th"
^IBA(364.7,1288,3,4,0)="occurrences of occurrence codes found in the IBXSAVE(""OCC"",n) array data"
^IBA(364.7,1288,3,5,0)="element.  Overflow codes are printed on a separate page."
^IBA(364.7,1289,0)="1589^N^5^^^^N"
^IBA(364.7,1289,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=4:4 Q:$G(IBXSAVE(""OCC"",Z))=""""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE(""OCC"",Z),U,2),,1) S:Z'>8 IBXDATA(Z0)=Z1 D:Z>8 XOCC^IBCEF3($P(IBXSAVE(""OCC"",Z),U)_U_Z1,Z0,34) K IBXSAVE(""OCC"",Z)"
^IBA(364.7,1289,3,0)="^364.73^6^6^3061108^^^^"
^IBA(364.7,1289,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1289,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1289,3,3,0)="IBXSAVE(""OCC"") extracted previously.  This field outputs the 4th and 8th"
^IBA(364.7,1289,3,4,0)="occurrences of occurrence code 'from date' formatted as MMDDYY found in the"
^IBA(364.7,1289,3,5,0)="second '^' piece of the IBXSAVE(""OCC"",n) array data element."
^IBA(364.7,1289,3,6,0)="Any overflow codes (12,16,...) are output on a separate page."
^IBA(364.7,1290,0)="1590^N^5^^^^N"
^IBA(364.7,1290,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=1,3 S Z0=Z0+1 S:$G(IBXSAVE(""OCCS"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCCS"",Z),U)"
^IBA(364.7,1290,3,0)="^^5^5^3061108^"
^IBA(364.7,1290,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1290,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1290,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 1st and 3rd"
^IBA(364.7,1290,3,4,0)="occurrences of occurrence span codes found in the IBXSAVE(""OCCS"",n) array"
^IBA(364.7,1290,3,5,0)="data element.  Overflow codes are printed on a separate page."
^IBA(364.7,1291,0)="1591^N^5^^^^N"
^IBA(364.7,1291,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=1,3 S Z0=Z0+1 S:$G(IBXSAVE(""OCCS"",Z))'="""" IBXDATA(Z0)=$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,2),,1)"
^IBA(364.7,1291,3,0)="^^5^5^3061108^"
^IBA(364.7,1291,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1291,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1291,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 1st and 3rd"
^IBA(364.7,1291,3,4,0)="occurrences of occurrence span code 'from date' formatted as MMDDYY found"
^IBA(364.7,1291,3,5,0)="in the second '^' piece of the IBXSAVE(""OCCS"",n) array data element."
^IBA(364.7,1292,0)="1592^N^5^^^^N"
^IBA(364.7,1292,1)="N Z,Q,Z0 K IBXDATA S Z0=0 F Z=1:2 Q:$G(IBXSAVE(""OCCS"",Z))=""""  S Z0=Z0+1,Q=$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,3),,1) S:Z'>3 IBXDATA(Z0)=Q D:Z>3 XOCCS^IBCEF3($P(IBXSAVE(""OCCS"",Z),U)_U_$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,2),,1)_U_Q,Z0,35)"
^IBA(364.7,1292,3,0)="^364.73^5^5^3061208^^^^"
^IBA(364.7,1292,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1292,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1292,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 1st and 3rd"
^IBA(364.7,1292,3,4,0)="occurrences of occurrence span code 'to date' formatted as MMDDYY found"
^IBA(364.7,1292,3,5,0)="in the third '^' piece of the IBXSAVE(""OCCS"",n) array data element."
^IBA(364.7,1293,0)="1593^N^5^^^^N"
^IBA(364.7,1293,1)="N CIEN S CIEN=+$$PTADDR^IBCEF(IBXIEN,25),IBXDATA=$S(CIEN>1:$$GET1^DIQ(779.004,CIEN,1.2),1:"""")"
^IBA(364.7,1293,3,0)="^^2^2^3061108^"
^IBA(364.7,1293,3,1,0)="Patient address - country code."
^IBA(364.7,1293,3,2,0)="Printed if country is not USA, blank otherwise."
^IBA(364.7,1294,0)="1594^N^5^^^^N"
^IBA(364.7,1294,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=2,4 S Z0=Z0+1 S:$G(IBXSAVE(""OCCS"",Z))'="""" IBXDATA(Z0)=$P(IBXSAVE(""OCCS"",Z),U)"
^IBA(364.7,1294,3,0)="^^5^5^3061108^"
^IBA(364.7,1294,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1294,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1294,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 2nd and 4th"
^IBA(364.7,1294,3,4,0)="occurrences of occurrence span codes found in the IBXSAVE(""OCCS"",n) array"
^IBA(364.7,1294,3,5,0)="data element.  Overflow codes are printed on a separate page."
^IBA(364.7,1295,0)="1595^N^5^^^^N"
^IBA(364.7,1295,1)="N Z,Z0 K IBXDATA S Z0=0 F Z=2,4 S Z0=Z0+1 S:$G(IBXSAVE(""OCCS"",Z))'="""" IBXDATA(Z0)=$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,2),,1)"
^IBA(364.7,1295,3,0)="^^5^5^3061108^"
^IBA(364.7,1295,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1295,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1295,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 2nd and 4th"
^IBA(364.7,1295,3,4,0)="occurrences of occurrence span code 'from date' formatted as MMDDYY found"
^IBA(364.7,1295,3,5,0)="in the second '^' piece of the IBXSAVE(""OCCS"",n) array data element."
^IBA(364.7,1296,0)="1596^N^5^^^^N"
^IBA(364.7,1296,1)="N Z,Q,Z0 K IBXDATA S Z0=0 F Z=2:2 Q:$G(IBXSAVE(""OCCS"",Z))=""""  S Z0=Z0+1,Q=$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,3),,1) S:Z'>4 IBXDATA(Z0)=Q D:Z>4 XOCCS^IBCEF3($P(IBXSAVE(""OCCS"",Z),U)_U_$$DATE^IBCF2($P(IBXSAVE(""OCCS"",Z),U,2),,1)_U_Q,Z0,36)"
^IBA(364.7,1296,3,0)="^364.73^5^5^3061208^^"
^IBA(364.7,1296,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1296,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1296,3,3,0)="IBXSAVE(""OCCS"") extracted previously.  This field outputs the 2nd and 4th"
^IBA(364.7,1296,3,4,0)="occurrences of occurrence span code 'to date' formatted as MMDDYY found"
^IBA(364.7,1296,3,5,0)="in the third '^' piece of the IBXSAVE(""OCCS"",n) array data element."
^IBA(364.7,1297,0)="1597^N^5"
^IBA(364.7,1297,1)="S IBXDATA=$$DXIND^IBCF2(IBXIEN)"
^IBA(364.7,1297,3,0)="^^1^1^3140317^"
^IBA(364.7,1297,3,1,0)="A 9 indicates ICD 9 codes. A 0 indicates ICD 10 Codes."
^IBA(364.7,1298,0)="1598^N^86^^^^N"
^IBA(364.7,1298,1)="N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I '$$ECODE^IBCEU4(+IBZ(Z)) S C=C+1 S:C=1 IBXDATA=$TR($P($$ICD9^IBACSV(+IBZ(Z),$$BDATE^IBACSV(IBXIEN)),U),""."") S IBXSAVE(""DX"",C)=+IBZ(Z)_U_$$GETPOA^IBCEU4($P(IBZ(Z),U,2),1)"
^IBA(364.7,1298,3,0)="^364.73^3^3^3140815^^^"
^IBA(364.7,1298,3,1,0)="The principal dx is found in the first occurrence of the data element's"
^IBA(364.7,1298,3,2,0)="values.  The diagnoses are saved off in the IBXSAVE(""DX"") array for later"
^IBA(364.7,1298,3,3,0)="use.  Only allow 3 E-codes in ICD-9."
^IBA(364.7,1299,0)="1599^N^5^^^^N"
^IBA(364.7,1299,1)="D CKPGUB^IBCEF3"
^IBA(364.7,1299,3,0)="^364.73^1^1^3061109^^^^"
^IBA(364.7,1299,3,1,0)="Checks for multi-page output, adds the static fields to subsequent pages."
^IBA(364.7,1300,0)="1600^N^5^^^^N"
^IBA(364.7,1300,1)="K IBXDATA"
^IBA(364.7,1300,3,0)="^^1^1^3061109^"
^IBA(364.7,1300,3,1,0)="Reserved for Assignment by the NUBC.  Not used."
^IBA(364.7,1301,0)="1601^N^5^^^^N"
^IBA(364.7,1301,1)="K IBXDATA"
^IBA(364.7,1301,3,0)="^^1^1^3061109^"
^IBA(364.7,1301,3,1,0)="Reserved for Assignment by the NUBC.  Box 37 line 2.  Not used."
^IBA(364.7,1302,0)="1602^N^5^^^^N"
^IBA(364.7,1302,1)="I $D(IBXSAVE(""DX"",11)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",11),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1302,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1302,3,1,0)="If there is a eleventh diagnosis, print its name."
^IBA(364.7,1303,0)="1603^N^66^^^^N"
^IBA(364.7,1303,1)="S IBXDATA=$$DATE^IBCF2(IBXDATA,1,1) S:IBXDATA="""" IBXDATA=""00000000"""
^IBA(364.7,1303,3,0)="^364.73^2^2^3061109^^^^"
^IBA(364.7,1303,3,1,0)="If BIRTHDATE exists, format it MMDDYYYY.  If it doesn't exist, output"
^IBA(364.7,1303,3,2,0)="00000000."
^IBA(364.7,1304,0)="1604^N^67^^^^N"
^IBA(364.7,1304,1)="S:IBXDATA="""" IBXDATA=""U"""
^IBA(364.7,1304,3,0)="^364.73^1^1^3061109^^^^"
^IBA(364.7,1304,3,1,0)="If the data element's value is null, set it equal to 'U'."
^IBA(364.7,1305,0)="1605^N^78^^^^N"
^IBA(364.7,1305,1)="S:'$$HHLTH^IBCEF1(IBXIEN,1) IBXDATA="""" I $$HHLTH^IBCEF1(IBXIEN,1) S IBXSAVE(""ADTM"")=$$TIME^IBCF3(IBXDATA),IBXDATA=$$DATE^IBCF2($P(IBXDATA,"".""),,1)"
^IBA(364.7,1305,3,0)="^364.73^5^5^3161005^^^^"
^IBA(364.7,1305,3,1,0)="Save the admission time in IBXSAVE array for later use.  Format date"
^IBA(364.7,1305,3,2,0)="without the time as MMDDYY. IB*2.0*547 removed the STATEMENT FROM date on "
^IBA(364.7,1305,3,3,0)="inpatient professional claims."
^IBA(364.7,1305,3,4,0)="IB*2.0*574  added STATEMENT FROM date for Outpatient Home Health and Hospice"
^IBA(364.7,1305,3,5,0)="claims."
^IBA(364.7,1306,0)="1606^N^5^^^^N"
^IBA(364.7,1306,1)="S IBXDATA=$S('$$INPAT^IBCEF(IBXIEN,1):"""",$G(IBXSAVE(""ADTM""))'="""":$E(IBXSAVE(""ADTM""),1,2),1:""00"")"
^IBA(364.7,1306,3,0)="^364.73^1^1^3070328^^"
^IBA(364.7,1306,3,1,0)="Admission time"
^IBA(364.7,1307,0)="1607^N^79^^^^N"
^IBA(364.7,1307,1)="S:'IBXDATA IBXDATA=9"
^IBA(364.7,1307,3,0)="^^11^11^3070815^"
^IBA(364.7,1307,3,1,0)="Admission type:"
^IBA(364.7,1307,3,2,0)="1 - Emergency"
^IBA(364.7,1307,3,3,0)="2 - Urgent"
^IBA(364.7,1307,3,4,0)="3 - Elective"
^IBA(364.7,1307,3,5,0)="4 - Newborn"
^IBA(364.7,1307,3,6,0)="5 - Trauma"
^IBA(364.7,1307,3,7,0)="6-8 - Reserved"
^IBA(364.7,1307,3,8,0)="9 - Information not available"
^IBA(364.7,1307,3,9,0)=" "
^IBA(364.7,1307,3,10,0)="esg - 8/15/07 - FL-14 is always required - even for outpatients - so if "
^IBA(364.7,1307,3,11,0)="IBXDATA does not have a value, set it equal to ""9"" for local printing."
^IBA(364.7,1308,0)="1608^N^80^^^^N"
^IBA(364.7,1308,3,0)="^^21^21^3061109^"
^IBA(364.7,1308,3,1,0)="Source of admission:"
^IBA(364.7,1308,3,2,0)="1 - Physician referral"
^IBA(364.7,1308,3,3,0)="2 - Clinic referral"
^IBA(364.7,1308,3,4,0)="3 - HMO referral"
^IBA(364.7,1308,3,5,0)="4 - Transfer from a hospital"
^IBA(364.7,1308,3,6,0)="5 - Transfer from a skilled nursing facility"
^IBA(364.7,1308,3,7,0)="6 - Transfer from another health care facility"
^IBA(364.7,1308,3,8,0)="7 - Emergency room"
^IBA(364.7,1308,3,9,0)="8 - Court / Law enforcement"
^IBA(364.7,1308,3,10,0)="9 - Information not available"
^IBA(364.7,1308,3,11,0)="A - Transfer from a critical access hospital"
^IBA(364.7,1308,3,12,0)="B - Transfer from another home health agency"
^IBA(364.7,1308,3,13,0)="C - Readmission to same home health agency"
^IBA(364.7,1308,3,14,0)="D - Transfer from hospital inpatient in the same facility,"
^IBA(364.7,1308,3,15,0)="    resulting in a separate claim to the payer"
^IBA(364.7,1308,3,16,0)="Codes for Newborn admission type:"
^IBA(364.7,1308,3,17,0)="1 - Normal delivery"
^IBA(364.7,1308,3,18,0)="2 - Premature delivery"
^IBA(364.7,1308,3,19,0)="3 - Sick baby"
^IBA(364.7,1308,3,20,0)="4 - Extramural birth"
^IBA(364.7,1308,3,21,0)="5-9 - Reserved"
^IBA(364.7,1309,0)="1609^N^81^^^^N"
^IBA(364.7,1309,1)="K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) S IBXDATA=$S($P(IBXDATA,""."",2)'="""":$$TIME^IBCF3(IBXDATA),1:"""")"
^IBA(364.7,1309,3,0)="^364.73^2^2^3061109^^^^"
^IBA(364.7,1309,3,1,0)="If this is an outpatient bill, no output.  For inpatient bills, output the"
^IBA(364.7,1309,3,2,0)="time portion of the discharge date/time or 99 if no time found."
^IBA(364.7,1310,0)="1610^N^9^^^^N"
^IBA(364.7,1311,0)="1611^N^280^^^^N"
^IBA(364.7,1311,1)="S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA=""MEDICARE"" S IBXSAVE(""CADR_NAME"")=$G(IBXDATA)"
^IBA(364.7,1311,3,0)="^^1^1^3061117^"
^IBA(364.7,1311,3,1,0)="Extract the current payer name and save it in IBXSAVE."
^IBA(364.7,1312,0)="1612^N^192^^^^N"
^IBA(364.7,1312,1)="N Y,Z K IBXSAVE(""CADR"") I $O(IBXDATA(0)) S Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="""" $P(IBXSAVE(""CADR""),U,6)=Y F Z=1:1:5,7 S:$D(IBXDATA(Z)) $P(IBXSAVE(""CADR""),U,Z)=IBXDATA(Z)"
^IBA(364.7,1312,3,0)="^^10^10^3061117^"
^IBA(364.7,1312,3,1,0)="Extract the current payer address and store the address components in the "
^IBA(364.7,1312,3,2,0)="IBXSAVE(""CADR"") pieced string variable with the following pieces:"
^IBA(364.7,1312,3,3,0)=" "
^IBA(364.7,1312,3,4,0)="[1] address line 1"
^IBA(364.7,1312,3,5,0)="[2] address line 2"
^IBA(364.7,1312,3,6,0)="[3] address line 3"
^IBA(364.7,1312,3,7,0)="[4] city"
^IBA(364.7,1312,3,8,0)="[5] pointer to the state file"
^IBA(364.7,1312,3,9,0)="[6] external zip code with dashes"
^IBA(364.7,1312,3,10,0)="[7] claim office ID (not used)"
^IBA(364.7,1313,0)="1613^N^5^^^^N"
^IBA(364.7,1313,1)="D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,,2)"
^IBA(364.7,1313,3,0)="^^2^2^3061117^"
^IBA(364.7,1313,3,1,0)="Calls CIADDR^IBCEF1 where the IBXDATA formatted array is returned.  The "
^IBA(364.7,1313,3,2,0)="IBXSAVE array elements for the current payer name and address are killed."
^IBA(364.7,1314,0)="1614^N^5^^^^N"
^IBA(364.7,1314,1)="I $D(IBXSAVE(""DX"",12)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",12),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1314,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1314,3,1,0)="If there is a twelth diagnosis, print its name."
^IBA(364.7,1315,0)="1615^N^5^^^^N"
^IBA(364.7,1315,1)="I $D(IBXSAVE(""DX"",13)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",13),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1315,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1315,3,1,0)="If there is a thirteenth diagnosis, print its name."
^IBA(364.7,1316,0)="1616^N^12^^^^N"
^IBA(364.7,1316,1)="N Z,Z0,Z1 S Z=0 F  S Z=$O(IBFL(39,Z)) K:'Z IBFL(39) Q:'Z  S Z0=$P(IBFL(39,Z),U,2),Z1=$P(IBFL(39,Z),U,3),IBXSAVE(""VC"",Z)=$P(IBFL(39,Z),U,1)_U_$S(Z1:$$DOL^IBCEF77(Z0,10),1:$J(Z0,8))"
^IBA(364.7,1316,3,0)="^^11^11^3061110^"
^IBA(364.7,1316,3,1,0)="Save all value codes extracted into IBXSAVE(""VC"") array for later use.  "
^IBA(364.7,1316,3,2,0)="Format the value as we loop through them."
^IBA(364.7,1316,3,3,0)=" "
^IBA(364.7,1316,3,4,0)="IBXSAVE(""VC"",z) = [1] VALUE CODE"
^IBA(364.7,1316,3,5,0)="                  [2] FORMATTED VALUE AMOUNT"
^IBA(364.7,1316,3,6,0)=" "
^IBA(364.7,1316,3,7,0)="Dollar amounts are formatted using all 10 characters with the decimal "
^IBA(364.7,1316,3,8,0)="point implied by the dollars/cents delimiter on the pre-printed UB form."
^IBA(364.7,1316,3,9,0)=" "
^IBA(364.7,1316,3,10,0)="Non-dollar amounts are formatted right-justified to the left of the "
^IBA(364.7,1316,3,11,0)="dollars/cents delimiter on the pre-printed UB form (thus 8 characters)."
^IBA(364.7,1317,0)="1617^N^5^^^^N"
^IBA(364.7,1317,1)="N Z,DATA,CODE I $D(IBXSAVE(""VC"")) K IBXSAVE(""VCS"") S Z=0 F  S Z=$O(IBXSAVE(""VC"",Z)) Q:'Z  S DATA=$G(IBXSAVE(""VC"",Z)),CODE=$P(DATA,U,1) I CODE'="""" S IBXSAVE(""VCS"","" ""_CODE,Z)=DATA"
^IBA(364.7,1317,3,0)="^^2^2^3061110^"
^IBA(364.7,1317,3,1,0)="If the ""VC"" value code array exists, then sort it by value code in the "
^IBA(364.7,1317,3,2,0)="IBXSAVE(""VCS"") array."
^IBA(364.7,1318,0)="1618^N^5^^^^N"
^IBA(364.7,1318,1)="N CODE,CT,Z I $D(IBXSAVE(""VCS"")) K IBXSAVE(""VC"") S CODE="""",CT=0 F  S CODE=$O(IBXSAVE(""VCS"",CODE)) Q:CODE=""""  S Z=0 F  S Z=$O(IBXSAVE(""VCS"",CODE,Z)) Q:'Z  S CT=CT+1,IBXSAVE(""VC"",CT)=IBXSAVE(""VCS"",CODE,Z) K IBXSAVE(""VCS"",CODE,Z)"
^IBA(364.7,1318,3,0)="^^2^2^3061110^"
^IBA(364.7,1318,3,1,0)="If the value codes exist and have been sorted into the IBXSAVE(""VCS"") "
^IBA(364.7,1318,3,2,0)="array, then loop thru that array and re-build the IBXSAVE(""VC"") array."
^IBA(364.7,1319,0)="1619^N^5^^^^N"
^IBA(364.7,1319,1)="N Z,Z0 S Z0=0 F Z=1:3:10 Q:'$D(IBXSAVE(""VC"",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE(""VC"",Z),U)"
^IBA(364.7,1319,3,0)="^364.73^3^3^3061110^^^^"
^IBA(364.7,1319,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,1319,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,1319,3,3,0)="the first piece of each occurrence found."
^IBA(364.7,1320,0)="1620^N^5^^^^N"
^IBA(364.7,1320,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=1:3 Q:$G(IBXSAVE(""VC"",Z))=""""  S Z0=Z0+1,Z1=$P(IBXSAVE(""VC"",Z),U,2) S:Z'>10 IBXDATA(Z0)=Z1 D:Z>10 XVAL^IBCEF3(IBXSAVE(""VC"",Z),Z) K IBXSAVE(""VC"",Z)"
^IBA(364.7,1320,3,0)="^364.73^3^3^3061110^^^^"
^IBA(364.7,1320,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,1320,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,1320,3,3,0)="the second piece of each occurrence found."
^IBA(364.7,1321,0)="1621^N^5^^^^N"
^IBA(364.7,1321,1)="N Z,Z0 S Z0=0 F Z=2:3:11 Q:'$D(IBXSAVE(""VC"",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE(""VC"",Z),U)"
^IBA(364.7,1321,3,0)="^364.73^3^3^3061110^^^^"
^IBA(364.7,1321,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,1321,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,1321,3,3,0)="the first piece of each occurrence found."
^IBA(364.7,1322,0)="1622^N^5^^^^N"
^IBA(364.7,1322,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=2:3 Q:$G(IBXSAVE(""VC"",Z))=""""  S Z0=Z0+1,Z1=$P(IBXSAVE(""VC"",Z),U,2) S:Z'>11 IBXDATA(Z0)=Z1 D:Z>11 XVAL^IBCEF3(IBXSAVE(""VC"",Z),Z) K IBXSAVE(""VC"",Z)"
^IBA(364.7,1322,3,0)="^364.73^3^3^3061110^^^^"
^IBA(364.7,1322,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,1322,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,1322,3,3,0)="the second piece of each occurrence found."
^IBA(364.7,1323,0)="1623^N^5^^^^N"
^IBA(364.7,1323,1)="N Z,Z0 S Z0=0 F Z=3:3:12 Q:'$D(IBXSAVE(""VC"",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE(""VC"",Z),U)"
^IBA(364.7,1323,3,0)="^364.73^4^4^3061110^^^^"
^IBA(364.7,1323,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,1323,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,1323,3,3,0)="the first piece of each occurrence found.  If there are more than 12"
^IBA(364.7,1323,3,4,0)="value codes, they are stored in the overflow array."
^IBA(364.7,1324,0)="1624^N^5^^^^N"
^IBA(364.7,1324,1)="N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=3:3 Q:$G(IBXSAVE(""VC"",Z))=""""  S Z0=Z0+1,Z1=$P(IBXSAVE(""VC"",Z),U,2) S:Z'>12 IBXDATA(Z0)=Z1 D:Z>12 XVAL^IBCEF3(IBXSAVE(""VC"",Z),Z) K IBXSAVE(""VC"",Z)"
^IBA(364.7,1324,3,0)="^364.73^3^3^3061110^^^^"
^IBA(364.7,1324,3,1,0)="This data element relies on the array IBXSAVE(""VC"") previously extracted."
^IBA(364.7,1324,3,2,0)="This is a group data element and can have multiple occurrences.  Output is"
^IBA(364.7,1324,3,3,0)="the second piece of each occurrence found."
^IBA(364.7,1325,0)="1625^N^5^^^^N"
^IBA(364.7,1325,1)="K IBXDATA I $G(IBXSAVE(""CC"",1))'="""" S IBXDATA=IBXSAVE(""CC"",1) K IBXSAVE(""CC"",1)"
^IBA(364.7,1325,3,0)="^364.73^7^7^3061113^^^^"
^IBA(364.7,1325,3,1,0)="Data element's array reference is IBFL(24), not default of IBXDATA.  This is"
^IBA(364.7,1325,3,2,0)="a group data element so more than 1 occurrence of a value is possible for"
^IBA(364.7,1325,3,3,0)="the data element in the IBFL(24) array.  All occurrences of the data element"
^IBA(364.7,1325,3,4,0)="are saved in the IBXSAVE(""CC"",n) array and only IBXSAVE(""CC"",1) is output"
^IBA(364.7,1325,3,5,0)="in this field. Note: hard code is used to output the"
^IBA(364.7,1325,3,6,0)="codes that exceed the # that will fit on one page if multiple pages of bill"
^IBA(364.7,1325,3,7,0)="are printed."
^IBA(364.7,1326,0)="1626^N^11^^^^N"
^IBA(364.7,1326,1)="N Z S Z=0 F  S Z=$O(IBFL(24,Z)) Q:Z=""""  S IBXSAVE(""CCU"","" ""_$G(IBFL(24,Z)))="""""
^IBA(364.7,1327,0)="1627^N^5^^^^N"
^IBA(364.7,1327,1)="K IBXDATA I $G(IBXSAVE(""CC"",2))'="""" S IBXDATA=IBXSAVE(""CC"",2) K IBXSAVE(""CC"",2)"
^IBA(364.7,1327,3,0)="^364.73^2^2^3061113^^^^"
^IBA(364.7,1327,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1327,3,2,0)="This field reports the data in the second occurrence of the array."
^IBA(364.7,1328,0)="1628^N^5^^^^N"
^IBA(364.7,1328,1)="K IBXDATA I $G(IBXSAVE(""CC"",3))'="""" S IBXDATA=IBXSAVE(""CC"",3) K IBXSAVE(""CC"",3)"
^IBA(364.7,1328,3,0)="^364.73^2^2^3061113^^^^"
^IBA(364.7,1328,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1328,3,2,0)="This field reports the data in the third occurrence of the array."
^IBA(364.7,1329,0)="1629^N^5^^^^N"
^IBA(364.7,1329,1)="K IBXDATA I $G(IBXSAVE(""CC"",4))'="""" S IBXDATA=IBXSAVE(""CC"",4) K IBXSAVE(""CC"",4)"
^IBA(364.7,1329,3,0)="^364.73^2^2^3061113^^^^"
^IBA(364.7,1329,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1329,3,2,0)="This field reports the data in the fourth occurrence of the array."
^IBA(364.7,1330,0)="1630^N^5^^^^N"
^IBA(364.7,1330,1)="K IBXDATA I $G(IBXSAVE(""CC"",5))'="""" S IBXDATA=IBXSAVE(""CC"",5) K IBXSAVE(""CC"",5)"
^IBA(364.7,1330,3,0)="^364.73^2^2^3061113^^^^"
^IBA(364.7,1330,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1330,3,2,0)="This field reports the data in the fifth occurrence of the array."
^IBA(364.7,1331,0)="1631^N^5^^^^N"
^IBA(364.7,1331,1)="K IBXDATA I $G(IBXSAVE(""CC"",6))'="""" S IBXDATA=IBXSAVE(""CC"",6) K IBXSAVE(""CC"",6)"
^IBA(364.7,1331,3,0)="^364.73^2^2^3061113^^^^"
^IBA(364.7,1331,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1331,3,2,0)="This field reports the data in the sixth occurrence of the array."
^IBA(364.7,1332,0)="1632^N^5^^^^N"
^IBA(364.7,1332,1)="K IBXDATA I $G(IBXSAVE(""CC"",7))'="""" S IBXDATA=IBXSAVE(""CC"",7) K IBXSAVE(""CC"",7)"
^IBA(364.7,1332,3,0)="^^2^2^3061113^"
^IBA(364.7,1332,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1332,3,2,0)="This field reports the data in the seventh occurrence of the array."
^IBA(364.7,1333,0)="1633^N^5^^^^N"
^IBA(364.7,1333,1)="K IBXDATA I $G(IBXSAVE(""CC"",8))'="""" S IBXDATA=IBXSAVE(""CC"",8) K IBXSAVE(""CC"",8)"
^IBA(364.7,1333,3,0)="^^2^2^3061113^"
^IBA(364.7,1333,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1333,3,2,0)="This field reports the data in the eighth occurrence of the array."
^IBA(364.7,1334,0)="1634^N^5^^^^N"
^IBA(364.7,1334,1)="K IBXDATA I $G(IBXSAVE(""CC"",9))'="""" S IBXDATA=IBXSAVE(""CC"",9) K IBXSAVE(""CC"",9)"
^IBA(364.7,1334,3,0)="^^2^2^3061113^"
^IBA(364.7,1334,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1334,3,2,0)="This field reports the data in the ninth occurance of the array."
^IBA(364.7,1335,0)="1635^N^5^^^^N"
^IBA(364.7,1335,1)="K IBXDATA I $G(IBXSAVE(""CC"",10))'="""" S IBXDATA=IBXSAVE(""CC"",10) K IBXSAVE(""CC"",10)"
^IBA(364.7,1335,3,0)="^^2^2^3061113^"
^IBA(364.7,1335,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1335,3,2,0)="This field reports the data in the tenth occurance of the array."
^IBA(364.7,1336,0)="1636^N^5^^^^N"
^IBA(364.7,1336,1)="S:$G(IBXSAVE(""CC"",11))'="""" IBXDATA=IBXSAVE(""CC"",11) K IBXSAVE(""CC"",11) S Z=0 F  S Z=$O(IBXSAVE(""CC"",Z)) Q:'Z  D XCC^IBCEF3(IBXSAVE(""CC"",Z),Z)"
^IBA(364.7,1336,3,0)="^364.73^4^4^3061113^^^^"
^IBA(364.7,1336,3,1,0)="Data element relies on the data in array IBXSAVE(""CC"") extracted previously."
^IBA(364.7,1336,3,2,0)="This field reports the data in the eleventh occurrence of the array."
^IBA(364.7,1336,3,3,0)="If there are more than 11 condition codes present, save them in the global"
^IBA(364.7,1336,3,4,0)="overflow array."
^IBA(364.7,1337,0)="1637^N^88^^^^N"
^IBA(364.7,1337,1)="S:$G(IBXDATA)'="""" IBXDATA=$$STATE^IBCEFG1($P(IBXDATA,U,2))"
^IBA(364.7,1337,3,0)="^^1^1^3061113^"
^IBA(364.7,1337,3,1,0)="2 char state abbreviation where the accident occured."
^IBA(364.7,1338,0)="1638^N^5^^^^N"
^IBA(364.7,1338,1)="K IBXDATA"
^IBA(364.7,1338,3,0)="^^3^3^3061120^"
^IBA(364.7,1338,3,1,0)="FL-30"
^IBA(364.7,1338,3,2,0)="Reserved for assignment by the NUBC.  Not used.  11 positions upper "
^IBA(364.7,1338,3,3,0)="line.  13 positions lower line."
^IBA(364.7,1339,0)="1639^N^5^^^^N"
^IBA(364.7,1339,1)="N IBZ S (IBZ,IBXDATA)="""" D F^IBCEF(""N-ORGANIZATION NPI CODES"",""IBZ"",,IBXIEN) S IBXDATA=$P(IBZ,U,3),IBXSAVE(""NPIBILL"")=IBXDATA"
^IBA(364.7,1339,3,0)="^^1^1^3061116^"
^IBA(364.7,1339,3,1,0)="NPI - Billing Provider."
^IBA(364.7,1340,0)="1640^N^194^^^^N"
^IBA(364.7,1340,1)="N Z,Z0 M Z0=IBXDATA K IBXDATA S Z="""" F  S Z=$O(Z0(Z)) Q:'Z  I $D(^DGCR(399,IBXIEN,""I""_Z)) S IBXDATA(Z)=$S(Z<3&$$WNRBILL^IBEFUNC(IBXIEN,Z):""MEDICARE"",1:$P(Z0(Z),U))"
^IBA(364.7,1340,3,0)="^364.73^4^4^3061116^^^^"
^IBA(364.7,1340,3,1,0)="The first 15 characters of the name of the primary, secondary, and tertiary"
^IBA(364.7,1340,3,2,0)="insurance companies along with the claim office number and payer id, if"
^IBA(364.7,1340,3,3,0)="known.  If the primary or secondary insurance is MEDICARE WNR, output"
^IBA(364.7,1340,3,4,0)="'MEDICARE'."
^IBA(364.7,1341,0)="1641^N^5^^^^N"
^IBA(364.7,1341,1)="K IBXDATA"
^IBA(364.7,1341,3,0)="^364.73^1^1^3061128^^^^"
^IBA(364.7,1341,3,1,0)="Field reserved to contain National Plan ID. Currently blank."
^IBA(364.7,1342,0)="1642^N^23^^^^N"
^IBA(364.7,1342,1)="N Z,Z0 S Z0=$S(IBXDATA&'$P($G(^DGCR(399,IBXIEN,""U"")),U,7):""I"",1:""Y"") F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,""I""_Z))) S IBXDATA(Z)=Z0"
^IBA(364.7,1342,3,0)="^364.73^2^2^3061116^^^^"
^IBA(364.7,1342,3,1,0)="For each insurance on file in the bill, print the ROI indicator = 'I' if"
^IBA(364.7,1342,3,2,0)="the record is sensitive and there's no ROI on file, or 'Y' otherwise."
^IBA(364.7,1343,0)="1643^N^24^^^^N"
^IBA(364.7,1343,1)="N Z,Z0 S Z0=$S(IBXDATA=""""!(""Nn0""'[IBXDATA):""Y"",1:""N"") F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,""I""_Z))) S IBXDATA(Z)=Z0"
^IBA(364.7,1343,3,0)="^364.73^3^3^3061116^^^^"
^IBA(364.7,1343,3,1,0)="For each insurance on file in the bill, print the ASSIGNMENT OF BENEFITS"
^IBA(364.7,1343,3,2,0)="indicator = 'Y' if the data element value returned is null or is not 0,'n'"
^IBA(364.7,1343,3,3,0)="or 'N', otherwise print 'N'."
^IBA(364.7,1344,0)="1644^N^156^^^^N"
^IBA(364.7,1344,1)="N Z F Z=1:1:3 K:'$D(^DGCR(399,IBXIEN,""I""_Z)) IBXDATA(Z) I $D(IBXDATA(Z)) S IBXDATA(Z)=$$DOL^IBCEF77(IBXDATA(Z),10)"
^IBA(364.7,1344,3,0)="^364.73^2^2^3061116^^^^"
^IBA(364.7,1344,3,1,0)="If the insurance company for the prior payment does not exist for the bill,"
^IBA(364.7,1344,3,2,0)="don't output the prior payment information."
^IBA(364.7,1345,0)="1645^N^152^^^^N"
^IBA(364.7,1345,1)="N Z,Z0,IBZ S IBZ=$G(IBXDATA) K IBXDATA S Z0=$$COBN^IBCEF(IBXIEN),IBXDATA(Z0)=$$DOL^IBCEF77(+IBZ,11) F Z=1:1:3 I Z'=Z0,$D(^DGCR(399,IBXIEN,""I""_Z)) S IBXDATA(Z)=$$DOL^IBCEF77(0,11)"
^IBA(364.7,1345,3,0)="^364.73^2^2^3061116^^^^"
^IBA(364.7,1345,3,1,0)="Set the estimated amt for the current insurance equal to the balance on the"
^IBA(364.7,1345,3,2,0)="bill."
^IBA(364.7,1346,0)="1646^N^5^^^^N"
^IBA(364.7,1346,1)="I $D(IBXSAVE(""DX"",2)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",2),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1346,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1346,3,1,0)="If there is a second diagnosis, print its name."
^IBA(364.7,1347,0)="1647^N^5^^^^N"
^IBA(364.7,1347,1)="I $D(IBXSAVE(""DX"",3)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",3),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1347,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1347,3,1,0)="If there is a third diagnosis, print its name."
^IBA(364.7,1348,0)="1648^N^5^^^^N"
^IBA(364.7,1348,1)="I $D(IBXSAVE(""DX"",4)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",4),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1348,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1348,3,1,0)="If there is a fourth diagnosis, print its name."
^IBA(364.7,1349,0)="1649^N^5^^^^N"
^IBA(364.7,1349,1)="I $D(IBXSAVE(""DX"",5)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",5),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1349,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1349,3,1,0)="If there is a fifth diagnosis, print its name."
^IBA(364.7,1350,0)="1650^N^5^^^^N"
^IBA(364.7,1350,1)="I $D(IBXSAVE(""DX"",6)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",6),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1350,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1350,3,1,0)="If there is a sixth diagnosis, print its name."
^IBA(364.7,1351,0)="1651^N^5^^^^N"
^IBA(364.7,1351,1)="I $D(IBXSAVE(""DX"",7)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",7),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1351,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1351,3,1,0)="If there is a seventh diagnosis, print its name."
^IBA(364.7,1352,0)="1652^N^5^^^^N"
^IBA(364.7,1352,1)="I $D(IBXSAVE(""DX"",8)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",8),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1352,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1352,3,1,0)="If there is an eighth diagnosis, print its name."
^IBA(364.7,1353,0)="1653^N^5^^^^N"
^IBA(364.7,1353,1)="I $D(IBXSAVE(""DX"",9)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",9),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1353,3,0)="^364.73^1^1^3140815^^^"
^IBA(364.7,1353,3,1,0)="If there is a ninth diagnosis, print its name."
^IBA(364.7,1354,0)="1654^N^5^^^^N"
^IBA(364.7,1354,1)="I $D(IBXSAVE(""DX"",10)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",10),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1354,3,0)="^364.73^1^1^3140815^^^"
^IBA(364.7,1354,3,1,0)="If there is a tenth diagnosis, print its name."
^IBA(364.7,1355,0)="1655^N^5^^^^N"
^IBA(364.7,1355,1)="I $D(IBXSAVE(""DX"",14)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",14),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1355,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1355,3,1,0)="If there is a fourteenth diagnosis, print its name."
^IBA(364.7,1356,0)="1656^N^5^^^^N"
^IBA(364.7,1356,1)="I $D(IBXSAVE(""DX"",15)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",15),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1356,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1356,3,1,0)="If there is a fifteenth diagnosis, print its name."
^IBA(364.7,1357,0)="1657^N^5^^^^N"
^IBA(364.7,1357,1)="I $D(IBXSAVE(""DX"",16)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",16),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1357,3,0)="^364.73^1^1^3140815^^^"
^IBA(364.7,1357,3,1,0)="If there is a sixteenth diagnosis, print its name."
^IBA(364.7,1358,0)="1658^N^5^^^^N"
^IBA(364.7,1358,1)="I $D(IBXSAVE(""DX"",17)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",17),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1358,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1358,3,1,0)="If there is a seventeenth diagnosis, print its name."
^IBA(364.7,1359,0)="1659^N^5^^^^N"
^IBA(364.7,1359,1)="I $D(IBXSAVE(""DX"",18)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE(""DX"",18),$$BDATE^IBACSV(IBXIEN)),U),""."")"
^IBA(364.7,1359,3,0)="^364.73^2^2^3140815^^^^"
^IBA(364.7,1359,3,1,0)="If there is a eighteenth diagnosis, print its name.  Check for more than "
^IBA(364.7,1359,3,2,0)="17 other diagnoses on file. If there is, output on new pg."
^IBA(364.7,1360,0)="1660^N^195^^^^N"
^IBA(364.7,1360,1)="K:'$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE(""NPIBILL""))) IBXDATA K IBXSAVE(""NPIBILL"")"
^IBA(364.7,1361,0)="1661^N^196^^^^N"
^IBA(364.7,1361,1)="N Z F Z=1:1:3 I $G(IBXDATA(Z))'="""",IBXDATA(Z)'["","" S Q=$$NAME^IBCEFG1(IBXDATA(Z),1),IBXDATA(Z)=$P(Q,U)_$S($P(Q,U,2)'="""":"",""_$P(Q,U,2),1:"""")"
^IBA(364.7,1362,0)="1662^N^197^^^^N"
^IBA(364.7,1362,1)="N Z,FLG S FLG=$S($$ISRX^IBCEF1(IBXIEN):2,1:1) F Z=1:1:3 I $D(IBXDATA(Z)) S IBXDATA(Z)=$$PRELCNV^IBCNSP1(IBXDATA(Z),FLG)"
^IBA(364.7,1362,3,0)="^364.73^5^5^3080407^^^"
^IBA(364.7,1362,3,1,0)="IB patch 377"
^IBA(364.7,1362,3,2,0)="Convert the VistA codes into HIPAA or NCPDP codes."
^IBA(364.7,1362,3,3,0)="HIPAA codes are the same as EDI codes."
^IBA(364.7,1362,3,4,0)="FLG variable controls conversion:"
^IBA(364.7,1362,3,5,0)=" 1 - convert to HIPAA, 2 - convert to NCPDP."
^IBA(364.7,1363,0)="1663^N^198^^^^N"
^IBA(364.7,1364,0)="1664^N^199^^^^N"
^IBA(364.7,1364,1)="N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 S IBXDATA(Z)=$G(IBXDATA(Z))_"" "" I $D(^DGCR(399,IBXIEN,""I""_Z)),$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)="""""
^IBA(364.7,1364,3,0)="^364.73^3^3^3061117^^^^"
^IBA(364.7,1364,3,1,0)="If the insurance is MEDICARE WNR, do not output the group name."
^IBA(364.7,1364,3,2,0)="Add a space to the end of the Group Name to separate it from"
^IBA(364.7,1364,3,3,0)="the next field , Group Number."
^IBA(364.7,1365,0)="1665^N^200^^^^N"
^IBA(364.7,1365,1)="N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 I $D(^DGCR(399,IBXIEN,""I""_Z)),Z0=Z,$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)="""""
^IBA(364.7,1365,3,0)="^364.73^1^1^3061117^^^^"
^IBA(364.7,1365,3,1,0)="If the insurance is MEDICARE WNR, do not output the group number."
^IBA(364.7,1366,0)="1666^N^359^^^^N"
^IBA(364.7,1367,0)="1667^N^5^^^^N"
^IBA(364.7,1367,1)="N Z,Z0 S Z0=$P($G(^DGCR(399,IBXIEN,""UF3"")),U,4,6) K IBXDATA F Z=1,2,3 S IBXDATA(Z)=$P(Z0,U,Z)"
^IBA(364.7,1367,3,0)="^^1^1^3061117^"
^IBA(364.7,1367,3,1,0)="Document control numbers from file 399/fields 453-455."
^IBA(364.7,1368,0)="1668^N^5^^^^N"
^IBA(364.7,1368,1)="N Z,IBZ D:'$D(IBXSAVE(""OIEMP"")) F^IBCEF(""N-ALL INSURED EMPLOYER INFO"",""IBZ"",,IBXIEN) K IBXDATA M:$O(IBZ("""")) IBXSAVE(""OIEMP"")=IBZ F Z=1:1:3 I $D(IBXSAVE(""OIEMP"",Z)) S IBXDATA(Z)=$P(IBXSAVE(""OIEMP"",Z),U)"
^IBA(364.7,1368,3,0)="^364.73^3^3^3061117^^^^"
^IBA(364.7,1368,3,1,0)="If the array IBXSAVE(""OIEMP"") doesn't already exist, extract it.  For each"
^IBA(364.7,1368,3,2,0)="insured on the bill, extract the first piece of the data element for output"
^IBA(364.7,1368,3,3,0)="in this field."
^IBA(364.7,1369,0)="1669^N^5^^^^N"
^IBA(364.7,1369,1)="K IBXDATA"
^IBA(364.7,1369,3,0)="^^3^3^3061120^"
^IBA(364.7,1369,3,1,0)="FL-30"
^IBA(364.7,1369,3,2,0)="Reserved for assignment by the NUBC.  Not used.  11 positions upper "
^IBA(364.7,1369,3,3,0)="line.  13 positions lower line."
^IBA(364.7,1370,0)="1670^N^85^^^^N"
^IBA(364.7,1370,1)="S IBXDATA=$TR(IBXDATA,""."")"
^IBA(364.7,1370,3,0)="^^1^1^3140815^"
^IBA(364.7,1370,3,1,0)="Remove decimal from Admitting diagnosis."
^IBA(364.7,1371,0)="1671^N^5^^^^N"
^IBA(364.7,1371,1)="K IBXDATA N IBZ,Z,Z0,C D F^IBCEF(""N-DIAGNOSES"",""IBZ"",,IBXIEN) S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I $$ECODE^IBCEU4(+IBZ(Z),.Z0),$G(Z0)'="""" S C=C+1,IBXSAVE(""DX-E"",C)=Z0_U_$$GETPOA^IBCEU4($P(IBZ(Z),U,2),1) S:C=1 IBXDATA=$TR(Z0,""."") Q:C=3"
^IBA(364.7,1371,3,0)="^364.73^3^3^3140815^^^^"
^IBA(364.7,1371,3,1,0)="This data element creates an array containing E-code diagnoses for"
^IBA(364.7,1371,3,2,0)="the bill and corresponding POA indicators. IBXDATA is set to the"
^IBA(364.7,1371,3,3,0)="first 'E-code' dx found. ICD-9 only."
^IBA(364.7,1372,0)="1672^N^5^^^^N"
^IBA(364.7,1372,1)="K IBXDATA I $D(IBXSAVE(""PROC"",1)) S IBXDATA=$P(IBXSAVE(""PROC"",1),U,2) K IBXSAVE(""PROC"",1)"
^IBA(364.7,1372,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1372,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1372,3,2,0)="previously extracted.  If the first occurrence exists, output the date"
^IBA(364.7,1372,3,3,0)="found in its second '^' piece."
^IBA(364.7,1373,0)="1673^N^5^^^^N"
^IBA(364.7,1373,1)="K IBXDATA I $D(IBXSAVE(""PROC"",2)) S IBXDATA=$P(IBXSAVE(""PROC"",2),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,1373,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1373,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1373,3,2,0)="previously extracted.  If the second occurrence exists, output the code"
^IBA(364.7,1373,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,1374,0)="1674^N^5^^^^N"
^IBA(364.7,1374,1)="K IBXDATA I $D(IBXSAVE(""PROC"",2)) S IBXDATA=$P(IBXSAVE(""PROC"",2),U,2) K IBXSAVE(""PROC"",2)"
^IBA(364.7,1374,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1374,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1374,3,2,0)="previously extracted.  If the second occurrence exists, output the date"
^IBA(364.7,1374,3,3,0)="found in its second '^' piece."
^IBA(364.7,1375,0)="1675^N^5^^^^N"
^IBA(364.7,1375,1)="K IBXDATA I $D(IBXSAVE(""PROC"",3)) S IBXDATA=$P(IBXSAVE(""PROC"",3),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,1375,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1375,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1375,3,2,0)="previously extracted.  If the third occurrence exists, output the code"
^IBA(364.7,1375,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,1376,0)="1676^N^5^^^^N"
^IBA(364.7,1376,1)="K IBXDATA I $D(IBXSAVE(""PROC"",3)) S IBXDATA=$P(IBXSAVE(""PROC"",3),U,2) K IBXSAVE(""PROC"",3)"
^IBA(364.7,1376,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1376,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1376,3,2,0)="previously extracted.  If the third occurrence exists, output the date"
^IBA(364.7,1376,3,3,0)="found in its second '^' piece."
^IBA(364.7,1377,0)="1677^N^5^^^^N"
^IBA(364.7,1377,1)="K IBXDATA I $D(IBXSAVE(""PROC"",4)) S IBXDATA=$P(IBXSAVE(""PROC"",4),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,1377,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1377,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1377,3,2,0)="previously extracted.  If the fourth occurrence exists, output the code"
^IBA(364.7,1377,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,1378,0)="1678^N^5^^^^N"
^IBA(364.7,1378,1)="K IBXDATA I $D(IBXSAVE(""PROC"",4)) S IBXDATA=$P(IBXSAVE(""PROC"",4),U,2) K IBXSAVE(""PROC"",4)"
^IBA(364.7,1378,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1378,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1378,3,2,0)="previously extracted.  If the fourth occurrence exists, output the date"
^IBA(364.7,1378,3,3,0)="found in its second '^' piece."
^IBA(364.7,1379,0)="1679^N^5^^^^N"
^IBA(364.7,1379,1)="K IBXDATA I $D(IBXSAVE(""PROC"",5)) S IBXDATA=$P(IBXSAVE(""PROC"",5),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,1379,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1379,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1379,3,2,0)="previously extracted.  If the fifth occurrence exists, output the code"
^IBA(364.7,1379,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,1380,0)="1680^N^5^^^^N"
^IBA(364.7,1380,1)="K IBXDATA I $D(IBXSAVE(""PROC"",5)) S IBXDATA=$P(IBXSAVE(""PROC"",5),U,2) K IBXSAVE(""PROC"",5)"
^IBA(364.7,1380,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1380,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1380,3,2,0)="previously extracted.  If the fifth occurrence exists, output the date"
^IBA(364.7,1380,3,3,0)="found in its second '^' piece."
^IBA(364.7,1381,0)="1681^N^5^^^^N"
^IBA(364.7,1381,1)="K IBXDATA I $D(IBXSAVE(""PROC"",6)) S IBXDATA=$P(IBXSAVE(""PROC"",6),U),IBXDATA=$S(IBXDATA[""ICD0""!(IBXDATA[""ICPT""):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)"
^IBA(364.7,1381,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1381,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1381,3,2,0)="previously extracted.  If the sixth occurrence exists, output the code"
^IBA(364.7,1381,3,3,0)="referenced by its first '^' piece."
^IBA(364.7,1382,0)="1682^N^5^^^^N"
^IBA(364.7,1382,1)="N Z,Q,R S:$D(IBXSAVE(""PROC"",6)) IBXDATA=$P(IBXSAVE(""PROC"",6),U,2) S Z=6 F  S Z=$O(IBXSAVE(""PROC"",Z)) Q:'Z  S R=IBXSAVE(""PROC"",Z),Q=$P(R,U,2) D XPROC^IBCEF3($S(R[""ICPT""!(R[""ICD0""):$P($$PRCD^IBCEF1(R),U),1:$P(R,U))_U_Q,Z)"
^IBA(364.7,1382,3,0)="^364.73^3^3^3061120^^^^"
^IBA(364.7,1382,3,1,0)="This data element relies on the existence of the IBXSAVE(""PROC"") array"
^IBA(364.7,1382,3,2,0)="previously extracted.  If the sixth occurrence exists, output the date"
^IBA(364.7,1382,3,3,0)="found in its second '^' piece."
^IBA(364.7,1383,0)="1683^N^5^^^^N"
^IBA(364.7,1383,1)="I $D(IBXSAVE(""DX"",1)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",1),U,2),1:"" "") K IBXSAVE(""DX"",1)"
^IBA(364.7,1383,3,0)="^^3^3^3061121^"
^IBA(364.7,1383,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1383,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1383,3,3,0)="POA indicator is available."
^IBA(364.7,1384,0)="1684^N^5^^^^N"
^IBA(364.7,1384,1)="I $D(IBXSAVE(""DX"",2)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",2),U,2),1:"" "") K IBXSAVE(""DX"",2)"
^IBA(364.7,1384,3,0)="^^3^3^3061121^"
^IBA(364.7,1384,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1384,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1384,3,3,0)="POA indicator is available."
^IBA(364.7,1385,0)="1685^N^5^^^^N"
^IBA(364.7,1385,1)="I $D(IBXSAVE(""DX"",3)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",3),U,2),1:"" "") K IBXSAVE(""DX"",3)"
^IBA(364.7,1385,3,0)="^^3^3^3061121^"
^IBA(364.7,1385,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1385,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1385,3,3,0)="POA indicator is available."
^IBA(364.7,1386,0)="1686^N^5^^^^N"
^IBA(364.7,1386,1)="I $D(IBXSAVE(""DX"",4)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",4),U,2),1:"" "") K IBXSAVE(""DX"",4)"
^IBA(364.7,1386,3,0)="^^3^3^3061121^"
^IBA(364.7,1386,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1386,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1386,3,3,0)="POA indicator is available."
^IBA(364.7,1387,0)="1687^N^5^^^^N"
^IBA(364.7,1387,1)="I $D(IBXSAVE(""DX"",5)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",5),U,2),1:"" "") K IBXSAVE(""DX"",5)"
^IBA(364.7,1387,3,0)="^^3^3^3061121^"
^IBA(364.7,1387,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1387,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1387,3,3,0)="POA indicator is available."
^IBA(364.7,1388,0)="1688^N^5^^^^N"
^IBA(364.7,1388,1)="I $D(IBXSAVE(""DX"",6)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",6),U,2),1:"" "") K IBXSAVE(""DX"",6)"
^IBA(364.7,1388,3,0)="^^3^3^3061121^"
^IBA(364.7,1388,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1388,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1388,3,3,0)="POA indicator is available."
^IBA(364.7,1389,0)="1689^N^5^^^^N"
^IBA(364.7,1389,1)="I $D(IBXSAVE(""DX"",7)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",7),U,2),1:"" "") K IBXSAVE(""DX"",7)"
^IBA(364.7,1389,3,0)="^^3^3^3061121^"
^IBA(364.7,1389,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1389,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1389,3,3,0)="POA indicator is available."
^IBA(364.7,1390,0)="1690^N^5^^^^N"
^IBA(364.7,1390,1)="I $D(IBXSAVE(""DX"",8)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",8),U,2),1:"" "") K IBXSAVE(""DX"",8)"
^IBA(364.7,1390,3,0)="^^3^3^3061121^"
^IBA(364.7,1390,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1390,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1390,3,3,0)="POA indicator is available."
^IBA(364.7,1391,0)="1691^N^5^^^^N"
^IBA(364.7,1391,1)="I $D(IBXSAVE(""DX"",9)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",9),U,2),1:"" "") K IBXSAVE(""DX"",9)"
^IBA(364.7,1391,3,0)="^^3^3^3061121^"
^IBA(364.7,1391,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1391,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1391,3,3,0)="POA indicator is available."
^IBA(364.7,1392,0)="1692^N^5^^^^N"
^IBA(364.7,1392,1)="I $D(IBXSAVE(""DX"",10)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",10),U,2),1:"" "") K IBXSAVE(""DX"",10)"
^IBA(364.7,1392,3,0)="^^3^3^3061121^"
^IBA(364.7,1392,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1392,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1392,3,3,0)="POA indicator is available."
^IBA(364.7,1393,0)="1693^N^5^^^^N"
^IBA(364.7,1393,1)="I $D(IBXSAVE(""DX"",11)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",11),U,2),1:"" "") K IBXSAVE(""DX"",11)"
^IBA(364.7,1393,3,0)="^^3^3^3061121^"
^IBA(364.7,1393,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1393,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1393,3,3,0)="POA indicator is available."
^IBA(364.7,1394,0)="1694^N^5^^^^N"
^IBA(364.7,1394,1)="I $D(IBXSAVE(""DX"",12)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",12),U,2),1:"" "") K IBXSAVE(""DX"",12)"
^IBA(364.7,1394,3,0)="^^3^3^3061121^"
^IBA(364.7,1394,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1394,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1394,3,3,0)="POA indicator is available."
^IBA(364.7,1395,0)="1695^N^5^^^^N"
^IBA(364.7,1395,1)="I $D(IBXSAVE(""DX"",13)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",13),U,2),1:"" "") K IBXSAVE(""DX"",13)"
^IBA(364.7,1395,3,0)="^^3^3^3061121^"
^IBA(364.7,1395,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1395,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1395,3,3,0)="POA indicator is available."
^IBA(364.7,1396,0)="1696^N^5^^^^N"
^IBA(364.7,1396,1)="I $D(IBXSAVE(""DX"",14)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",14),U,2),1:"" "") K IBXSAVE(""DX"",14)"
^IBA(364.7,1396,3,0)="^^3^3^3061121^"
^IBA(364.7,1396,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1396,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1396,3,3,0)="POA indicator is available."
^IBA(364.7,1397,0)="1697^N^5^^^^N"
^IBA(364.7,1397,1)="I $D(IBXSAVE(""DX"",15)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",15),U,2),1:"" "") K IBXSAVE(""DX"",15)"
^IBA(364.7,1397,3,0)="^^3^3^3061121^"
^IBA(364.7,1397,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1397,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1397,3,3,0)="POA indicator is available."
^IBA(364.7,1398,0)="1698^N^5^^^^N"
^IBA(364.7,1398,1)="I $D(IBXSAVE(""DX"",16)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",16),U,2),1:"" "") K IBXSAVE(""DX"",16)"
^IBA(364.7,1398,3,0)="^^3^3^3061121^"
^IBA(364.7,1398,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1398,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1398,3,3,0)="POA indicator is available."
^IBA(364.7,1399,0)="1699^N^5^^^^N"
^IBA(364.7,1399,1)="I $D(IBXSAVE(""DX"",17)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",17),U,2),1:"" "") K IBXSAVE(""DX"",17)"
^IBA(364.7,1399,3,0)="^^3^3^3061121^"
^IBA(364.7,1399,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1399,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1399,3,3,0)="POA indicator is available."
^IBA(364.7,1400,0)="1700^N^5^^^^N"
^IBA(364.7,1400,1)="I $D(IBXSAVE(""DX"",18)) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):$P(IBXSAVE(""DX"",18),U,2),1:"" "") K IBXSAVE(""DX"",18)"
^IBA(364.7,1400,3,0)="^^3^3^3061121^"
^IBA(364.7,1400,3,1,0)="This is the present on admissions indicator.  The value ""U"" (No"
^IBA(364.7,1400,3,2,0)="Information in the Record) is sent for INPATIENT claims if no"
^IBA(364.7,1400,3,3,0)="POA indicator is available."
^IBA(364.7,1401,0)="1701^N^5^^^^N"
^IBA(364.7,1401,1)="K IBXDATA"
^IBA(364.7,1402,0)="1702^N^5^^^^N"
^IBA(364.7,1402,1)="K IBXDATA"
^IBA(364.7,1403,0)="1703^N^16^^^^N"
^IBA(364.7,1403,1)="K:'$$INPAT^IBCEF(IBXIEN) IBXDATA N Z S Z="""" F  S Z=$O(IBXDATA(Z)) Q:'Z  S $P(IBXDATA(Z),U,2)=$$DATE^IBCF3($P(IBXDATA(Z),U,2)),IBXSAVE(""PROC"",Z)=IBXDATA(Z) K IBXDATA(Z)"
^IBA(364.7,1403,3,0)="^364.73^5^5^3110603^^^^"
^IBA(364.7,1403,3,1,0)="This is a group data element so more than one occurrence of IBXDATA(n) is"
^IBA(364.7,1403,3,2,0)="possible.  Save off the procedures in the IBXSAVE array.  Six procedures"
^IBA(364.7,1403,3,3,0)="will fit on a single page of a bill.  If more than 6 procedure codes are"
^IBA(364.7,1403,3,4,0)="on the bill, multiple pages are used.  The format of the IBXSAVE array is:"
^IBA(364.7,1403,3,5,0)="   the actual code for the ICD9 or ICD0 code^proc date formatted as MMDDYY"
^IBA(364.7,1404,0)="1704^N^193^^^^N"
^IBA(364.7,1405,0)="1705^N^5^^^^N"
^IBA(364.7,1405,1)="N Z,Q,R F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S R=^(Z),Q=$S(+R=1:$$FO^IBCNEUT1($P(R,U,2),4,""R"",0),+R=2:$E($P(R,U,2),1,5),1:"""") S:Z'>22 IBXDATA(Z)=Q D:Z>22 CKREV^IBCEF3(Z,Q)"
^IBA(364.7,1405,3,0)="^^11^11^3070125^"
^IBA(364.7,1405,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1405,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1405,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1405,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1405,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the second '^'"
^IBA(364.7,1405,3,6,0)="piece of the array.  For text line where the first piece = 2, the text is"
^IBA(364.7,1405,3,7,0)="assumed to start in column 1, so the data is extracted from positions 1-5."
^IBA(364.7,1405,3,8,0)="For text line where the first piece = 3, the text is assumed to start in"
^IBA(364.7,1405,3,9,0)="column 6, so there is no data extracted for this field. Since only 22"
^IBA(364.7,1405,3,10,0)="lines of service line can appear on one form, if there are more than 22"
^IBA(364.7,1405,3,11,0)="lines, subsequent pages are forced for the remaining data lines after 22."
^IBA(364.7,1406,0)="1706^N^5^^^^N"
^IBA(364.7,1406,1)="N Z,A,B,C F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S B=^(Z),C=$$B43^IBCEF77(B),A=$S(+B=1:$S(C]"""":C,1:$E($P(B,U,3),1,24)),+B=2:$S(C]"""":C,1:$E($P(B,U,2),6,30)),1:$S(C]"""":C,1:$E($P(B,U,2),1,25))) S:Z'>22 IBXDATA(Z)=A D:Z>22 CKREV^IBCEF3(Z,A)"
^IBA(364.7,1406,3,0)="^364.73^12^12^3170504^^^"
^IBA(364.7,1406,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1406,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1406,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1406,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1406,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the third '^'"
^IBA(364.7,1406,3,6,0)="piece of the array.  For text line where the first piece = 2, the text is"
^IBA(364.7,1406,3,7,0)="assumed TO start in column 1, so the data is extracted from positions "
^IBA(364.7,1406,3,8,0)="6-30. For text line where the first piece = 3, the text is assumed to"
^IBA(364.7,1406,3,9,0)="start in column 6, so the data for this field is extracted from positions"
^IBA(364.7,1406,3,10,0)="1-25. Since only 22 lines of service line can appear on one form, if there"
^IBA(364.7,1406,3,11,0)="are more than 22 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,1406,3,12,0)="lines after 22."
^IBA(364.7,1407,0)="1707^N^5^^^^N"
^IBA(364.7,1407,1)="K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,""U3"")),U,8)),U),""."")"
^IBA(364.7,1407,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1407,3,1,0)="This is Patient Reason for Visit diagnosis code"
^IBA(364.7,1408,0)="1708^N^5^^^^N"
^IBA(364.7,1408,1)="K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,""U3"")),U,9)),U),""."")"
^IBA(364.7,1408,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1408,3,1,0)="This is Patient Reason for Visit diagnosis code"
^IBA(364.7,1409,0)="1709^N^5^^^^N"
^IBA(364.7,1409,1)="K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,""U3"")),U,10)),U),""."")"
^IBA(364.7,1409,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1409,3,1,0)="This is Patient Reason for Visit diagnosis code"
^IBA(364.7,1410,0)="1710^N^5^^^^N"
^IBA(364.7,1410,1)="N Z I $$INPAT^IBCEF(IBXIEN) S Z=+$P($G(^DGCR(399,IBXIEN,""U1"")),U,15) I Z S IBXDATA=$$FO^IBCNEUT1(Z,4,""R"",0)"
^IBA(364.7,1410,3,0)="^^3^3^3080905^"
^IBA(364.7,1410,3,1,0)="IB*2*400 - for Inpatient claims only."
^IBA(364.7,1410,3,2,0)="Retrieve the PPS code from field# 170 in the claim.  If it exists, then "
^IBA(364.7,1410,3,3,0)="format it as a 4 character numeric field, right justified, zero filled."
^IBA(364.7,1411,0)="1711^N^5^^^^N"
^IBA(364.7,1411,1)="K IBXDATA S:$$INPAT^IBCEF(IBXIEN) IBXDATA=$P($G(IBXSAVE(""DX-E"",1)),U,2) K IBXSAVE(""DX-E"",1)"
^IBA(364.7,1411,3,0)="^364.73^3^3^3070523^^^^"
^IBA(364.7,1411,3,1,0)="This is the Present on Admission indicator for the first 'E-code' "
^IBA(364.7,1411,3,2,0)="diagnosis.  The value ""U"" (No Information in the Record) is sent "
^IBA(364.7,1411,3,3,0)="for INPATIENT claims if no POA indicator is available."
^IBA(364.7,1412,0)="1712^N^5^^^^N"
^IBA(364.7,1412,1)="S IBXDATA=$TR($P($G(IBXSAVE(""DX-E"",2)),U),""."")"
^IBA(364.7,1412,3,0)="^364.73^1^1^3140815^^^^"
^IBA(364.7,1412,3,1,0)="This is the second 'E-code' diagnosis found."
^IBA(364.7,1413,0)="1713^N^5^^^^N"
^IBA(364.7,1413,1)="K IBXDATA S:$$INPAT^IBCEF(IBXIEN) IBXDATA=$P($G(IBXSAVE(""DX-E"",2)),U,2) K IBXSAVE(""DX-E"",2)"
^IBA(364.7,1413,3,0)="^364.73^3^3^3070523^^^^"
^IBA(364.7,1413,3,1,0)="This is the Present on Admission indicator for the second 'E-code'"
^IBA(364.7,1413,3,2,0)="diagnosis.  The value ""U"" (No Information in the Record) is sent "
^IBA(364.7,1413,3,3,0)="for INPATIENT claims if no POA indicator is available."
^IBA(364.7,1414,0)="1714^N^5^^^^N"
^IBA(364.7,1414,1)="S IBXDATA=$TR($P($G(IBXSAVE(""DX-E"",3)),U),""."")"
^IBA(364.7,1414,3,0)="^364.73^1^1^3140815^^"
^IBA(364.7,1414,3,1,0)="This is the third 'E-code' diagnosis found."
^IBA(364.7,1415,0)="1715^N^5^^^^N"
^IBA(364.7,1415,1)="K IBXDATA S:$$INPAT^IBCEF(IBXIEN) IBXDATA=$P($G(IBXSAVE(""DX-E"",3)),U,2) K IBXSAVE(""DX-E"",3)"
^IBA(364.7,1415,3,0)="^364.73^3^3^3070523^^^^"
^IBA(364.7,1415,3,1,0)="This is the Present on Admission indicator for the third 'E-code'"
^IBA(364.7,1415,3,2,0)="diagnosis.  The value ""U"" (No Information in the Record) is sent "
^IBA(364.7,1415,3,3,0)="for INPATIENT claims if no POA indicator is available."
^IBA(364.7,1416,0)="1716^N^5^^^^N"
^IBA(364.7,1416,1)="K IBXDATA"
^IBA(364.7,1417,0)="1717^N^5^^^^N"
^IBA(364.7,1417,1)="N Z,Z0,D,T,T4,T5 F Z=1:1 Q:'$G(^TMP($J,""IBC-RC"",Z))  S D=^(Z),T=$P(D,U,2),T5=$P(D,U,5),T4=$P(D,U,4),Z0=$S(+D=2:$E(T,31,45),+D=3:$E(T,26,40),T4'=""""&(T>219):T4,T5'=""""&(T<220)&(T>1):$J(T5,7,2),1:"""") S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,1417,3,0)="^364.73^12^12^3070125^^^"
^IBA(364.7,1417,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1417,3,2,0)="might be expected.  It relies on the presence of data in global"
^IBA(364.7,1417,3,3,0)="^TMP($J,""IBC-RC"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1417,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1417,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the fourth"
^IBA(364.7,1417,3,6,0)="(procedure code and modifiers) or fifth (unit charge) '^' pieces of the"
^IBA(364.7,1417,3,7,0)="array. If there is a procedure and a unit charge, only the procedure code"
^IBA(364.7,1417,3,8,0)="and its modifiers will print. If there is a unit charge and this is an"
^IBA(364.7,1417,3,9,0)="inpatient bill and the revenue code is 100-219, it is printed and"
^IBA(364.7,1417,3,10,0)="formatted with 2 decimal places. Since only 22 lines of service can appear"
^IBA(364.7,1417,3,11,0)="on one form, if there are more than 22 lines, subsequent pages are forced"
^IBA(364.7,1417,3,12,0)="for the remaining data lines after 22."
^IBA(364.7,1418,0)="1718^N^5^^^^N"
^IBA(364.7,1418,1)="K IBXDATA D DATE45^IBCF33(IBXIEN,.IBXDATA,$G(IBXSAVE(""DATE"")))"
^IBA(364.7,1418,3,0)="^^12^12^3070125^"
^IBA(364.7,1418,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1418,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1418,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1418,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1418,3,5,0)="(=2 or =3).   For a normal service line, output the OUTPATIENT from date "
^IBA(364.7,1418,3,6,0)="that was previously extracted into IBXSAVE(""DATE""). For text line where"
^IBA(364.7,1418,3,7,0)="the first piece = 2, the text is assumed to start in column 1, so the data"
^IBA(364.7,1418,3,8,0)="is extracted from positions 46-52. For text line where the first piece ="
^IBA(364.7,1418,3,9,0)="3, the text is assumed to start in column 6, so the data for this field is"
^IBA(364.7,1418,3,10,0)="extracted from positions 41-47. Since only 22 lines of service line can"
^IBA(364.7,1418,3,11,0)="appear on one form, if there are more than 22 lines, subsequent pages are"
^IBA(364.7,1418,3,12,0)="forced for the remaining data lines after 22."
^IBA(364.7,1419,0)="1719^N^5^^^^N"
^IBA(364.7,1419,1)="K IBXDATA"
^IBA(364.7,1420,0)="1720^N^5^^^^N"
^IBA(364.7,1420,1)="K IBXDATA"
^IBA(364.7,1421,0)="1721^N^5^^^^N"
^IBA(364.7,1421,1)="K IBXDATA"
^IBA(364.7,1422,0)="1722^N^5^^^^N"
^IBA(364.7,1422,1)="K IBXDATA"
^IBA(364.7,1423,0)="1723^N^5^^^^N"
^IBA(364.7,1423,1)="D REMARK^IBCEF77(IBXIEN,.IBXDATA,1)"
^IBA(364.7,1423,3,0)="^^4^4^3070209^"
^IBA(364.7,1423,3,1,0)="Remarks in FL-80 on the UB-04.  All data is retrieved and formatted by "
^IBA(364.7,1423,3,2,0)="REMARK^IBCEF77.  Line 1 of this box has a mandatory 5 leading spaces and "
^IBA(364.7,1423,3,3,0)="therefore only 19 printed characters can be in line 1.  Lines 2-4 have a "
^IBA(364.7,1423,3,4,0)="max length of 24 characters."
^IBA(364.7,1424,0)="1724^N^5^^^^N"
^IBA(364.7,1424,1)="N DIFF S IBXSAVE(""UBFL2"")=$$PRVDATA^IBJPS3(IBXIEN),DIFF=$$DIFF^IBJPS3(IBXIEN,0) S:'DIFF IBXSAVE(""UBFL2"")="""""
^IBA(364.7,1424,3,0)="^364.73^6^6^3081105^^"
^IBA(364.7,1424,3,1,0)="UB-04 FL-2 pay-to provider data gathering"
^IBA(364.7,1424,3,2,0)=" "
^IBA(364.7,1424,3,3,0)="Retrieve the pay-to provider string and save it into IBXSAVE.  If there "
^IBA(364.7,1424,3,4,0)="are NO differences between the pay-to provider and the billing provider, "
^IBA(364.7,1424,3,5,0)="then suppress the pay-to provider data here in FL-2 and don't output "
^IBA(364.7,1424,3,6,0)="anything."
^IBA(364.7,1425,0)="2258^N^131^^^^N"
^IBA(364.7,1425,1)="S IBXDATA=""DN1 """
^IBA(364.7,1425,3,0)="^364.73^1^1^3170331^^^^"
^IBA(364.7,1425,3,1,0)="Output RECORD ID for DN1 record."
^IBA(364.7,1426,0)="2259^N^378^^^^N"
^IBA(364.7,1426,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7,$P($G(^DGCR(399,IBXIEN,""DEN"")),U)'="""" S IBXDATA=452"
^IBA(364.7,1426,3,0)="^364.73^1^1^3170627^^^^"
^IBA(364.7,1426,3,1,0)="Orthodontic Banding Qualifier always will be 452."
^IBA(364.7,1427,0)="1727^N^5^^^^N"
^IBA(364.7,1427,1)="S IBXDATA(1)="""",IBXDATA(2)="""",IBXDATA(3)="""",IBXDATA(4)="""""
^IBA(364.7,1427,3,0)="^364.73^2^2^3061127^^"
^IBA(364.7,1427,3,1,0)="Not currently used.  This field is for overflow codes or externally "
^IBA(364.7,1427,3,2,0)="maintained codes."
^IBA(364.7,1428,0)="1728^N^5^^^^N"
^IBA(364.7,1428,1)="S IBXDATA(1)="""",IBXDATA(2)="""",IBXDATA(3)="""",IBXDATA(4)="""""
^IBA(364.7,1428,3,0)="^^2^2^3061127^"
^IBA(364.7,1428,3,1,0)="Not currently used.  This field is for overflow codes or externally"
^IBA(364.7,1428,3,2,0)="maintained codes."
^IBA(364.7,1429,0)="1729^N^5^^^^N"
^IBA(364.7,1429,1)="S IBXDATA(1)="""",IBXDATA(2)="""",IBXDATA(3)="""",IBXDATA(4)="""""
^IBA(364.7,1429,3,0)="^^2^2^3061127^"
^IBA(364.7,1429,3,1,0)="Not currently used.  This field is for overflow codes or externally"
^IBA(364.7,1429,3,2,0)="maintained codes."
^IBA(364.7,1430,0)="1730^N^5^^^^N"
^IBA(364.7,1430,1)="S IBXDATA=$P($$GETPRV^IBCEF83(IBXIEN,,4,""A1""),"","",1)"
^IBA(364.7,1430,3,0)="^364.73^1^1^3101105^^"
^IBA(364.7,1430,3,1,0)="Attending Providers last name"
^IBA(364.7,1431,0)="1731^N^5^^^^N"
^IBA(364.7,1431,1)="S IBXDATA=$P($$GETPRV^IBCEF83(IBXIEN,,4,""A1""),"","",2)"
^IBA(364.7,1431,3,0)="^364.73^1^1^3101105^^"
^IBA(364.7,1431,3,1,0)="Attending Providers first name"
^IBA(364.7,1432,0)="1732^N^5^^^^N"
^IBA(364.7,1432,1)="S IBXDATA=$P($$GETPRV^IBCEF83(IBXIEN,,2,""A1""),"","",1)"
^IBA(364.7,1432,3,0)="^364.73^1^1^3101105^^"
^IBA(364.7,1432,3,1,0)="Operating Provider last name"
^IBA(364.7,1433,0)="1733^N^5^^^^N"
^IBA(364.7,1433,1)="S IBXDATA=$P($$GETPRV^IBCEF83(IBXIEN,,2,""A1""),"","",2)"
^IBA(364.7,1433,3,0)="^364.73^1^1^3101105^^"
^IBA(364.7,1433,3,1,0)="Operating Provider first name"
^IBA(364.7,1434,0)="1734^N^5^^^^N"
^IBA(364.7,1434,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$J($P(Z1,U,6),7),+Z1=2:$E($P(Z1,U,2),53,59),1:$E($P(Z1,U,2),48,54)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,1434,3,0)="^^13^13^3070125^"
^IBA(364.7,1434,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1434,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1434,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1434,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1434,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the sixth '^'"
^IBA(364.7,1434,3,6,0)="piece of the array.  For text line"
^IBA(364.7,1434,3,7,0)="where the first piece = 2, the text is assumed to start in column 1, so the"
^IBA(364.7,1434,3,8,0)="data is extracted from positions 53-59.  For text line where the first"
^IBA(364.7,1434,3,9,0)="piece = 3, the text is assumed to start in column 6, so the data for this"
^IBA(364.7,1434,3,10,0)="field is extracted from positions 48-54."
^IBA(364.7,1434,3,11,0)="Since only 22 lines of service line can appear on one form, if there"
^IBA(364.7,1434,3,12,0)="are more than 22 lines, subsequent pages are forced for the remaining data"
^IBA(364.7,1434,3,13,0)="lines after 22."
^IBA(364.7,1435,0)="1735^N^5^^^^N"
^IBA(364.7,1435,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$$DOL^IBCEF77($P(Z1,U,7),10),+Z1=2:$E($P(Z1,U,2),60,69),1:$E($P(Z1,U,2),55,64)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,1435,3,0)="^^12^12^3070125^"
^IBA(364.7,1435,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1435,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1435,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1435,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1435,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the seventh "
^IBA(364.7,1435,3,6,0)="'^' piece of the array.  For text line where the first piece = 2, the text"
^IBA(364.7,1435,3,7,0)="is assumed to start in column 1, so the data is extracted from positions"
^IBA(364.7,1435,3,8,0)="60-69.  For text line where the first piece = 3, the text is assumed to"
^IBA(364.7,1435,3,9,0)="start in column 6, so the data for this field is extracted from positions"
^IBA(364.7,1435,3,10,0)="55-64. Since only 22 lines of service line can appear on one form, if"
^IBA(364.7,1435,3,11,0)="there are more than 22 lines, subsequent pages are forced for the"
^IBA(364.7,1435,3,12,0)="remaining data lines after 22."
^IBA(364.7,1436,0)="1736^N^5^^^^N"
^IBA(364.7,1436,1)="S IBXDATA=$P($P(IBXSAVE(""BOX 78""),U,1),"","",1)"
^IBA(364.7,1436,3,0)="^364.73^1^1^3101223^^^"
^IBA(364.7,1436,3,1,0)="Other Provider last name"
^IBA(364.7,1437,0)="1737^N^5^^^^N"
^IBA(364.7,1437,1)="S IBXDATA=$P($P(IBXSAVE(""BOX 78""),U,1),"","",2) K IBXSAVE(""BOX 78"")"
^IBA(364.7,1437,3,0)="^364.73^1^1^3101223^^^"
^IBA(364.7,1437,3,1,0)="Other Provider first name"
^IBA(364.7,1438,0)="1738^N^5^^^^N"
^IBA(364.7,1438,1)="S IBXDATA=$P($P(IBXSAVE(""BOX 79""),U,1),"","",1)"
^IBA(364.7,1438,3,0)="^^1^1^3101223^"
^IBA(364.7,1438,3,1,0)="OTHER PROVIDER LAST NAME"
^IBA(364.7,1439,0)="1739^N^5^^^^N"
^IBA(364.7,1439,1)="S IBXDATA=$P($P(IBXSAVE(""BOX 79""),U,1),"","",2) K IBXSAVE(""BOX 79""),IBXPROV"
^IBA(364.7,1439,3,0)="^^1^1^3101223^"
^IBA(364.7,1439,3,1,0)="OTHER PROVIDER FIRST NAME"
^IBA(364.7,1440,0)="1740^N^5^^^^N"
^IBA(364.7,1440,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,4,""B3"")"
^IBA(364.7,1440,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1440,3,1,0)="Attending Provider NPI if available"
^IBA(364.7,1441,0)="1741^N^5^^^^N"
^IBA(364.7,1441,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,4,""B1"")"
^IBA(364.7,1441,3,0)="^364.73^1^1^3101223^^^"
^IBA(364.7,1441,3,1,0)="Legacy ID quailifer"
^IBA(364.7,1442,0)="1742^N^5^^^^N"
^IBA(364.7,1442,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,4,""B2"")"
^IBA(364.7,1442,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1442,3,1,0)="Attending legacy ID"
^IBA(364.7,1443,0)="1743^N^5^^^^N"
^IBA(364.7,1443,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,2,""B3"")"
^IBA(364.7,1443,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1443,3,1,0)="Operating Provider NPI if available"
^IBA(364.7,1444,0)="1744^N^5^^^^N"
^IBA(364.7,1444,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,2,""B1"")"
^IBA(364.7,1444,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1444,3,1,0)="Operating provider legacy ID if needed"
^IBA(364.7,1445,0)="1745^N^5^^^^N"
^IBA(364.7,1445,1)="S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,2,""B2"")"
^IBA(364.7,1445,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1445,3,1,0)="Operating legacy ID if needed"
^IBA(364.7,1446,0)="1746^N^5^^^^N"
^IBA(364.7,1446,1)="K IBXDATA D UB047879^IBCEF83(IBXIEN,.IBXDATA) S IBXSAVE(""BOX 78"")=IBXDATA(1),IBXSAVE(""BOX 79"")=IBXDATA(2) K IBXDATA S IBXDATA=$P(IBXSAVE(""BOX 78""),U,4)"
^IBA(364.7,1446,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1446,3,1,0)="Other provider NPI if available"
^IBA(364.7,1447,0)="1747^N^5^^^^N"
^IBA(364.7,1447,1)="S IBXDATA=$P(IBXSAVE(""BOX 78""),U,2)"
^IBA(364.7,1447,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1447,3,1,0)="Other provider legacy ID qualifier if needed"
^IBA(364.7,1448,0)="1748^N^5^^^^N"
^IBA(364.7,1448,1)="S IBXDATA=$P(IBXSAVE(""BOX 78""),U,3)"
^IBA(364.7,1448,3,0)="^364.73^1^1^3101223^^"
^IBA(364.7,1448,3,1,0)="Other provider legacy ID if needed"
^IBA(364.7,1449,0)="1749^N^5^^^^N"
^IBA(364.7,1449,1)="N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,""IBC-RC"",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$$DOL^IBCEF77($P(Z1,U,8),10),+Z1=2:$E($P(Z1,U,2),70,79),1:$E($P(Z1,U,2),65,74)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)"
^IBA(364.7,1449,3,0)="^^12^12^3070125^"
^IBA(364.7,1449,3,1,0)="This data element is a group data element where more than one occurrence"
^IBA(364.7,1449,3,2,0)="might be expected.  It relies on the presence of data in array"
^IBA(364.7,1449,3,3,0)="IBXSAVE(""REV"",n) extracted previously.  The first '^' piece of the array"
^IBA(364.7,1449,3,4,0)="indicates whether this is a 'normal' service data line (=1) or a text line"
^IBA(364.7,1449,3,5,0)="(=2 or =3).  For a normal service line, the data is found in the eighth "
^IBA(364.7,1449,3,6,0)="'^' piece of the array.  For text line where the first piece = 2, the text"
^IBA(364.7,1449,3,7,0)="is assumed to start in column 1, so the data is extracted from positions"
^IBA(364.7,1449,3,8,0)="70-79.  For text line where the first piece = 3, the text is assumed to"
^IBA(364.7,1449,3,9,0)="start in column 6, so the data for this field is extracted from positions"
^IBA(364.7,1449,3,10,0)="65-74. Since only 22 lines of service line can appear on one form, if"
^IBA(364.7,1449,3,11,0)="there are more than 22 lines, subsequent pages are forced for the"
^IBA(364.7,1449,3,12,0)="remaining data lines after 22."
^IBA(364.7,1450,0)="1750^N^5^^^^N"
^IBA(364.7,1450,1)="K IBXDATA"
^IBA(364.7,1450,3,0)="^364.73^1^1^3070125^^"
^IBA(364.7,1450,3,1,0)="Reserved by the NUBC. This field is always blank."
^IBA(364.7,1451,0)="1751^N^5^^^^N"
^IBA(364.7,1451,1)="S IBXDATA=$P(IBXSAVE(""BOX 79""),U,4)"
^IBA(364.7,1451,3,0)="^^1^1^3101223^"
^IBA(364.7,1451,3,1,0)="OTHER PROVIDER NPI"
^IBA(364.7,1452,0)="1752^N^5^^^^N"
^IBA(364.7,1452,1)="S IBXDATA=$P(IBXSAVE(""BOX 79""),U,2)"
^IBA(364.7,1452,3,0)="^^1^1^3101223^"
^IBA(364.7,1452,3,1,0)="OTHER PROVIDER ID QUALIFIER."
^IBA(364.7,1453,0)="1753^N^5^^^^N"
^IBA(364.7,1453,1)="S IBXDATA=$P(IBXSAVE(""BOX 79""),U,3)"
^IBA(364.7,1453,3,0)="^^1^1^3101223^"
^IBA(364.7,1453,3,1,0)="OTHER PROVIDER OTHER ID"
^IBA(364.7,1454,0)="1754^N^5^^^^N"
^IBA(364.7,1454,1)="K IBXDATA"
^IBA(364.7,1454,3,0)="^^1^1^3061129^"
^IBA(364.7,1454,3,1,0)="Not currently used"
^IBA(364.7,1455,0)="1755^N^5^^^^N"
^IBA(364.7,1455,1)="K IBXDATA"
^IBA(364.7,1455,3,0)="^^1^1^3061129^"
^IBA(364.7,1455,3,1,0)="Not currently used"
^IBA(364.7,1456,0)="1756^N^5^^^^N"
^IBA(364.7,1456,1)="K IBXDATA"
^IBA(364.7,1456,3,0)="^^1^1^3061130^"
^IBA(364.7,1456,3,1,0)="This field is always blank."
^IBA(364.7,1457,0)="1757^N^209^^^^N"
^IBA(364.7,1457,1)="N Z S:'IBXDATA IBXDATA=DT S Z=$$DT^IBCEFG1(IBXDATA,"""",""D6""),IBXDATA=$E(Z,3,6)_$E(Z,1,2)"
^IBA(364.7,1457,3,0)="^^5^5^3071010^"
^IBA(364.7,1457,3,1,0)="Bill creation date in MMDDYY format."
^IBA(364.7,1457,3,2,0)="esg - 10/9/07 - change this from today's date to be the date first "
^IBA(364.7,1457,3,3,0)="printed.  However, if the claim has never been printed, then the FileMan "
^IBA(364.7,1457,3,4,0)="field 12 - DATE FIRST PRINTED won't be populated yet so in this case, "
^IBA(364.7,1457,3,5,0)="default in today's date."
^IBA(364.7,1458,0)="1758^N^5^^^^N"
^IBA(364.7,1458,1)="K IBXSAVE(""OCCS"")"
^IBA(364.7,1458,3,0)="^^2^2^3061208^"
^IBA(364.7,1458,3,1,0)="Format code for FL-35/3 and FL-36/3 grew too big.  So cleanup of the "
^IBA(364.7,1458,3,2,0)="array used is being done here."
^IBA(364.7,1459,0)="1759^N^5^^^^N"
^IBA(364.7,1459,1)="N CCU,IBI,Z S (IBI,Z)=0 M CCU=IBXSAVE(""CCU"") K IBXDATA,IBXSAVE(""CCU"") F  S Z=$O(CCU(Z)) Q:Z=""""  S IBI=IBI+1,IBXSAVE(""CC"",IBI)=$E(Z,2,99)"
^IBA(364.7,1460,0)="2260^N^379^^^^N"
^IBA(364.7,1460,1)="S:$$FT^IBCEF(IBXIEN)'=7 IBXDATA="""" I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$$DT^IBCEFG1(IBXDATA,"""",""D8"")"
^IBA(364.7,1460,3,0)="^364.73^1^1^3170331^^^^"
^IBA(364.7,1460,3,1,0)="Format date is CCYYMMDD"
^IBA(364.7,1461,0)="2261^N^380^^^^N"
^IBA(364.7,1461,1)="I $$FT^IBCEF(IBXIEN)'=7 K IBXDATA"
^IBA(364.7,1461,3,0)="^364.73^1^1^3170331^^^"
^IBA(364.7,1461,3,1,0)="Ortho Treatment Months count for Dental Claim"
^IBA(364.7,1462,0)="2262^N^381^^^^N"
^IBA(364.7,1462,1)="I $$FT^IBCEF(IBXIEN)'=7 K IBXDATA"
^IBA(364.7,1462,3,0)="^364.73^1^1^3170331^^"
^IBA(364.7,1462,3,1,0)="Ortho Treatment months remaining for a transfer patient."
^IBA(364.7,1463,0)="2263^N^382^^^^N"
^IBA(364.7,1463,1)="I $$FT^IBCEF(IBXIEN)=7 D TRANS^IBCEF12"
^IBA(364.7,1464,0)="2264^N^131^^^^N"
^IBA(364.7,1464,1)="S IBXDATA=""DN2 """
^IBA(364.7,1464,3,0)="^^1^1^3170314^"
^IBA(364.7,1464,3,1,0)="Output the record id for 'DN2' record."
^IBA(364.7,1465,0)="2266^N^383^^^^N"
^IBA(364.7,1465,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(^TMP(""IBXSAVE"",$J,""TO"",IBXIEN,Z)) Q:'Z  S Z1=^(Z),IBXSAVE(""OUTPT"",Z)=Z1,IBXDATA(Z)=$P(Z1,U) I Z>1 D ID^IBCEF2(Z,""DN2 "")"
^IBA(364.7,1465,3,0)="^364.73^1^1^3170719^^"
^IBA(364.7,1465,3,1,0)="Tooth number of treatment"
^IBA(364.7,1466,0)="2267^N^5^^^^N"
^IBA(364.7,1466,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,2)"
^IBA(364.7,1466,3,0)="^^1^1^3170315^"
^IBA(364.7,1466,3,1,0)="Tooth Status code, either E (to be extracted) or M (Missing)"
^IBA(364.7,1467,0)="2268^N^5^^^^N"
^IBA(364.7,1467,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,3)"
^IBA(364.7,1467,3,0)="^^1^1^3170315^"
^IBA(364.7,1467,3,1,0)="Code List Qualifier Code - will always be JP for Dental claim."
^IBA(364.7,1468,0)="2269^N^5^^^^N"
^IBA(364.7,1468,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7,$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""TAXONOMY""))'="""" S IBXDATA=""RF"""
^IBA(364.7,1468,3,0)="^364.73^2^2^3170316^^^"
^IBA(364.7,1468,3,1,0)="Code identifing the type of provider.  For Dental, always RF for "
^IBA(364.7,1468,3,2,0)="Referring."
^IBA(364.7,1469,0)="2270^N^5^^^^N"
^IBA(364.7,1469,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7,$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""TAXONOMY""))'="""" S IBXDATA=""PXC"""
^IBA(364.7,1469,3,0)="^364.73^2^2^3170316^^^"
^IBA(364.7,1469,3,1,0)="Code qualifing the Reference Identification.  For Dental, it will always "
^IBA(364.7,1469,3,2,0)="be PXC for Taxonomy Code."
^IBA(364.7,1470,0)="2271^N^5^^^^N"
^IBA(364.7,1470,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,1,""TAXONOMY""))"
^IBA(364.7,1470,3,0)="^364.73^2^2^3170316^^"
^IBA(364.7,1470,3,1,0)="Reference information as specified by the Reference Identification "
^IBA(364.7,1470,3,2,0)="Qualifier.  For Dental, this will be the Taxonomy Code."
^IBA(364.7,1471,0)="2272^N^131^^^^N"
^IBA(364.7,1471,1)="S IBXDATA=""OPRB"""
^IBA(364.7,1472,0)="2283^N^5^^^^N"
^IBA(364.7,1472,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1472,3,0)="^^1^1^3170316^"
^IBA(364.7,1472,3,1,0)="Setup IBXSAVE array for OPRB record."
^IBA(364.7,1473,0)="2273^N^5^^^^N"
^IBA(364.7,1473,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7,$D(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""NAME"")) S IBXDATA=""DD"""
^IBA(364.7,1474,0)="2274^N^5^^^^N"
^IBA(364.7,1474,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7,$D(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""NAME"")) S IBXDATA=1"
^IBA(364.7,1475,0)="2275^N^5^^^^N"
^IBA(364.7,1475,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""NAME"")),U)"
^IBA(364.7,1476,0)="2276^N^5^^^^N"
^IBA(364.7,1476,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""NAME"")),U,2)"
^IBA(364.7,1477,0)="2277^N^5^^^^N"
^IBA(364.7,1477,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""NAME"")),U,3)"
^IBA(364.7,1478,0)="2278^N^5^^^^N"
^IBA(364.7,1478,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""NAME"")),U,5)"
^IBA(364.7,1479,0)="2279^N^5^^^^N"
^IBA(364.7,1479,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,0)),U,3)"
^IBA(364.7,1480,0)="2280^N^5^^^^N"
^IBA(364.7,1480,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,0)),U,4)"
^IBA(364.7,1481,0)="2281^N^5^^^^N"
^IBA(364.7,1481,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7,$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""TAXONOMY""))'="""" S IBXDATA=""AS"""
^IBA(364.7,1482,0)="2282^N^5^^^^N"
^IBA(364.7,1482,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,""TAXONOMY""))"
^IBA(364.7,1483,0)="2284^N^5^^^^N"
^IBA(364.7,1483,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1484,0)="2285^N^131^^^^N"
^IBA(364.7,1484,1)="S IBXDATA=""OPRC"""
^IBA(364.7,1485,0)="2288^N^5^^^^N"
^IBA(364.7,1485,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1485,3,0)="^364.73^1^1^3171127^^"
^IBA(364.7,1485,3,1,0)="Set up IBXSAVE array for OPRC record."
^IBA(364.7,1486,0)="2286^N^5^^^^N"
^IBA(364.7,1486,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,1)),U,3)"
^IBA(364.7,1487,0)="2287^N^5^^^^N"
^IBA(364.7,1487,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,1)),""^"",4),1)"
^IBA(364.7,1488,0)="2289^N^5^^^^N"
^IBA(364.7,1488,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,2)),U,3)"
^IBA(364.7,1489,0)="2290^N^5^^^^N"
^IBA(364.7,1489,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,2)),U,4),1)"
^IBA(364.7,1490,0)="2291^N^5^^^^N"
^IBA(364.7,1490,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,3)),U,3)"
^IBA(364.7,1491,0)="2292^N^5^^^^N"
^IBA(364.7,1491,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,3)),U,4),1)"
^IBA(364.7,1492,0)="2293^N^5^^^^N"
^IBA(364.7,1492,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,4)),U,3)"
^IBA(364.7,1493,0)="2294^N^5^^^^N"
^IBA(364.7,1493,1)="K IBXDATA ;I $$FT^IBCEF(IBXIEN)=7 S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,6,4)),U,4),1)"
^IBA(364.7,1494,0)="2295^N^5^^^^N"
^IBA(364.7,1494,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1495,0)="2296^N^131^^^^N"
^IBA(364.7,1495,1)="S IBXDATA=""OP10"""
^IBA(364.7,1496,0)="2297^N^5"
^IBA(364.7,1496,1)="I $$FT^IBCEF(IBXIEN)=7 D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1496,3,0)="^^1^1^3170316^"
^IBA(364.7,1496,3,1,0)="Setup IBXSAVE array for the OP10 record."
^IBA(364.7,1497,0)="2298^N^5^^^^N"
^IBA(364.7,1497,1)="K IBXSAVE(""OSQ"") N C,Z,Q,OK M Q=IBXSAVE(""PROVINF"",IBXIEN,""O"") S (C,Z)=0 F  S Z=$O(Q(Z)) Q:'Z  S OK=0 X ""N A F A=1:1 Q:'$D(Q(Z,6,A))  I $P(Q(Z,6,A),U,4)'="""""""" S OK=1 Q"" I OK S C=C+1,IBXDATA(C)=$G(Q(Z)),IBXSAVE(""OSQ"",Z)=C D:C>1 ID^IBCEF2(C,""OP10"")"
^IBA(364.7,1498,0)="2299^N^5^^^^N"
^IBA(364.7,1498,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""DD"")"
^IBA(364.7,1499,0)="2300^N^5^^^^N"
^IBA(364.7,1499,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""1"")"
^IBA(364.7,1500,0)="1800^N^131^^^^N"
^IBA(364.7,1500,1)="S IBXDATA=""CI6 """
^IBA(364.7,1500,3,0)="^364.73^2^2^3070525^^^"
^IBA(364.7,1500,3,1,0)="Piece 1 of the CI6 segment.  Hard code the segment name of ""CI6 "" taking "
^IBA(364.7,1500,3,2,0)="up 4 characters as is the custom."
^IBA(364.7,1501,0)="1801^N^5^^^^N"
^IBA(364.7,1501,1)="S IBXDATA=$P(IBXSAVE,U,1)"
^IBA(364.7,1501,3,0)="^364.73^4^4^3070525^^"
^IBA(364.7,1501,3,1,0)="Only one value for the subscriber primary ID qualifier.  ""MI"" - member "
^IBA(364.7,1501,3,2,0)="identification number.  Not stored in the VistA database....hardcoded."
^IBA(364.7,1501,3,3,0)="Qualifier for subscriber primary ID"
^IBA(364.7,1501,3,4,0)="2010BA/NM108"
^IBA(364.7,1502,0)="1802^N^5^^^^N"
^IBA(364.7,1502,1)="S IBXDATA=$P(IBXSAVE,U,2) I $$WNRBILL^IBEFUNC(IBXIEN) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)"
^IBA(364.7,1502,3,0)="^364.73^4^4^3070525^^^"
^IBA(364.7,1502,3,1,0)="Subscriber Primary ID#"
^IBA(364.7,1502,3,2,0)="2010BA/NM109"
^IBA(364.7,1502,3,3,0)="Carry over the old format code from the old CI2-6 field:  If this is the "
^IBA(364.7,1502,3,4,0)="HIC # for MEDICARE, strip the dashes, if any."
^IBA(364.7,1503,0)="1803^N^5^^^^N"
^IBA(364.7,1503,1)="S IBXDATA=$P(IBXSAVE,U,3)"
^IBA(364.7,1503,3,0)="^364.73^2^2^3070525^^"
^IBA(364.7,1503,3,1,0)="Subscriber secondary ID qualifier#1"
^IBA(364.7,1503,3,2,0)="2010BA/REF(1)/01"
^IBA(364.7,1504,0)="1804^N^5^^^^N"
^IBA(364.7,1504,1)="S IBXDATA=$P(IBXSAVE,U,4)"
^IBA(364.7,1504,3,0)="^364.73^2^2^3070525^^"
^IBA(364.7,1504,3,1,0)="Subscriber secondary ID #1"
^IBA(364.7,1504,3,2,0)="2010BA/REF(1)/02"
^IBA(364.7,1505,0)="2301^N^5^^^^N"
^IBA(364.7,1505,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""Q"",1)"
^IBA(364.7,1506,0)="2302^N^5^^^^N"
^IBA(364.7,1506,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""I"",1) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,1507,0)="2303^N^5^^^^N"
^IBA(364.7,1507,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""Q"",2)"
^IBA(364.7,1508,0)="2304^N^5^^^^N"
^IBA(364.7,1508,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""I"",2) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,1509,0)="2305^N^5^^^^N"
^IBA(364.7,1509,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""Q"",3)"
^IBA(364.7,1510,0)="2306^N^5^^^^N"
^IBA(364.7,1510,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,6,""I"",3) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,1511,0)="2307^N^5^^^^N"
^IBA(364.7,1511,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1511,3,0)="^^1^1^3170316^"
^IBA(364.7,1511,3,1,0)="Clean up IBXSAVE arry after OP10 record."
^IBA(364.7,1512,0)="2308^N^131^^^^N"
^IBA(364.7,1512,1)="S IBXDATA=""DEN """
^IBA(364.7,1512,3,0)="^364.73^1^1^3170901^^^^"
^IBA(364.7,1512,3,1,0)="Output the record id for 'DEN' record."
^IBA(364.7,1513,0)="2309^N^384^^^^N"
^IBA(364.7,1513,1)="I $$FT^IBCEF(IBXIEN)=7 D DEN^IBCEF12"
^IBA(364.7,1514,0)="2310^N^5^^^^N"
^IBA(364.7,1514,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D SRVDTQ^IBCEF12"
^IBA(364.7,1515,0)="2311^N^5^^^^N"
^IBA(364.7,1515,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D SRVDT^IBCEF12"
^IBA(364.7,1516,0)="2312^N^5^^^^N"
^IBA(364.7,1516,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S IBXDATA(Z)=""AD"""
^IBA(364.7,1517,0)="2313^N^5^^^^N"
^IBA(364.7,1517,1)="I $$FT^IBCEF(IBXIEN)=7 S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN) K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S:$P(IBXSAVE(""OUTPT"",Z),U,5)'="""" IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z),U,5)"
^IBA(364.7,1518,0)="1818^N^131^^^^N"
^IBA(364.7,1518,1)="I $D(IBXDATA) S IBXDATA=""CI5 """
^IBA(364.7,1518,3,0)="^^1^1^3070522^"
^IBA(364.7,1518,3,1,0)="RECORD ID 'CI5 '"
^IBA(364.7,1519,0)="1819^N^5^^^^N"
^IBA(364.7,1519,1)="K IBXDATA D CLEANUP^IBCEF78(.IBXSAVE),PAYERIDS^IBCEF78(IBXIEN,.IBXSAVE) I $P($G(IBXSAVE(""CI_PID"",1)),U)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_PID"",1)),U)"
^IBA(364.7,1519,3,0)="^364.73^1^1^3170901^^^^"
^IBA(364.7,1519,3,1,0)="Hard-coded Primary Payer ID Qualifier"
^IBA(364.7,1520,0)="1820^N^5^^^^N"
^IBA(364.7,1520,1)="K IBXDATA I $P($G(IBXSAVE(""CI_PID"",1)),U,2)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_PID"",1)),U,2)"
^IBA(364.7,1520,3,0)="^364.73^5^5^3170901^^^^"
^IBA(364.7,1520,3,1,0)="If header data has already been extracted, array ^TMP(""IBHDR1"",$J) will"
^IBA(364.7,1520,3,2,0)="already exist.  Don't want to extract this field again, so kill data"
^IBA(364.7,1520,3,3,0)="element so there is no output.  Positions 1-5 are the id number as"
^IBA(364.7,1520,3,4,0)="assigned by ENVOY, positions 6-9 are the claim office id (default if there"
^IBA(364.7,1520,3,5,0)="is none is '0000').   Also don't output data element if its value is null."
^IBA(364.7,1521,0)="1821^N^5^^^^N"
^IBA(364.7,1521,1)="N Z K IBXDATA F Z=1,2 S:$G(IBXSAVE(""OIID"",Z)) IBXDATA(Z)=""MI"" K IBXSAVE(""OIID"",Z)"
^IBA(364.7,1521,3,0)="^^6^6^3070525^"
^IBA(364.7,1521,3,1,0)="OI2-11"
^IBA(364.7,1521,3,2,0)="2330A/NM108"
^IBA(364.7,1521,3,3,0)="Qualifier for other payer subscriber primary ID number.  This is "
^IBA(364.7,1521,3,4,0)="hardcoded to be ""MI"" for all other payers on the claim that have a valid "
^IBA(364.7,1521,3,5,0)="ID# extracted in OI2-3.  When IBXSAVE(""OIID"",Z) is true, this means that "
^IBA(364.7,1521,3,6,0)="other payer has a valid subscriber ID."
^IBA(364.7,1522,0)="1822^N^5^^^^N"
^IBA(364.7,1522,1)="K IBXDATA I $P($G(IBXSAVE(""CI_PSIDS"",1)),U)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_PSIDS"",1)),U)"
^IBA(364.7,1523,0)="1823^N^5^^^^N"
^IBA(364.7,1523,1)="K IBXDATA I $P($G(IBXSAVE(""CI_PSIDS"",1)),U,2)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_PSIDS"",1)),U,2)"
^IBA(364.7,1524,0)="1824^N^5^^^^N"
^IBA(364.7,1524,1)="K IBXDATA I $P($G(IBXSAVE(""CI_PSIDS"",1)),U,3)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_PSIDS"",1)),U,3)"
^IBA(364.7,1525,0)="1825^N^5^^^^N"
^IBA(364.7,1525,1)="K IBXDATA I $P($G(IBXSAVE(""CI_PSIDS"",1)),U,4)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_PSIDS"",1)),U,4)"
^IBA(364.7,1526,0)="1826^N^5^^^^N"
^IBA(364.7,1526,1)="S IBXDATA=$P($G(IBXSAVE(""CI_PSIDS"",1)),U,5)"
^IBA(364.7,1527,0)="1827^N^5^^^^N"
^IBA(364.7,1527,1)="S IBXDATA=$P($G(IBXSAVE(""CI_PSIDS"",1)),U,6) D CLEANUP^IBCEF78(.IBXSAVE)"
^IBA(364.7,1528,0)="2314^N^5^^^^N"
^IBA(364.7,1528,1)="I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D SETMODS^IBCVA1(IBXDATA(Z),Z,.IBXSAVE) S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","") I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,1529,0)="1829^N^5^^^^N"
^IBA(364.7,1529,1)="S IBXSAVE=$$INSSECID^IBCEF21(IBXIEN)"
^IBA(364.7,1529,3,0)="^^2^2^3070525^"
^IBA(364.7,1529,3,1,0)="Extract the current insurance subscriber primary and secondary ID's and "
^IBA(364.7,1529,3,2,0)="qualifiers into the IBXSAVE string.  See the routine for comments."
^IBA(364.7,1530,0)="1830^N^131^^^^N"
^IBA(364.7,1530,1)="S IBXDATA=""OI6 """
^IBA(364.7,1531,0)="1831^N^101^^^^N"
^IBA(364.7,1531,1)="N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI6 "")"
^IBA(364.7,1532,0)="1832^N^5^^^^N"
^IBA(364.7,1532,1)="D CLEANUP^IBCEF78(.IBXSAVE),PAYERIDS^IBCEF78(IBXIEN,.IBXSAVE) N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_PID"",Z)),U)"
^IBA(364.7,1533,0)="1833^N^5^^^^N"
^IBA(364.7,1533,1)="N Z,Z0,Z1 K IBXDATA,IBXSAVE S Z=$$COBN^IBCEF(IBXIEN),Z0=0 F Z1=1:1:3 I Z1'=Z,$D(^DGCR(399,IBXIEN,""I""_Z1)) S Z0=Z0+1,IBXSAVE(Z0)=$$INSSECID^IBCEF21(IBXIEN,""PAT"",Z1)"
^IBA(364.7,1533,3,0)="^^10^10^3070529^"
^IBA(364.7,1533,3,1,0)="Extract the string(s) of other payer patient ID information into the "
^IBA(364.7,1533,3,2,0)="IBXSAVE(Z0) array.  This will be used to populate the rest of this OI3 "
^IBA(364.7,1533,3,3,0)="segment."
^IBA(364.7,1533,3,4,0)="Z is the current payer sequence number (1,2, or 3)"
^IBA(364.7,1533,3,5,0)="Z0 is a counter and subscript of IBXSAVE(1) thru IBXSAVE(2)"
^IBA(364.7,1533,3,6,0)="Z1 is the loop variable through all possible insurances on the claim"
^IBA(364.7,1533,3,7,0)=" "
^IBA(364.7,1533,3,8,0)="If Z1'=Z and insurance is defined for insurance# Z1, then increment the "
^IBA(364.7,1533,3,9,0)="Z0 counter variable and store the string returned from the $$INSSECID "
^IBA(364.7,1533,3,10,0)="function."
^IBA(364.7,1534,0)="1834^N^5^^^^N"
^IBA(364.7,1534,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_PID"",Z)),U,2)"
^IBA(364.7,1535,0)="1835^N^5^^^^N"
^IBA(364.7,1535,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_PSIDS"",Z)),U)"
^IBA(364.7,1536,0)="1836^N^5^^^^N"
^IBA(364.7,1536,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_PSIDS"",Z)),U,2)"
^IBA(364.7,1537,0)="1837^N^5^^^^N"
^IBA(364.7,1537,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_PSIDS"",Z)),U,3)"
^IBA(364.7,1538,0)="1838^N^5^^^^N"
^IBA(364.7,1538,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_PSIDS"",Z)),U,4)"
^IBA(364.7,1539,0)="1839^N^5^^^^N"
^IBA(364.7,1539,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_HPID"",Z)),U)"
^IBA(364.7,1540,0)="1840^N^5^^^^N"
^IBA(364.7,1540,1)="N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE(""OI_HPID"",Z)),U,2)"
^IBA(364.7,1541,0)="1841^N^5^^^^N"
^IBA(364.7,1541,1)="N Z,Z0,Z1 K IBXDATA,IBXSAVE S Z=$$COBN^IBCEF(IBXIEN),Z0=0 F Z1=1:1:3 I Z1'=Z,$D(^DGCR(399,IBXIEN,""I""_Z1)) S Z0=Z0+1,IBXSAVE(Z0)=$$INSSECID^IBCEF21(IBXIEN,""SUB"",Z1)"
^IBA(364.7,1541,3,0)="^^1^1^3070530^"
^IBA(364.7,1541,3,1,0)="Qualifier for date of initial treatment."
^IBA(364.7,1541,3,2,0)="IBXSAVE(Z0) array.  This will be used to populate pieces 9 thru 14 of this"
^IBA(364.7,1541,3,3,0)="OI5 segment."
^IBA(364.7,1541,3,4,0)=" "
^IBA(364.7,1541,3,5,0)="Z is the current payer sequence number (1,2, or 3)"
^IBA(364.7,1541,3,6,0)="Z0 is a counter and subscript of IBXSAVE(1) thru IBXSAVE(2)"
^IBA(364.7,1541,3,7,0)="Z1 is the loop variable through all possible insurances on the claim"
^IBA(364.7,1541,3,8,0)=" "
^IBA(364.7,1541,3,9,0)="If Z1'=Z and insurance is defined for insurance# Z1, then increment the Z0"
^IBA(364.7,1541,3,10,0)="counter variable and store the string returned from the $$INSSECID"
^IBA(364.7,1541,3,11,0)="function."
^IBA(364.7,1542,0)="1842^N^5^^^^N"
^IBA(364.7,1542,1)="S IBXDATA=$S($G(IBXSAVE(""INIT-DATE"")):454,1:"""") K IBXSAVE(""INIT-DATE"")"
^IBA(364.7,1542,3,0)="^^1^1^3070530^"
^IBA(364.7,1542,3,1,0)="Qualifier for date of initial treatment."
^IBA(364.7,1543,0)="1843^N^5^^^^N"
^IBA(364.7,1543,1)="S IBXDATA=$S($G(IBXSAVE(""ACUT-DATE"")):453,1:"""") K IBXSAVE(""ACUT-DATE"")"
^IBA(364.7,1543,3,0)="^^1^1^3070530^"
^IBA(364.7,1543,3,1,0)="Qualifier for date of acute manifestation."
^IBA(364.7,1544,0)="1844^N^5^^^^N"
^IBA(364.7,1544,1)="S IBXDATA=$S($G(IBXSAVE(""XRAY-DATE"")):455,1:"""") K IBXSAVE(""XRAY-DATE"")"
^IBA(364.7,1544,3,0)="^^1^1^3070530^"
^IBA(364.7,1544,3,1,0)="Qualifier for date of the last Xray."
^IBA(364.7,1545,0)="1845^N^5^^^^N"
^IBA(364.7,1545,1)="S IBXDATA=$P($G(IBXSAVE(""PTNM"")),U,5)"
^IBA(364.7,1545,3,0)="^^1^1^3070530^"
^IBA(364.7,1545,3,1,0)="Patient name suffix."
^IBA(364.7,1546,0)="1846^N^5^^^^N"
^IBA(364.7,1546,1)="K IBXSAVE(""REM"") I $$FT^IBCEF(IBXIEN)=3 N Z S Z=$P($G(^DGCR(399,IBXIEN,""UF2"")),U,3),IBXDATA="""" S:Z'="""" IBXDATA=""ADD"",IBXSAVE(""REM"")=Z"
^IBA(364.7,1546,3,0)="^364.73^2^2^3071004^^"
^IBA(364.7,1546,3,1,0)="Get bill remarks from field 399/402, if non-empty save value in "
^IBA(364.7,1546,3,2,0)="IBXSAVE(""REM""), and set IBXDATA to ""ADD"" (qualifier)."
^IBA(364.7,1547,0)="1847^N^5^^^^N"
^IBA(364.7,1547,1)="S IBXDATA=$G(IBXSAVE(""REM"")) K IBXSAVE(""REM"")"
^IBA(364.7,1547,3,0)="^^1^1^3070604^"
^IBA(364.7,1547,3,1,0)="Bill remarks."
^IBA(364.7,1548,0)="2315^N^5^^^^N"
^IBA(364.7,1548,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","",2) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,1549,0)="2316^N^5^^^^N"
^IBA(364.7,1549,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","",3) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,1551,0)="1851^N^5^^^^N"
^IBA(364.7,1551,1)="D CLEANUP^IBCEF78(.IBXSAVE)"
^IBA(364.7,1552,0)="2317^N^5^^^^N"
^IBA(364.7,1552,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P($G(IBXSAVE(""PROCMODS"",Z)),"","",4) K IBXSAVE(""PROCMODS"",Z) I Z0'="""" S IBXDATA(Z)=Z0"
^IBA(364.7,1553,0)="2318^N^5^^^^N"
^IBA(364.7,1553,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEND"")) S IBXDATA(Z)=$G(IBXSAVE(""OUTPT"",Z,""DEND""))"
^IBA(364.7,1554,0)="2319^N^5^^^^N"
^IBA(364.7,1554,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE(""OUTPT"",Z),U,8)="""":$$DOLLAR^IBCEFG1(""0.00""),1:$$DOLLAR^IBCEFG1($P(IBXSAVE(""OUTPT"",Z),U,8)*$P(IBXSAVE(""OUTPT"",Z),U,9)))"
^IBA(364.7,1555,0)="2320^N^5^^^^N"
^IBA(364.7,1555,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D POS^IBCEF12 Q"
^IBA(364.7,1556,0)="2321^N^5^^^^N"
^IBA(364.7,1556,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U)"
^IBA(364.7,1557,0)="2322^N^5^^^^N"
^IBA(364.7,1557,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,2)"
^IBA(364.7,1558,0)="2323^N^5^^^^N"
^IBA(364.7,1558,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,3)"
^IBA(364.7,1559,0)="2324^N^5^^^^N"
^IBA(364.7,1559,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,4)"
^IBA(364.7,1560,0)="2325^N^5^^^^N"
^IBA(364.7,1560,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,4)"
^IBA(364.7,1561,0)="1861^N^5^^^^N"
^IBA(364.7,1561,1)="K IBXDATA"
^IBA(364.7,1562,0)="1862^N^5^^^^N"
^IBA(364.7,1562,1)="K IBXDATA"
^IBA(364.7,1563,0)="1863^N^5^^^^N"
^IBA(364.7,1563,1)="K IBXDATA"
^IBA(364.7,1564,0)="1864^N^5^^^^N"
^IBA(364.7,1564,1)="K IBXDATA"
^IBA(364.7,1565,0)="1865^N^5^^^^N"
^IBA(364.7,1565,1)="K IBXDATA"
^IBA(364.7,1566,0)="1866^N^5^^^^N"
^IBA(364.7,1566,1)="K IBXDATA"
^IBA(364.7,1567,0)="1867^N^5^^^^N"
^IBA(364.7,1567,1)="K IBXDATA"
^IBA(364.7,1568,0)="1868^N^5^^^^N"
^IBA(364.7,1568,1)="K IBXDATA"
^IBA(364.7,1569,0)="1869^N^5^^^^N"
^IBA(364.7,1569,1)="K IBXDATA"
^IBA(364.7,1570,0)="1870^N^5^^^^N"
^IBA(364.7,1570,1)="K IBXDATA"
^IBA(364.7,1571,0)="1871^N^5^^^^N"
^IBA(364.7,1571,1)="K IBXDATA"
^IBA(364.7,1572,0)="1872^N^5^^^^N"
^IBA(364.7,1572,1)="K IBXDATA"
^IBA(364.7,1573,0)="1873^N^5^^^^N"
^IBA(364.7,1573,1)="K IBXDATA"
^IBA(364.7,1574,0)="1874^N^5^^^^N"
^IBA(364.7,1574,1)="K IBXDATA"
^IBA(364.7,1575,0)="1875^N^5^^^^N"
^IBA(364.7,1575,1)="K IBXDATA"
^IBA(364.7,1576,0)="1876^N^5^^^^N"
^IBA(364.7,1576,1)="K IBXDATA"
^IBA(364.7,1577,0)="1877^N^5^^^^N"
^IBA(364.7,1577,1)="N Z,Z0,SEQ K IBXSAVE(""OTH_PAY_ADDR"") I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,SEQ=IBXSAVE(1,Z),IBXSAVE(""OTH_PAY_ADDR"",Z0)=$$ADD^IBCNADD(IBXIEN,SEQ)"
^IBA(364.7,1577,3,0)="^^24^24^3080313^"
^IBA(364.7,1577,3,1,0)="The IBXSAVE input array should still exist from the piece 2 call to"
^IBA(364.7,1577,3,2,0)="data element N-OTH INSURANCE SEQUENCE."
^IBA(364.7,1577,3,3,0)=" "
^IBA(364.7,1577,3,4,0)="Input:"
^IBA(364.7,1577,3,5,0)="IBXSAVE(1)=current payer sequence letter"
^IBA(364.7,1577,3,6,0)="IBXSAVE(1,Z)=other payer sequence letters where Z is the payer sequence"
^IBA(364.7,1577,3,7,0)="number of the other payers"
^IBA(364.7,1577,3,8,0)=" "
^IBA(364.7,1577,3,9,0)="Loop through this to produce the output IBXSAVE array."
^IBA(364.7,1577,3,10,0)=" "
^IBA(364.7,1577,3,11,0)="Output:"
^IBA(364.7,1577,3,12,0)="IBXSAVE(""OTH_PAY_ADDR"",1)=address string for other payer#1"
^IBA(364.7,1577,3,13,0)="IBXSAVE(""OTH_PAY_ADDR"",2)=address string for other payer#2"
^IBA(364.7,1577,3,14,0)=" "
^IBA(364.7,1577,3,15,0)="Address string format:"
^IBA(364.7,1577,3,16,0)="  [1] address line 1"
^IBA(364.7,1577,3,17,0)="  [2] address line 2"
^IBA(364.7,1577,3,18,0)="  [3] address line 3"
^IBA(364.7,1577,3,19,0)="  [4] city"
^IBA(364.7,1577,3,20,0)="  [5] state ien ptr to file 5"
^IBA(364.7,1577,3,21,0)="  [6] zipcode"
^IBA(364.7,1577,3,22,0)=" "
^IBA(364.7,1577,3,23,0)="Utility call $$ADD^IBCNADD(IBXIEN,SEQ) to pull the payer address for the"
^IBA(364.7,1577,3,24,0)="payer at the specified payer sequence."
^IBA(364.7,1578,0)="1878^N^5^^^^N"
^IBA(364.7,1578,1)="K IBXSAVE(""OTH_PAY_ADDR"")"
^IBA(364.7,1579,0)="1879^N^5^^^^N"
^IBA(364.7,1579,1)="K IBXDATA N Z,Z1 S Z=0 F  S Z=$O(^TMP(""DCX"",$J,1,Z)) Q:'Z  S Z1=$P(^TMP(""DCX"",$J,1,Z),U,3),IBXDATA(Z)=$S(Z1=1:"""",1:$P(^TMP(""DCX"",$J,1,Z),U,3))"
^IBA(364.7,1579,3,0)="^^1^1^3150703^"
^IBA(364.7,1579,3,1,0)="POA indicator for this diagnosis. Defaults to """"."
^IBA(364.7,1580,0)="2326^N^5^^^^N"
^IBA(364.7,1580,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,6)"
^IBA(364.7,1581,0)="2327^N^131^^^^N"
^IBA(364.7,1581,1)="S IBXDATA=""DEN1"""
^IBA(364.7,1581,3,0)="^364.73^1^1^3170322^^"
^IBA(364.7,1581,3,1,0)="Output the record id for 'DEN1' record."
^IBA(364.7,1582,0)="2328^N^384^^^^N"
^IBA(364.7,1582,1)="I $$FT^IBCEF(IBXIEN)=7 D DEN1^IBCEF12"
^IBA(364.7,1583,0)="2329^N^5^^^^N"
^IBA(364.7,1583,1)="I $$FT^IBCEF(IBXIEN)=7 D PROC^IBCEF12"
^IBA(364.7,1584,0)="2330^N^5^^^^N"
^IBA(364.7,1584,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","")'="""" IBXDATA(Z)=$P(Z0,"","")"
^IBA(364.7,1585,0)="2331^N^5^^^^N"
^IBA(364.7,1585,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","",2) IBXDATA(Z)=$P(Z0,"","",2)"
^IBA(364.7,1586,0)="2332^N^5^^^^N"
^IBA(364.7,1586,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","",3) IBXDATA(Z)=$P(Z0,"","",3)"
^IBA(364.7,1587,0)="2333^N^5^^^^N"
^IBA(364.7,1587,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,Z0 S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  S Z0=$P(IBXSAVE(""OUTPT"",Z),U,7) S:$P(Z0,"","",4) IBXDATA(Z)=$P(Z0,"","",4)"
^IBA(364.7,1588,0)="2334^N^5^^^^N"
^IBA(364.7,1588,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S IBXDATA(Z)=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,7)"
^IBA(364.7,1589,0)="2335^N^5^^^^N"
^IBA(364.7,1589,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,DT S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S DT=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,8) I DT'="""" S IBXDATA(Z)=$$DT^IBCEFG1(DT,"""",""D8"")"
^IBA(364.7,1590,0)="2336^N^5^^^^N"
^IBA(364.7,1590,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P($G(IBXSAVE(""OUTPT"",Z,""DEN"")),U,9)'="""" S IBXDATA(Z)=452"
^IBA(364.7,1591,0)="2337^N^5^^^^N"
^IBA(364.7,1591,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,DT S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S DT=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,9) I DT'="""" S IBXDATA(Z)=$$DT^IBCEFG1(DT,"""",""D8"")"
^IBA(364.7,1592,0)="2338^N^5^^^^N"
^IBA(364.7,1592,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P($G(IBXSAVE(""OUTPT"",Z,""DEN"")),U,10)'="""" S IBXDATA(Z)=446"
^IBA(364.7,1593,0)="2339^N^5^^^^N"
^IBA(364.7,1593,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,DT S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S DT=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,10) I DT'="""" S IBXDATA(Z)=$$DT^IBCEFG1(DT,"""",""D8"")"
^IBA(364.7,1594,0)="2340^N^5^^^^N"
^IBA(364.7,1594,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P($G(IBXSAVE(""OUTPT"",Z,""DEN"")),U,11)'="""" S IBXDATA(Z)=196"
^IBA(364.7,1595,0)="2341^N^5^^^^N"
^IBA(364.7,1595,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,DT S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S DT=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,11) I DT'="""" S IBXDATA(Z)=$$DT^IBCEFG1(DT,"""",""D8"")"
^IBA(364.7,1596,0)="2342^N^5^^^^N"
^IBA(364.7,1596,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P($G(IBXSAVE(""OUTPT"",Z,""DEN"")),U,12)'="""" S IBXDATA(Z)=198"
^IBA(364.7,1597,0)="2343^N^5^^^^N"
^IBA(364.7,1597,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 N Z,DT S Z=0 F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""DEN"")) S DT=$P(IBXSAVE(""OUTPT"",Z,""DEN""),U,12) I DT'="""" S IBXDATA(Z)=$$DT^IBCEFG1(DT,"""",""D8"")"
^IBA(364.7,1598,0)="2344^N^131^^^^N"
^IBA(364.7,1598,1)="S IBXDATA=""DEN2"""
^IBA(364.7,1599,0)="2345^N^384^^^^N"
^IBA(364.7,1599,1)="I $$FT^IBCEF(IBXIEN)=7 D DEN2^IBCEF12"
^IBA(364.7,1600,0)="2346^N^5^^^^N"
^IBA(364.7,1600,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN23^IBCEF12"
^IBA(364.7,1601,0)="2347^N^5^^^^N"
^IBA(364.7,1601,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN24^IBCEF12"
^IBA(364.7,1602,0)="2348^N^5^^^^N"
^IBA(364.7,1602,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN25^IBCEF12"
^IBA(364.7,1603,0)="2349^N^5^^^^N"
^IBA(364.7,1603,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN26^IBCEF12"
^IBA(364.7,1604,0)="2350^N^5^^^^N"
^IBA(364.7,1604,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN27^IBCEF12"
^IBA(364.7,1605,0)="2351^N^5^^^^N"
^IBA(364.7,1605,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN28^IBCEF12"
^IBA(364.7,1606,0)="2352^N^5^^^^N"
^IBA(364.7,1606,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=7 D DEN29^IBCEF12"
^IBA(364.7,1607,0)="2353^N^131^^^^N"
^IBA(364.7,1607,1)="S IBXDATA=""LSUR"""
^IBA(364.7,1608,0)="2354^N^5^^^^N"
^IBA(364.7,1608,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LSUR"")"
^IBA(364.7,1609,0)="2370^N^5^^^^N"
^IBA(364.7,1609,1)="I $$FT^IBCEF(IBXIEN)=7 D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LSUR"")"
^IBA(364.7,1610,0)="1910^N^96^^^^N"
^IBA(364.7,1610,1)="D GETBP^IBCEF79(IBXIEN,"""",+IBXDATA,""PRV-BP"",.IBXSAVE)"
^IBA(364.7,1610,3,0)="^^4^4^3090213^"
^IBA(364.7,1610,3,1,0)="PRV-2.5"
^IBA(364.7,1610,3,2,0)="--------"
^IBA(364.7,1610,3,3,0)="calculate only field to build the IBXSAVE(""PRV-BP"") array which will hold "
^IBA(364.7,1610,3,4,0)="the billing provider name, address, and phone#."
^IBA(364.7,1611,0)="1911^N^5^^^^N"
^IBA(364.7,1611,1)="K IBXSAVE(""PRV-BP""),IBXSAVE(""ORGNPI""),IBXSAVE(""ORGTAX"")"
^IBA(364.7,1611,3,0)="^364.73^1^1^3100813^^"
^IBA(364.7,1611,3,1,0)="Clean up the IBXSAVE usage at the end of the PRV segment."
^IBA(364.7,1612,0)="1912^N^5^^^^N"
^IBA(364.7,1612,1)="I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3,+$P($G(^DGCR(399,IBXIEN,""U1"")),U,15) S IBXDATA=""DR"""
^IBA(364.7,1612,3,0)="^^3^3^3080905^"
^IBA(364.7,1612,3,1,0)="CL1A-13 - Inpatient, UB claims only."
^IBA(364.7,1612,3,2,0)="If field# 170 exists and is a valid pointer to file 80.2, then the value "
^IBA(364.7,1612,3,3,0)="of this field is the qualifier ""DR""."
^IBA(364.7,1613,0)="1913^N^5^^^^N"
^IBA(364.7,1613,1)="N Z I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3 S Z=+$P($G(^DGCR(399,IBXIEN,""U1"")),U,15) I Z S IBXDATA=$$FO^IBCNEUT1(Z,4,""R"",0)"
^IBA(364.7,1613,3,0)="^^3^3^3080905^"
^IBA(364.7,1613,3,1,0)="CL1A-14 - Inpatient, UB claims only."
^IBA(364.7,1613,3,2,0)="If the PPS field exists, then output the ien right justified with leading "
^IBA(364.7,1613,3,3,0)="0's."
^IBA(364.7,1614,0)="2355^N^5^^^^N"
^IBA(364.7,1614,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U)'="""" IBXDATA(Z)=""DD"""
^IBA(364.7,1615,0)="1915^N^96^^^^N"
^IBA(364.7,1615,1)="S IBXSAVE(""SERVFACFLAG"")=$S($P(IBXDATA,U,3)="""":0,1:1) I IBXSAVE(""SERVFACFLAG"") S IBXSAVE(""SERVFACDATA"")=IBXDATA"
^IBA(364.7,1615,3,0)="^^19^19^3140728^"
^IBA(364.7,1615,3,1,0)="SUB, piece 1.5"
^IBA(364.7,1615,3,2,0)="Use the data element to extract the billing provider/service facility "
^IBA(364.7,1615,3,3,0)="information."
^IBA(364.7,1615,3,4,0)="IBXSAVE(""SERVFACFLAG"")=0 to indicate there is no service facility info"
^IBA(364.7,1615,3,5,0)="IBXSAVE(""SERVFACFLAG"")=1 to indicate there is service facility info"
^IBA(364.7,1615,3,6,0)=" "
^IBA(364.7,1615,3,7,0)="IBXSAVE(""SERVFACDATA"") is the string of data from the $$B^IBCEF79 "
^IBA(364.7,1615,3,8,0)="function.  Therefore [3] is """" if there is no service facility data, or "
^IBA(364.7,1615,3,9,0)="[3] is 0 if the service facility is a VA institution in file 4, or [3] is "
^IBA(364.7,1615,3,10,0)="a 1 if the service facility is a non-VA facility in file 355.93."
^IBA(364.7,1615,3,11,0)="Piece [4] is the IEN to either file 4 or 355.93."
^IBA(364.7,1615,3,12,0)=" "
^IBA(364.7,1615,3,13,0)="Variable Z1 is the value of the $$SENDSF function call.  This function "
^IBA(364.7,1615,3,14,0)="will only return 0 (don't send) if the pre-patch 400 switchback flag is "
^IBA(364.7,1615,3,15,0)="set to ON, and care was provided at the main division in the database, "
^IBA(364.7,1615,3,16,0)="and the insurance company parameter that says to send the service "
^IBA(364.7,1615,3,17,0)="facility data is set to NO (don't send)."
^IBA(364.7,1615,3,18,0)="MRD;IB*2.0*516 - The function $$SENDSF^IBCEF79 now will always return"
^IBA(364.7,1615,3,19,0)="'1'."
^IBA(364.7,1616,0)="1916^N^5^^^^N"
^IBA(364.7,1616,1)="K IBXSAVE(""SERVFACFLAG""),IBXSAVE(""SERVFACDATA"")"
^IBA(364.7,1616,3,0)="^^1^1^3080929^"
^IBA(364.7,1616,3,1,0)="Clean up IBXSAVE array used in the building of the SUB segment."
^IBA(364.7,1617,0)="1917^N^5^^^^N"
^IBA(364.7,1617,1)="K IBXDATA N Z I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S Z=$P($G(^DGCR(399,IBXIEN,""U3"")),U,8) I Z'="""" S IBXDATA=$S($$ICD9VER^IBACSV(Z)=1:""PR"",1:""APR"")"
^IBA(364.7,1617,3,0)="^364.73^1^1^3100913^^"
^IBA(364.7,1617,3,1,0)="This is a qualifier for PRV diagnosis (1)"
^IBA(364.7,1618,0)="1918^N^5^^^^N"
^IBA(364.7,1618,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,""U3"")),U,8)),U,1),""."")"
^IBA(364.7,1618,3,0)="^^1^1^3081029^"
^IBA(364.7,1618,3,1,0)="This is PRV diagnosis (1)"
^IBA(364.7,1619,0)="1919^N^5^^^^N"
^IBA(364.7,1619,1)="K IBXDATA N Z I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S Z=$P($G(^DGCR(399,IBXIEN,""U3"")),U,9) I Z'="""" S IBXDATA=$S($$ICD9VER^IBACSV(Z)=1:""PR"",1:""APR"")"
^IBA(364.7,1619,3,0)="^364.73^1^1^3101101^^"
^IBA(364.7,1619,3,1,0)="This is a qualifier for PRV diagnosis (2)"
^IBA(364.7,1620,0)="1920^N^5^^^^N"
^IBA(364.7,1620,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,""U3"")),U,9)),U,1),""."")"
^IBA(364.7,1620,3,0)="^^1^1^3081029^"
^IBA(364.7,1620,3,1,0)="This is PRV diagnosis (2)"
^IBA(364.7,1621,0)="1921^N^5^^^^N"
^IBA(364.7,1621,1)="K IBXDATA N Z I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S Z=$P($G(^DGCR(399,IBXIEN,""U3"")),U,10) I Z'="""" S IBXDATA=$S($$ICD9VER^IBACSV(Z)=1:""PR"",1:""APR"")"
^IBA(364.7,1621,3,0)="^^1^1^3081029^"
^IBA(364.7,1621,3,1,0)="This is a qualifier for PRV diagnosis (3)"
^IBA(364.7,1622,0)="1922^N^5^^^^N"
^IBA(364.7,1622,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,""U3"")),U,10)),U,1),""."")"
^IBA(364.7,1622,3,0)="^^1^1^3081029^"
^IBA(364.7,1622,3,1,0)="This is PRV diagnosis (3)"
^IBA(364.7,1623,0)="1923^N^131^^^^N"
^IBA(364.7,1623,1)="S IBXDATA=""PRV1"""
^IBA(364.7,1623,3,0)="^^1^1^3081103^"
^IBA(364.7,1623,3,1,0)="PRV1 segment, piece 1.  Literal value is ""PRV1""."
^IBA(364.7,1624,0)="1924^N^5^^^^N"
^IBA(364.7,1624,1)="N DIFF S IBXSAVE(""PRV1"")=$$PRVDATA^IBJPS3(IBXIEN),DIFF=$$DIFF^IBJPS3(IBXIEN,1) S:'DIFF (IBXSAVE(""PRV1""),IBPTPNPI)="""" Q:'DIFF  S $P(IBXSAVE(""PRV1""),U,12,14)=""87^2^24"",IBPTPNPI=$P($G(IBXSAVE(""PRV1"")),U,2)"
^IBA(364.7,1624,3,0)="^^15^15^3081111^"
^IBA(364.7,1624,3,1,0)="PRV1-1.5 calculate only piece"
^IBA(364.7,1624,3,2,0)="--------------------------------"
^IBA(364.7,1624,3,3,0)="Save the pay-to provider data string in IBXSAVE.  But if no differences "
^IBA(364.7,1624,3,4,0)="exist between the pay-to provider data and the billing provider data, "
^IBA(364.7,1624,3,5,0)="then blank out the pay-to provider data."
^IBA(364.7,1624,3,6,0)="If differences do exist, then manually hard-code the literal values for 3 "
^IBA(364.7,1624,3,7,0)="fields into the pay-to provider string:"
^IBA(364.7,1624,3,8,0)=" "
^IBA(364.7,1624,3,9,0)="PRV1-2   Entity ID code is ""87"""
^IBA(364.7,1624,3,10,0)="PRV1-3   Entity type qualifier is ""2"""
^IBA(364.7,1624,3,11,0)="PRV1-5   ID Code qualifier is ""24"""
^IBA(364.7,1624,3,12,0)=" "
^IBA(364.7,1624,3,13,0)="Very special variable IBPTPNPI is also set here in this format code.  "
^IBA(364.7,1624,3,14,0)="This is the pay-to provider NPI#.  It is also blanked out if no "
^IBA(364.7,1624,3,15,0)="differences exist.  This is used in NPI-18."
^IBA(364.7,1625,0)="1925^N^5^^^^N"
^IBA(364.7,1625,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,12)"
^IBA(364.7,1625,3,0)="^364.73^2^2^3081112^^"
^IBA(364.7,1625,3,1,0)="PRV1-2  Entity ID code"
^IBA(364.7,1625,3,2,0)="This value is set by PRV1-1.5."
^IBA(364.7,1626,0)="1926^N^5^^^^N"
^IBA(364.7,1626,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,13)"
^IBA(364.7,1626,3,0)="^364.73^2^2^3081112^^"
^IBA(364.7,1626,3,1,0)="PRV1-3  Entity type qualifer"
^IBA(364.7,1626,3,2,0)="Set by PRV1-1.5"
^IBA(364.7,1627,0)="1927^N^56^^^^N"
^IBA(364.7,1627,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,1628,0)="1928^N^5^^^^N"
^IBA(364.7,1628,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,1628,3,0)="^364.73^2^2^3140425^^^^"
^IBA(364.7,1628,3,1,0)="PRV1-5  ID code qualifier"
^IBA(364.7,1628,3,2,0)="This is set by PRV1-1.5"
^IBA(364.7,1629,0)="1929^N^5^^^^N"
^IBA(364.7,1629,1)="K IBXDATA S IBXDATA="""""
^IBA(364.7,1629,3,0)="^364.73^6^6^3140425^^^"
^IBA(364.7,1629,3,1,0)="PRV1-6"
^IBA(364.7,1629,3,2,0)="pay-to provider primary ID (tax ID here).  Strip out the punctuation."
^IBA(364.7,1629,3,3,0)=" "
^IBA(364.7,1629,3,4,0)=" "
^IBA(364.7,1629,3,5,0)="please note:  The pay-to provider NPI# which is really the primary ID is"
^IBA(364.7,1629,3,6,0)="being sent with NPI-18."
^IBA(364.7,1630,0)="1930^N^5^^^^N"
^IBA(364.7,1630,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,5)"
^IBA(364.7,1630,3,0)="^^2^2^3081105^"
^IBA(364.7,1630,3,1,0)="PRV1-7"
^IBA(364.7,1630,3,2,0)="pay-to provider address line 1"
^IBA(364.7,1631,0)="1931^N^5^^^^N"
^IBA(364.7,1631,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,6)"
^IBA(364.7,1631,3,0)="^^2^2^3081105^"
^IBA(364.7,1631,3,1,0)="PRV1-8"
^IBA(364.7,1631,3,2,0)="pay-to provider address line 2"
^IBA(364.7,1632,0)="1932^N^5^^^^N"
^IBA(364.7,1632,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,7) I IBXDATA'="""" S IBXDATA=$TR(IBXDATA,""-/.,()'"",""  "")"
^IBA(364.7,1632,3,0)="^^4^4^3081105^"
^IBA(364.7,1632,3,1,0)="PRV1-9"
^IBA(364.7,1632,3,2,0)="pay-to provider city name"
^IBA(364.7,1632,3,3,0)="Perform the standard punctuation edits on the city name to convert ""-"" "
^IBA(364.7,1632,3,4,0)="and ""/"" into spaces."
^IBA(364.7,1633,0)="1933^N^5^^^^N"
^IBA(364.7,1633,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,8)"
^IBA(364.7,1633,3,0)="^^2^2^3081105^"
^IBA(364.7,1633,3,1,0)="PRV1-10"
^IBA(364.7,1633,3,2,0)="pay-to provider state abbreviation"
^IBA(364.7,1634,0)="1934^N^5^^^^N"
^IBA(364.7,1634,1)="S IBXDATA=$P($G(IBXSAVE(""PRV1"")),U,9),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)"
^IBA(364.7,1634,3,0)="^364.73^2^2^3110217^^"
^IBA(364.7,1634,3,1,0)="PRV1-11 - pay-to provider zip code"
^IBA(364.7,1634,3,2,0)="Remove any punctuation including dashes or spaces."
^IBA(364.7,1635,0)="1935^N^5^^^^N"
^IBA(364.7,1635,1)="N IBX,IBZ,Z S IBXSAVE(""CL1A-16"")="""" I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3 S IBZ=+$G(^DGCR(399,IBXIEN,""U2"")) I IBZ S Z=$$ICD9^IBACSV(IBZ),IBX=$TR($P(Z,U,1),""."") I IBX'="""" S IBXDATA=$S($P(Z,U,19)=1:""BJ"",1:""ABJ""),IBXSAVE(""CL1A-16"")=IBX"
^IBA(364.7,1635,3,0)="^364.73^5^5^3081114^^"
^IBA(364.7,1635,3,1,0)="CL1A-15"
^IBA(364.7,1635,3,2,0)="This is the admitting diagnosis qualifier.  This is for inpatient,"
^IBA(364.7,1635,3,3,0)="UB's only.  If the claim has an admitting diagnosis, then save it"
^IBA(364.7,1635,3,4,0)="in temporary variable IBXSAVE(""CL1A-16"") and output ""BJ"" here in"
^IBA(364.7,1635,3,5,0)="this piece."
^IBA(364.7,1636,0)="1936^N^5^^^^N"
^IBA(364.7,1636,1)="S IBXDATA=$G(IBXSAVE(""CL1A-16"")) K IBXSAVE(""CL1A-16"")"
^IBA(364.7,1636,3,0)="^^3^3^3081114^"
^IBA(364.7,1636,3,1,0)="CL1A-16"
^IBA(364.7,1636,3,2,0)="This is the admitting diagnosis.  It is calculated from CL1A-15 - "
^IBA(364.7,1636,3,3,0)="admitting dx qualifier field."
^IBA(364.7,1637,0)="1937^N^131^^^^N"
^IBA(364.7,1637,1)="S IBXDATA=""AMB """
^IBA(364.7,1637,3,0)="^364.73^1^1^3110322^^^"
^IBA(364.7,1637,3,1,0)="Output RECORD ID for AMB PICK UP record."
^IBA(364.7,1638,0)="1938^N^5^^^^N^0"
^IBA(364.7,1638,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$S(NODE=""U5"":""PW"",1:45) D:Z>1 ID^IBCEF2(Z,""AMB"")"
^IBA(364.7,1639,0)="1939^N^131^^^^N^0"
^IBA(364.7,1639,1)="S IBXDATA=""AMB1"""
^IBA(364.7,1640,0)="1940^N^5^^^^N^0"
^IBA(364.7,1640,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$P(IBXSAVE(""AMB"",NODE),U,2)"
^IBA(364.7,1640,3,0)="^^1^1^3110609^"
^IBA(364.7,1640,3,1,0)="Gets the Ambulance Address 1 from the 2nd piece of the data string."
^IBA(364.7,1641,0)="1941^N^5^^^^N^0"
^IBA(364.7,1641,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$P(IBXSAVE(""AMB"",NODE),U,3)"
^IBA(364.7,1641,3,0)="^^1^1^3110609^"
^IBA(364.7,1641,3,1,0)="Gets the Ambulance Address 2 from the 3rd piece of the data string."
^IBA(364.7,1642,0)="1942^N^5^^^^N^0"
^IBA(364.7,1642,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$P(IBXSAVE(""AMB"",NODE),U,4)"
^IBA(364.7,1642,3,0)="^^1^1^3110609^"
^IBA(364.7,1642,3,1,0)="Gets the Ambulance City from the 4th piece of the data string"
^IBA(364.7,1643,0)="1943^N^5^^^^N^0"
^IBA(364.7,1643,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$$STATE^IBCEFG1($P(IBXSAVE(""AMB"",NODE),U,5))"
^IBA(364.7,1643,3,0)="^364.73^1^1^3110610^^"
^IBA(364.7,1643,3,1,0)="Gets the Ambulance State from the 5th piece of the data string."
^IBA(364.7,1644,0)="1944^N^5^^^^N^0"
^IBA(364.7,1644,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$P(IBXSAVE(""AMB"",NODE),U,6)"
^IBA(364.7,1644,3,0)="^^1^1^3110609^"
^IBA(364.7,1644,3,1,0)="Gets the Ambulance Zip code from the 6th piece of the data string."
^IBA(364.7,1645,0)="1945^N^5^^^^N^0"
^IBA(364.7,1645,1)="K IBXDATA I $P($G(IBXSAVE(""AMB"",""U7"")),U,1) S IBXDATA=""LB"""
^IBA(364.7,1646,0)="1946^N^5^^^^N^0"
^IBA(364.7,1646,1)="S IBXDATA=$P($G(IBXSAVE(""AMB"",""U7"")),U,1) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1647,0)="1947^N^5^^^^N^0"
^IBA(364.7,1647,1)="S IBXDATA=$P($G(IBXSAVE(""AMB"",""U7"")),U,2) S:IBXDATA IBXDATA=$$GET1^DIQ(399,IBXIEN,288,IBXDATA) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1647,3,0)="^364.73^1^1^3110809^^"
^IBA(364.7,1647,3,1,0)="Ambulance Transport Reason Code"
^IBA(364.7,1648,0)="1948^N^5^^^^N^0"
^IBA(364.7,1648,1)="K IBXDATA I $P($G(IBXSAVE(""AMB"",""U7"")),U,3)'="""" S IBXDATA=""DH"""
^IBA(364.7,1648,3,0)="^364.73^1^1^3110809^^"
^IBA(364.7,1648,3,1,0)="Ambulance Distance Units.  Only if Ambulance distance is not null."
^IBA(364.7,1649,0)="1949^N^5^^^^N^0"
^IBA(364.7,1649,1)="S IBXDATA=$P($G(IBXSAVE(""AMB"",""U7"")),U,3) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1649,3,0)="^364.73^1^1^3110809^^"
^IBA(364.7,1649,3,1,0)="Ambulance Transport Distance"
^IBA(364.7,1650,0)="1950^N^5^^^^N^0"
^IBA(364.7,1650,1)="S IBXDATA=$P($G(IBXSAVE(""AMB"",""U7"")),U,4) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1650,3,0)="^364.73^1^1^3110809^^"
^IBA(364.7,1650,3,1,0)="Ambulance Round Trip Purpose"
^IBA(364.7,1651,0)="1951^N^5^^^^N^0"
^IBA(364.7,1651,1)="N DATA,NODE,Z K IBXDATA S Z=0 F NODE=""U5"",""U6"" S DATA=$G(IBXSAVE(""AMB"",NODE)) I $L(DATA) S Z=Z+1,IBXDATA(Z)=$P(IBXSAVE(""AMB"",NODE),U,1)"
^IBA(364.7,1651,3,0)="^364.73^3^3^3110609^^"
^IBA(364.7,1651,3,1,0)="Get the Ambulance Drop Off Location from the 1st piece of the data string."
^IBA(364.7,1651,3,2,0)="This is from the Drop Off record (""U6"") only.  Will always be blank on the"
^IBA(364.7,1651,3,3,0)="pick up record."
^IBA(364.7,1652,0)="1952^N^321^^^^N^0"
^IBA(364.7,1652,1)="S IBXDATA=$P($G(IBXSAVE(""ORGNPI"")),U,3)"
^IBA(364.7,1652,3,0)="^364.73^1^1^3100811^^"
^IBA(364.7,1652,3,1,0)="Extract NPI Code for Billing Provider"
^IBA(364.7,1653,0)="1953^N^321^^^^N^0"
^IBA(364.7,1653,1)="S IBXDATA=$S($P($G(IBXSAVE(""ORGNPI"")),U,3)]"""":""XX"",1:"""")"
^IBA(364.7,1653,3,0)="^364.73^1^1^3100811^"
^IBA(364.7,1653,3,1,0)="If the NPI number exists this field will be set to XX; otherwise to null."
^IBA(364.7,1654,0)="1954^N^332^^^^N^0"
^IBA(364.7,1654,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",IBXDATA:444,1:"""")"
^IBA(364.7,1655,0)="1955^N^332^^^^N^0"
^IBA(364.7,1655,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8""))"
^IBA(364.7,1656,0)="1956^N^333^^^^N^0"
^IBA(364.7,1657,0)="1957^N^334^^^^N^0"
^IBA(364.7,1657,1)="S IBXSAVE(""DIS ST DT"")=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8""))"
^IBA(364.7,1658,0)="1958^N^335^^^^N^0"
^IBA(364.7,1658,1)="S IBXSAVE(""DIS END DT"")=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8""))"
^IBA(364.7,1659,0)="1959^N^333^^^^N^0"
^IBA(364.7,1659,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",IBXDATA=360:IBXSAVE(""DIS ST DT""),IBXDATA=361:IBXSAVE(""DIS END DT""),IBXDATA=314:IBXSAVE(""DIS ST DT"")_""-""_IBXSAVE(""DIS END DT""),1:"""")"
^IBA(364.7,1660,0)="1960^N^336^^^^N^0"
^IBA(364.7,1660,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",IBXDATA:""090"",1:"""")"
^IBA(364.7,1661,0)="1961^N^336^^^^N^0"
^IBA(364.7,1661,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8""))"
^IBA(364.7,1662,0)="1962^N^337^^^^N^0"
^IBA(364.7,1662,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",IBXDATA:""091"",1:"""")"
^IBA(364.7,1663,0)="1963^N^337^^^^N^0"
^IBA(364.7,1663,1)="S IBXDATA=$S($$FT^IBCEF(IBXIEN)=3:"""",1:$$DT^IBCEFG1(IBXDATA,"""",""D8""))"
^IBA(364.7,1664,0)="1964^N^322^^^^N"
^IBA(364.7,1664,1)="S IBXDATA=$S($P($G(IBXSAVE(""ORGTAX"")),U,3)]"""":""BI"",1:"""")"
^IBA(364.7,1665,0)="1965^N^322^^^^N"
^IBA(364.7,1665,1)="S IBXDATA=$P($G(IBXSAVE(""ORGTAX"")),U,3)"
^IBA(364.7,1666,0)="1966^N^262^^^^N^0"
^IBA(364.7,1666,1)="S IBXDATA=$S(IBXDATA]"""":""G1"",1:"""")"
^IBA(364.7,1667,0)="1967^N^341^^^^N"
^IBA(364.7,1667,1)="S IBXDATA=$S(IBXDATA]"""":""9F"",1:"""")"
^IBA(364.7,1668,0)="1968^N^341^^^^N"
^IBA(364.7,1669,0)="1969^N^131^^^^N"
^IBA(364.7,1669,1)="S IBXDATA=""CL1B"""
^IBA(364.7,1670,0)="1970^N^342^^^^N"
^IBA(364.7,1671,0)="1971^N^343^^^^N"
^IBA(364.7,1672,0)="1972^N^344^^^^N"
^IBA(364.7,1672,1)="S IBXDATA=$S(IBXDATA]"""":""AC"",1:"""") I $$FT^IBCEF(IBXIEN)=7,$P($G(^DGCR(399,IBXIEN,""U8"")),U,3)=""AA"" S IBXDATA="""""
^IBA(364.7,1673,0)="1973^N^344^^^^N"
^IBA(364.7,1673,1)="I $$FT^IBCEF(IBXIEN)=7,$P($G(^DGCR(399,IBXIEN,""U8"")),""^"",3)=""AA"" S IBXDATA="""""
^IBA(364.7,1674,0)="1974^N^345^^^^N"
^IBA(364.7,1674,1)="S IBXDATA=$S($TR(IBXDATA,"" "")]"""":""Y4"",1:"""")"
^IBA(364.7,1675,0)="1975^N^345^^^^N"
^IBA(364.7,1675,1)="S IBXDATA=$TR(IBXDATA,"" ""),IBXSAVE(""PCCLAIM"")=0 I IBXDATA]"""" S IBXSAVE(""PCCLAIM"")=1"
^IBA(364.7,1675,3,0)="^364.73^5^5^3140812^^"
^IBA(364.7,1675,3,1,0)="SUbsequeNt fields Prop/Cas COntact Name, Prop/Cas Contact Phone and"
^IBA(364.7,1675,3,2,0)="Prop/Cas COntact Extension should ONLY be sent if this field has a value,"
^IBA(364.7,1675,3,3,0)="indicating that this IS a Property & Casualty claim."
^IBA(364.7,1675,3,4,0)="Setting IBXSAVE(""PCCLAIM"") here to 0 (Not a P&C Claim) or 1 (IS a P&C "
^IBA(364.7,1675,3,5,0)="Claim) for reference in these later fields."
^IBA(364.7,1676,0)="1976^N^346^^^^N"
^IBA(364.7,1676,1)="S IBXDATA=$S(IBXDATA]"""":""IC"",1:"""") I $G(IBXSAVE(""PCCLAIM""))=0 S IBXDATA="""""
^IBA(364.7,1676,3,0)="^^2^2^3121116^"
^IBA(364.7,1676,3,1,0)="Don't populate this field if this is not a Property and Casualty Claim.  "
^IBA(364.7,1676,3,2,0)="See Format Description for Prop/Cas Claim NUmber for more info."
^IBA(364.7,1677,0)="1977^N^346^^^^N"
^IBA(364.7,1677,1)="I $G(IBXSAVE(""PCCLAIM""))=0 S IBXDATA="""""
^IBA(364.7,1677,3,0)="^364.73^2^2^3121116^^^"
^IBA(364.7,1677,3,1,0)="Don't populate this field if this is not a Property and Casualty Claim.  "
^IBA(364.7,1677,3,2,0)="See Format Description for Prop/Cas Claim NUmber for more info."
^IBA(364.7,1678,0)="1978^N^347^^^^N"
^IBA(364.7,1678,1)="S IBXDATA=$S(IBXDATA]"""":""TE"",1:"""") I $G(IBXSAVE(""PCCLAIM""))=0 S IBXDATA="""""
^IBA(364.7,1678,3,0)="^^2^2^3121116^"
^IBA(364.7,1678,3,1,0)="Don't populate this field if this is not a Property and Casualty Claim.  "
^IBA(364.7,1678,3,2,0)="See Format Description for Prop/Cas Claim NUmber for more info."
^IBA(364.7,1679,0)="1979^N^347^^^^N"
^IBA(364.7,1679,1)="I $G(IBXSAVE(""PCCLAIM""))=0 S IBXDATA="""""
^IBA(364.7,1679,3,0)="^364.73^2^2^3121116^^"
^IBA(364.7,1679,3,1,0)="Don't populate this field if this is not a Property and Casualty Claim.  "
^IBA(364.7,1679,3,2,0)="See Format Description for Prop/Cas Claim NUmber for more info."
^IBA(364.7,1680,0)="1980^N^348^^^^N"
^IBA(364.7,1680,1)="S IBXDATA=$S(IBXDATA]"""":""EX"",1:"""") I $G(IBXSAVE(""PCCLAIM""))=0 S IBXDATA="""""
^IBA(364.7,1680,3,0)="^^2^2^3121116^"
^IBA(364.7,1680,3,1,0)="Don't populate this field if this is not a Property and Casualty Claim.  "
^IBA(364.7,1680,3,2,0)="See Format Description for Prop/Cas Claim NUmber for more info."
^IBA(364.7,1681,0)="1981^N^348^^^^N"
^IBA(364.7,1681,1)="S:$G(IBXSAVE(""PCCLAIM""))=0 IBXDATA="""" K IBXSAVE(""PCCLAIM"")"
^IBA(364.7,1681,3,0)="^^3^3^3121116^"
^IBA(364.7,1681,3,1,0)="Don't populate this field if this is not a Property and Casualty Claim.  "
^IBA(364.7,1681,3,2,0)="See Format Description for Prop/Cas Claim Number for more info."
^IBA(364.7,1681,3,3,0)="Saved value IBXSAVE(""PCCLAIM"") is not needed after this, so it's killed."
^IBA(364.7,1682,0)="1982^N^131^^^^N"
^IBA(364.7,1682,1)="S IBXDATA=""SPC """
^IBA(364.7,1683,0)="1983^N^349^^^^N"
^IBA(364.7,1683,1)="S IBXDATA=$S(IBXDATA]"""":""BP"",1:"""")"
^IBA(364.7,1684,0)="1984^N^349^^^^N"
^IBA(364.7,1685,0)="1985^N^350^^^^N"
^IBA(364.7,1685,1)="S IBXDATA=$S(IBXDATA]"""":""BO"",1:"""")"
^IBA(364.7,1686,0)="1986^N^350^^^^N"
^IBA(364.7,1687,0)="1988^N^5^^^^N"
^IBA(364.7,1687,1)="S IBXDATA=$P($G(IBXSAVE(""LAB/FAC"",IBXIEN,""C"",1,0)),U,1)"
^IBA(364.7,1688,0)="2356^N^5^^^^N"
^IBA(364.7,1688,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U)"
^IBA(364.7,1689,0)="2357^N^5^^^^N"
^IBA(364.7,1689,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,2)"
^IBA(364.7,1690,0)="1991^N^131^^^^N"
^IBA(364.7,1690,1)="S IBXDATA=""OPR9"""
^IBA(364.7,1691,0)="1992^N^5^^^^N"
^IBA(364.7,1691,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1691,3,0)="^364.73^1^1^3101108^^"
^IBA(364.7,1691,3,1,0)="Extract the Rendering Physician Name.  Controls processing of the record."
^IBA(364.7,1692,0)="1993^N^5^^^^N"
^IBA(364.7,1692,1)="K IBXDATA I $D(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")) S IBXDATA=82"
^IBA(364.7,1693,0)="1994^N^5^^^^N"
^IBA(364.7,1693,1)="K IBXDATA I $D(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")) S IBXDATA=1"
^IBA(364.7,1694,0)="1995^N^5^^^^N"
^IBA(364.7,1694,1)="K IBXDATA S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")),U,1) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1695,0)="1996^N^5^^^^N"
^IBA(364.7,1695,1)="K IBXDATA S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")),U,2) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1696,0)="1997^N^5^^^^N"
^IBA(364.7,1696,1)="K IBXDATA S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")),U,3) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1697,0)="1998^N^5^^^^N"
^IBA(364.7,1697,1)="K IBXDATA S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""NAME"")),U,5) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1698,0)="1999^N^5^^^^N"
^IBA(364.7,1698,1)="K IBXDATA S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,0)),U,3) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1699,0)="2000^N^5^^^^N"
^IBA(364.7,1699,1)="K IBXDATA S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,0)),U,4) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1700,0)="2001^N^5^^^^N"
^IBA(364.7,1700,1)="K IBXDATA I $G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""TAXONOMY""))]"""" S IBXDATA=""PE"""
^IBA(364.7,1701,0)="2002^N^5^^^^N"
^IBA(364.7,1701,1)="K IBXDATA S Z=$G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,""TAXONOMY"")) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1702,0)="2003^N^131^^^^N"
^IBA(364.7,1702,1)="S IBXDATA=""OPRA"""
^IBA(364.7,1703,0)="2004^N^5^^^^N"
^IBA(364.7,1703,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,1)),""^"",3) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1704,0)="2005^N^5^^^^N"
^IBA(364.7,1704,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,1)),""^"",4),1) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1705,0)="2006^N^5^^^^N"
^IBA(364.7,1705,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,2)),""^"",3) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1706,0)="2007^N^5^^^^N"
^IBA(364.7,1706,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,2)),""^"",4),1) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1707,0)="2008^N^5^^^^N"
^IBA(364.7,1707,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,3)),""^"",3) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1708,0)="2009^N^5^^^^N"
^IBA(364.7,1708,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,3)),""^"",4),1) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1709,0)="2010^N^5^^^^N"
^IBA(364.7,1709,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,4)),""^"",3) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1710,0)="2011^N^5^^^^N"
^IBA(364.7,1710,1)="K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S Z=$$NOPUNCT^IBCEF($P($G(IBXSAVE(""PROVINF"",IBXIEN,""C"",1,3,4)),""^"",4),1) I Z]"""" S IBXDATA=Z"
^IBA(364.7,1711,0)="2012^^131^^^^N"
^IBA(364.7,1711,1)="S IBXDATA=""OP1A"""
^IBA(364.7,1712,0)="2013^N^5^^^^N"
^IBA(364.7,1712,1)="K IBXDATA I $$FT^IBCEF(IBIFN)=3 D PROVSEQ^IBCEF72(IBXIEN,.IBXSAVE,.IBXDATA,4,""OP1A"")"
^IBA(364.7,1713,0)="2014^N^5^^^^N"
^IBA(364.7,1713,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""71"")"
^IBA(364.7,1714,0)="2015^N^5^^^^N"
^IBA(364.7,1714,1)="K IBXDATA D OTHPAYC^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""1"")"
^IBA(364.7,1715,0)="2016^N^5^^^^N"
^IBA(364.7,1715,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""Q"",1)"
^IBA(364.7,1716,0)="2017^N^5^^^^N"
^IBA(364.7,1716,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""I"",1) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,1717,0)="2018^N^5^^^^N"
^IBA(364.7,1717,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""Q"",2)"
^IBA(364.7,1718,0)="2019^N^5^^^^N"
^IBA(364.7,1718,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""I"",2) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,1719,0)="2020^N^5^^^^N"
^IBA(364.7,1719,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""Q"",3)"
^IBA(364.7,1720,0)="2021^N^5^^^^N"
^IBA(364.7,1720,1)="K IBXDATA D OTHPAYV^IBCEF71(IBXIEN,.IBXSAVE,.IBXDATA,4,""I"",3) I $D(IBXDATA) D NOPUNCT^IBCEF73(.IBXDATA,1)"
^IBA(364.7,1721,0)="2022^N^5^^^^N"
^IBA(364.7,1721,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $P($G(IBXSAVE(""OUTPT"",Z,""RX"")),U,11) S IBXDATA(Z)=471"
^IBA(364.7,1722,0)="2023^N^5^^^^N"
^IBA(364.7,1722,1)="K IBXDATA N Z S Z="""" F  S Z=$O(IBXSAVE(""OUTPT"",Z)) Q:'Z  I $D(IBXSAVE(""OUTPT"",Z,""RX"")) S IBXDATA(Z)=$S($P(IBXSAVE(""OUTPT"",Z,""RX""),U,11)'="""":$$DT^IBCEFG1($P(IBXSAVE(""OUTPT"",Z,""RX""),U,11),"""",""D8""),1:"""")"
^IBA(364.7,1723,0)="2024^N^354^^^^N"
^IBA(364.7,1723,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $G(IBZ(Z))'="""" S IBXDATA(Z)=""9F"""
^IBA(364.7,1724,0)="2025^N^354^^^^N"
^IBA(364.7,1724,1)="N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $G(IBZ(Z))'="""" S IBXDATA(Z)=IBZ(Z)"
^IBA(364.7,1725,0)="2026^N^5^^^^N"
^IBA(364.7,1725,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""CCOB"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""CCOB"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""CCOB"",IBZ,Z,0)),U,6) S IBXDATA(Z0)=573"
^IBA(364.7,1726,0)="2027^N^5^^^^N"
^IBA(364.7,1726,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""CCOB"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""CCOB"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""CCOB"",IBZ,Z,0)),U,6) S IBXDATA(Z0)=$$DT^IBCEFG1($P(IBXSAVE(""CCOB"",IBZ,Z,0),U,6),"""",""D8"")"
^IBA(364.7,1727,0)="2028^N^5"
^IBA(364.7,1727,1)="N Z,Z0,IBZ K IBXDATA I $$FT^IBCEF(IBXIEN)'=7 S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""CCOB"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""CCOB"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""CCOB"",IBZ,Z,0)),U,21)'="""" S IBXDATA(Z0)=$P(IBXSAVE(""CCOB"",IBZ,Z,0),U,21)"
^IBA(364.7,1728,0)="2358^N^5^^^^N"
^IBA(364.7,1728,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,3)"
^IBA(364.7,1729,0)="2359^N^5^^^^N"
^IBA(364.7,1729,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,4)"
^IBA(364.7,1730,0)="2360^N^5^^^^N"
^IBA(364.7,1730,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1731,0)="2361^N^5^^^^N"
^IBA(364.7,1731,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1750,0)="2050^N^131^^^^N"
^IBA(364.7,1750,1)="S IBXDATA=""LDAT"""
^IBA(364.7,1751,0)="2051^N^5^^^^N"
^IBA(364.7,1751,1)="D LDAT^IBCEF11"
^IBA(364.7,1751,3,0)="^364.73^1^1^3180131^^^"
^IBA(364.7,1751,3,1,0)="Service line counter for LDAT record."
^IBA(364.7,1752,0)="2052^N^5^^^^N"
^IBA(364.7,1752,1)="K IBXSAVE(""LDAT"") D GETLDAT^IBCEF11(IBXIEN) D:$D(IBXSV(""VC80"")) VC80L^IBCEF11(IBXIEN,+$G(IBXSV(""VC80LN"")))"
^IBA(364.7,1752,3,0)="^364.73^1^1^3180130^^^^"
^IBA(364.7,1752,3,1,0)="Extract data for LDAT record and save it in IBXSAVE(""LDAT"")."
^IBA(364.7,1753,0)="2053^N^5^^^^N"
^IBA(364.7,1753,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U)"
^IBA(364.7,1753,3,0)="^^1^1^3101011^"
^IBA(364.7,1753,3,1,0)="Attachment report type from field 399.0304/71."
^IBA(364.7,1754,0)="2054^N^5^^^^N"
^IBA(364.7,1754,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U,2)"
^IBA(364.7,1754,3,0)="^^1^1^3101011^"
^IBA(364.7,1754,3,1,0)="Attachment report transmission code from 399.0304/72."
^IBA(364.7,1755,0)="2055^N^5^^^^N"
^IBA(364.7,1755,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""LDAT"",Z),U,3)'="""" IBXDATA(Z)=""AC"""
^IBA(364.7,1755,3,0)="^^1^1^3101011^"
^IBA(364.7,1755,3,1,0)="Always set to ""AC""."
^IBA(364.7,1756,0)="2056^N^5^^^^N"
^IBA(364.7,1756,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U,3)"
^IBA(364.7,1756,3,0)="^^1^1^3101011^"
^IBA(364.7,1756,3,1,0)="Attachment control number from 399.0304/70."
^IBA(364.7,1757,0)="2057^N^5^^^^N"
^IBA(364.7,1757,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""LDAT"",Z),U,4)'="""" IBXDATA(Z)=""FL"""
^IBA(364.7,1757,3,0)="^^1^1^3101011^"
^IBA(364.7,1757,3,1,0)="Always set to ""FL""."
^IBA(364.7,1758,0)="2058^N^5^^^^N"
^IBA(364.7,1758,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U,4)"
^IBA(364.7,1758,3,0)="^^1^1^3101012^"
^IBA(364.7,1758,3,1,0)="OB Anesthesia Additional Units from field 399.0304/74."
^IBA(364.7,1759,0)="2059^N^5^^^^N"
^IBA(364.7,1759,1)="S IBXDATA="""""
^IBA(364.7,1759,3,0)="^^1^1^3140416^"
^IBA(364.7,1759,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,1760,0)="2060^N^5^^^^N"
^IBA(364.7,1760,1)="S IBXDATA="""""
^IBA(364.7,1760,3,0)="^^1^1^3140416^"
^IBA(364.7,1760,3,1,0)="MRD;IB*2.0*516 - Changed to be blank."
^IBA(364.7,1761,0)="2061^N^5^^^^N"
^IBA(364.7,1761,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=""6R"""
^IBA(364.7,1761,3,0)="^^1^1^3101012^"
^IBA(364.7,1761,3,1,0)="Always set to ""6R""."
^IBA(364.7,1762,0)="2062^N^5^^^^N"
^IBA(364.7,1762,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=Z_""_""_$P(^DGCR(399,IBXIEN,0),U)"
^IBA(364.7,1762,3,0)="^^2^2^3101012^"
^IBA(364.7,1762,3,1,0)="This piece contains [service line number]_[claim number], i.e. "
^IBA(364.7,1762,3,2,0)="""5_K30002Z""."
^IBA(364.7,1763,0)="2063^N^5^^^^N"
^IBA(364.7,1763,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U,5)"
^IBA(364.7,1763,3,0)="^^2^2^3101012^"
^IBA(364.7,1763,3,1,0)="Contains the value of SUB2-8 if available, otherwise contains the value "
^IBA(364.7,1763,3,2,0)="of SUB2-6. If both values are not available, this piece is blank."
^IBA(364.7,1764,0)="2064^N^5^^^^N"
^IBA(364.7,1764,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U,6)"
^IBA(364.7,1764,3,0)="^^2^2^3101012^"
^IBA(364.7,1764,3,1,0)="Contains total charges returned by either OUTPT^IBCEF11for CMS-1500 or "
^IBA(364.7,1764,3,2,0)="HOS^IBCEF2 for UB-04."
^IBA(364.7,1765,0)="2065^N^5^^^^N"
^IBA(364.7,1765,1)="K IBXSAVE(""LDAT""),IBXSV(""VC80""),IBXSV(""VC80LN"")"
^IBA(364.7,1765,3,0)="^364.73^1^1^3180130^^^^"
^IBA(364.7,1765,3,1,0)="Clear IBXSAVE array for this record."
^IBA(364.7,1766,0)="2066^N^131^^^^N"
^IBA(364.7,1766,1)="S IBXDATA=""LOPE"""
^IBA(364.7,1767,0)="2067^N^5^^^^N"
^IBA(364.7,1767,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LOPE"")"
^IBA(364.7,1767,3,0)="^^1^1^3101015^"
^IBA(364.7,1767,3,1,0)="Get data for LOPE record."
^IBA(364.7,1768,0)="2068^N^5^^^^N"
^IBA(364.7,1768,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LOPE"")"
^IBA(364.7,1769,0)="2069^N^5^^^^N"
^IBA(364.7,1769,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U)'="""" IBXDATA(Z)=72"
^IBA(364.7,1769,3,0)="^^1^1^3101016^"
^IBA(364.7,1769,3,1,0)="Always set to 72."
^IBA(364.7,1770,0)="2070^N^5^^^^N"
^IBA(364.7,1770,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U)"
^IBA(364.7,1771,0)="2071^N^5^^^^N"
^IBA(364.7,1771,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,2)"
^IBA(364.7,1772,0)="2072^N^5^^^^N"
^IBA(364.7,1772,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,3)"
^IBA(364.7,1773,0)="2073^N^5^^^^N"
^IBA(364.7,1773,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,4)"
^IBA(364.7,1774,0)="2074^N^5^^^^N"
^IBA(364.7,1774,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1774,3,0)="^^1^1^3101016^"
^IBA(364.7,1774,3,1,0)="Always set to XX."
^IBA(364.7,1775,0)="2075^N^5^^^^N"
^IBA(364.7,1775,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1776,0)="2076^N^5^^^^N"
^IBA(364.7,1776,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1777,0)="2077^N^5^^^^N"
^IBA(364.7,1777,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1778,0)="2078^N^5^^^^N"
^IBA(364.7,1778,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,9)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,10)"
^IBA(364.7,1779,0)="2079^N^5^^^^N"
^IBA(364.7,1779,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,9)"
^IBA(364.7,1780,0)="2080^N^5^^^^N"
^IBA(364.7,1780,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,11)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,12)"
^IBA(364.7,1781,0)="2081^N^5^^^^N"
^IBA(364.7,1781,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,11)"
^IBA(364.7,1784,0)="2084^N^5^^^^N"
^IBA(364.7,1784,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1785,0)="2085^N^131^^^^N"
^IBA(364.7,1785,1)="S IBXDATA=""LOP1"""
^IBA(364.7,1786,0)="2086^N^5^^^^N"
^IBA(364.7,1786,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LOP1"")"
^IBA(364.7,1787,0)="2087^N^5^^^^N"
^IBA(364.7,1787,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LOP1"")"
^IBA(364.7,1788,0)="2088^N^5^^^^N"
^IBA(364.7,1788,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U)'="""" IBXDATA(Z)=""ZZ"""
^IBA(364.7,1788,3,0)="^^1^1^3101017^"
^IBA(364.7,1788,3,1,0)="Always set to ZZ."
^IBA(364.7,1789,0)="2089^N^5^^^^N"
^IBA(364.7,1789,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U)"
^IBA(364.7,1790,0)="2090^N^5^^^^N"
^IBA(364.7,1790,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,2)"
^IBA(364.7,1791,0)="2091^N^5^^^^N"
^IBA(364.7,1791,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,3)"
^IBA(364.7,1792,0)="2092^N^5^^^^N"
^IBA(364.7,1792,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,4)"
^IBA(364.7,1793,0)="2093^N^5^^^^N"
^IBA(364.7,1793,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1793,3,0)="^^1^1^3101017^"
^IBA(364.7,1793,3,1,0)="Always set to XX."
^IBA(364.7,1794,0)="2094^N^5^^^^N"
^IBA(364.7,1794,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1795,0)="2095^N^5^^^^N"
^IBA(364.7,1795,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1796,0)="2096^N^5^^^^N"
^IBA(364.7,1796,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1797,0)="2097^N^5^^^^N"
^IBA(364.7,1797,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,9)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,10)"
^IBA(364.7,1798,0)="2098^N^5^^^^N"
^IBA(364.7,1798,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,9)"
^IBA(364.7,1799,0)="2099^N^5^^^^N"
^IBA(364.7,1799,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,11)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,12)"
^IBA(364.7,1800,0)="2100^N^5^^^^N"
^IBA(364.7,1800,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,11)"
^IBA(364.7,1803,0)="2103^N^5^^^^N"
^IBA(364.7,1803,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1804,0)="2104^N^131^^^^N"
^IBA(364.7,1804,1)="S IBXDATA=""LREN"""
^IBA(364.7,1805,0)="2105^N^5^^^^N"
^IBA(364.7,1805,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LREN"")"
^IBA(364.7,1806,0)="2106^N^5^^^^N"
^IBA(364.7,1806,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LREN"")"
^IBA(364.7,1807,0)="2107^N^5^^^^N"
^IBA(364.7,1807,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U)'="""" IBXDATA(Z)=82"
^IBA(364.7,1808,0)="2108^N^5^^^^N"
^IBA(364.7,1808,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U)"
^IBA(364.7,1809,0)="2109^N^5^^^^N"
^IBA(364.7,1809,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,2)"
^IBA(364.7,1810,0)="2110^N^5^^^^N"
^IBA(364.7,1810,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,3)"
^IBA(364.7,1811,0)="2111^N^5^^^^N"
^IBA(364.7,1811,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,4)"
^IBA(364.7,1812,0)="2112^N^5^^^^N"
^IBA(364.7,1812,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1812,3,0)="^^1^1^3101017^"
^IBA(364.7,1812,3,1,0)="Always set to XX."
^IBA(364.7,1813,0)="2113^N^5^^^^N"
^IBA(364.7,1813,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1814,0)="2114^N^5^^^^N"
^IBA(364.7,1814,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1815,0)="2115^N^5^^^^N"
^IBA(364.7,1815,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1816,0)="2116^N^5^^^^N"
^IBA(364.7,1816,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,9)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,10)"
^IBA(364.7,1817,0)="2117^N^5^^^^N"
^IBA(364.7,1817,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,9)"
^IBA(364.7,1818,0)="2118^N^5^^^^N"
^IBA(364.7,1818,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,11)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,12)"
^IBA(364.7,1819,0)="2119^N^5^^^^N"
^IBA(364.7,1819,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,11)"
^IBA(364.7,1822,0)="2122^N^5^^^^N"
^IBA(364.7,1822,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1823,0)="2123^N^5^^^^N"
^IBA(364.7,1823,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,5)'="""" IBXDATA(Z)=""PE"""
^IBA(364.7,1824,0)="2124^N^5^^^^N"
^IBA(364.7,1824,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,5)"
^IBA(364.7,1825,0)="2125^N^131^^^^N"
^IBA(364.7,1825,1)="S IBXDATA=""LPUR"""
^IBA(364.7,1826,0)="2126^N^5^^^^N"
^IBA(364.7,1826,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LPUR"")"
^IBA(364.7,1827,0)="2127^N^5^^^^N"
^IBA(364.7,1827,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  I $D(IBXSAVE(""SLPRV"",Z,""SLC"")) S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LPUR"")"
^IBA(364.7,1828,0)="2128^N^5^^^^N"
^IBA(364.7,1828,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" I $D(IBXSAVE(""SLPRV"",Z,""SLC"")) S IBXDATA(Z)=""QB"""
^IBA(364.7,1829,0)="2129^N^5^^^^N"
^IBA(364.7,1829,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1829,3,0)="^^1^1^3101017^"
^IBA(364.7,1829,3,1,0)="Always set to XX."
^IBA(364.7,1830,0)="2130^N^5^^^^N"
^IBA(364.7,1830,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1831,0)="2131^N^5^^^^N"
^IBA(364.7,1831,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1832,0)="2132^N^5^^^^N"
^IBA(364.7,1832,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1833,0)="2133^N^5^^^^N"
^IBA(364.7,1833,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1834,0)="2134^N^131^^^^N"
^IBA(364.7,1834,1)="S IBXDATA=""LSUP"""
^IBA(364.7,1835,0)="2135^N^5^^^^N"
^IBA(364.7,1835,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LSUP"")"
^IBA(364.7,1836,0)="2136^N^5^^^^N"
^IBA(364.7,1836,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LSUP"")"
^IBA(364.7,1837,0)="2137^N^5^^^^N"
^IBA(364.7,1837,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U)'="""" IBXDATA(Z)=""DQ"""
^IBA(364.7,1838,0)="2138^N^5^^^^N"
^IBA(364.7,1838,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U)"
^IBA(364.7,1839,0)="2139^N^5^^^^N"
^IBA(364.7,1839,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,2)"
^IBA(364.7,1840,0)="2140^N^5^^^^N"
^IBA(364.7,1840,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,3)"
^IBA(364.7,1841,0)="2141^N^5^^^^N"
^IBA(364.7,1841,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,4)"
^IBA(364.7,1842,0)="2142^N^5^^^^N"
^IBA(364.7,1842,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1842,3,0)="^^1^1^3101017^"
^IBA(364.7,1842,3,1,0)="Always set to XX."
^IBA(364.7,1843,0)="2143^N^5^^^^N"
^IBA(364.7,1843,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1844,0)="2144^N^5^^^^N"
^IBA(364.7,1844,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1845,0)="2145^N^5^^^^N"
^IBA(364.7,1845,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1846,0)="2146^N^5^^^^N"
^IBA(364.7,1846,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,9)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,10)"
^IBA(364.7,1847,0)="2147^N^5^^^^N"
^IBA(364.7,1847,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,9)"
^IBA(364.7,1848,0)="2148^N^5^^^^N"
^IBA(364.7,1848,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,11)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,12)"
^IBA(364.7,1849,0)="2149^N^5^^^^N"
^IBA(364.7,1849,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,11)"
^IBA(364.7,1852,0)="2152^N^5^^^^N"
^IBA(364.7,1852,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1853,0)="2153^N^131^^^^N"
^IBA(364.7,1853,1)="S IBXDATA=""LREF"""
^IBA(364.7,1854,0)="2154^N^5^^^^N"
^IBA(364.7,1854,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LREF"")"
^IBA(364.7,1855,0)="2155^N^5^^^^N"
^IBA(364.7,1855,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LREF"")"
^IBA(364.7,1856,0)="2156^N^5^^^^N"
^IBA(364.7,1856,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U)'="""" IBXDATA(Z)=""DN"""
^IBA(364.7,1857,0)="2157^N^5^^^^N"
^IBA(364.7,1857,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U)"
^IBA(364.7,1858,0)="2158^N^5^^^^N"
^IBA(364.7,1858,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,2)"
^IBA(364.7,1859,0)="2159^N^5^^^^N"
^IBA(364.7,1859,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,3)"
^IBA(364.7,1860,0)="2160^N^5^^^^N"
^IBA(364.7,1860,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,4)"
^IBA(364.7,1861,0)="2161^N^5^^^^N"
^IBA(364.7,1861,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,6)'="""" IBXDATA(Z)=""XX"""
^IBA(364.7,1861,3,0)="^^1^1^3101017^"
^IBA(364.7,1861,3,1,0)="Always set to XX."
^IBA(364.7,1862,0)="2162^N^5^^^^N"
^IBA(364.7,1862,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,6)"
^IBA(364.7,1863,0)="2163^N^5^^^^N"
^IBA(364.7,1863,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1864,0)="2164^N^5^^^^N"
^IBA(364.7,1864,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1865,0)="2165^N^5^^^^N"
^IBA(364.7,1865,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,9)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,10)"
^IBA(364.7,1866,0)="2166^N^5^^^^N"
^IBA(364.7,1866,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,9)"
^IBA(364.7,1867,0)="2167^N^5^^^^N"
^IBA(364.7,1867,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,11)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,12)"
^IBA(364.7,1868,0)="2168^N^5^^^^N"
^IBA(364.7,1868,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,11)"
^IBA(364.7,1869,0)="2169^N^5^^^^N"
^IBA(364.7,1869,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1870,0)="2170^N^5^^^^N"
^IBA(364.7,1870,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1871,0)="2171^N^5^^^^N"
^IBA(364.7,1871,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1872,0)="2172^N^5^^^^N"
^IBA(364.7,1872,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1873,0)="2173^N^5^^^^N"
^IBA(364.7,1873,1)="D CLEANUP^IBCEFP1(.IBXSAVE) D ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1874,0)="2174^N^5^^^^N"
^IBA(364.7,1874,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1875,0)="2175^N^5^^^^N"
^IBA(364.7,1875,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1875,3,0)="^^1^1^3101105^"
^IBA(364.7,1875,3,1,0)="Set up the IBXSAVE array to build the OPR1 record."
^IBA(364.7,1876,0)="2176^N^5^^^^N"
^IBA(364.7,1876,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1876,3,0)="^364.73^1^1^3110220^^"
^IBA(364.7,1876,3,1,0)="Clean up the IBXSAVE array."
^IBA(364.7,1877,0)="2177^N^5^^^^N"
^IBA(364.7,1877,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1877,3,0)="^364.73^1^1^3101108^^"
^IBA(364.7,1877,3,1,0)="Setup record for OPR2.  Sets up IBXSAVE"
^IBA(364.7,1878,0)="2178^N^5^^^^N"
^IBA(364.7,1878,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1878,3,0)="^^1^1^3101105^"
^IBA(364.7,1878,3,1,0)="Clean up record for OPR2"
^IBA(364.7,1879,0)="2179^N^5^^^^N"
^IBA(364.7,1879,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1879,3,0)="^364.73^1^1^3101108^^"
^IBA(364.7,1879,3,1,0)="Set up IBXSAVE array for OPR3"
^IBA(364.7,1880,0)="2180^N^5^^^^N"
^IBA(364.7,1880,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1880,3,0)="^^1^1^3101105^"
^IBA(364.7,1880,3,1,0)="Clean up IBXSAVE array"
^IBA(364.7,1881,0)="2181^N^5^^^^N"
^IBA(364.7,1881,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1881,3,0)="^^1^1^3101105^"
^IBA(364.7,1881,3,1,0)="Set up IBXSAVE array for OPR4 record."
^IBA(364.7,1882,0)="2182^N^5^^^^N"
^IBA(364.7,1882,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1882,3,0)="^^1^1^3101105^"
^IBA(364.7,1882,3,1,0)="Clean up for OPR4 record."
^IBA(364.7,1883,0)="2183^N^5"
^IBA(364.7,1883,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1883,3,0)="^^1^1^3101108^"
^IBA(364.7,1883,3,1,0)="Setup for OPR5 record"
^IBA(364.7,1884,0)="2184^N^5^^^^N"
^IBA(364.7,1884,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1884,3,0)="^^1^1^3101108^"
^IBA(364.7,1884,3,1,0)="Clean up after OPR5 record."
^IBA(364.7,1885,0)="2185^N^5^^^^N"
^IBA(364.7,1885,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1886,0)="2186^N^5^^^^N"
^IBA(364.7,1886,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1886,3,0)="^^1^1^3101108^"
^IBA(364.7,1886,3,1,0)="Set up the IBXSAVE array for the OPR8 record."
^IBA(364.7,1887,0)="2187^N^5^^^^N"
^IBA(364.7,1887,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1888,0)="2188^N^5^^^^N"
^IBA(364.7,1888,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1889,0)="2189^N^5^^^^N"
^IBA(364.7,1889,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1889,3,0)="^364.73^1^1^3101108^^"
^IBA(364.7,1889,3,1,0)="Set up IBXSAVE array for OPRA record."
^IBA(364.7,1890,0)="2190^N^5^^^^N"
^IBA(364.7,1890,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1891,0)="2191^N^5^^^^N"
^IBA(364.7,1891,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1891,3,0)="^^1^1^3101108^"
^IBA(364.7,1891,3,1,0)="Set up IBXSAVE for OP1 record."
^IBA(364.7,1892,0)="2192^N^5^^^^N"
^IBA(364.7,1892,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1893,0)="2193^N^5^^^^N"
^IBA(364.7,1893,1)="D CLEANUP^IBCEFP1(.IBXSAVE) I $$FT^IBCEF(IBIFN)=3 D ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1893,3,0)="^^1^1^3101108^"
^IBA(364.7,1893,3,1,0)="Set up IBX Array for OP1A if form type is 3."
^IBA(364.7,1894,0)="2194^N^5"
^IBA(364.7,1894,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1894,3,0)="^^1^1^3101108^"
^IBA(364.7,1894,3,1,0)="Clean up after OP1A record."
^IBA(364.7,1895,0)="2195^N^5^^^^N"
^IBA(364.7,1895,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1895,3,0)="^^1^1^3101108^"
^IBA(364.7,1895,3,1,0)="Set up IBXSAVE array for OP2 record."
^IBA(364.7,1896,0)="2196^N^5^^^^N"
^IBA(364.7,1896,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1897,0)="2197^N^5^^^^N"
^IBA(364.7,1897,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1897,3,0)="^^1^1^3101108^"
^IBA(364.7,1897,3,1,0)="Set up IBXSAVE for OP4 record."
^IBA(364.7,1898,0)="2198^N^5^^^^N"
^IBA(364.7,1898,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1899,0)="2199^N^5^^^^N"
^IBA(364.7,1899,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1899,3,0)="^^1^1^3101109^"
^IBA(364.7,1899,3,1,0)="Set up IBXSAVE array for the OP8 record."
^IBA(364.7,1900,0)="2200^N^5"
^IBA(364.7,1900,1)="D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1)"
^IBA(364.7,1900,3,0)="^^1^1^3101109^"
^IBA(364.7,1900,3,1,0)="Set up IBXSAVE array for the OP9 record."
^IBA(364.7,1901,0)="2201^N^5^^^^N"
^IBA(364.7,1901,1)="D CLEANUP^IBCEFP1(.IBXSAVE)"
^IBA(364.7,1901,3,0)="^^1^1^3101109^"
^IBA(364.7,1901,3,1,0)="Clean up IBXSAVE array after OP9 record."
^IBA(364.7,1902,0)="2202^N^5^^^^N"
^IBA(364.7,1902,1)="K IBXSAVE N LN,NOKILL,IBPCE S LN=0 F  S LN=$O(^TMP(""IBXDATA"",$J,IBXREC,IBXPG,LN)) Q:'LN  S NOKILL=0 F IBPCE=4,6,8,10 S:$G(^TMP(""IBXDATA"",$J,IBXREC,IBXPG,LN,IBPCE))]"""" NOKILL=1 I IBPCE=10,'NOKILL K ^TMP(""IBXDATA"",$J,IBXREC,IBXPG,LN)"
^IBA(364.7,1902,3,0)="^^2^2^3101129^"
^IBA(364.7,1902,3,1,0)="If pieces 4, 6, 8 and 10 are null remove the line from the output "
^IBA(364.7,1902,3,2,0)="formatter."
^IBA(364.7,1903,0)="2203^N^373^^^^N"
^IBA(364.7,1903,1)="M IBXSAVE(""CCOB"")=IBXDATA K IBXDATA"
^IBA(364.7,1904,0)="2204^N^225^^^^N"
^IBA(364.7,1904,1)="M IBXSAVE(""CCOB"")=IBXDATA N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""CCOB"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""CCOB"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""CCOB"",IBZ,Z,1)),U,2) S IBXDATA(Z0)=""EAF"""
^IBA(364.7,1905,0)="2205^N^5^^^^N"
^IBA(364.7,1905,1)="N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE(""CCOB"",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE(""CCOB"",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE(""CCOB"",IBZ,Z,1)),U,2) S IBXDATA(Z0)=$$DOLLAR^IBCEFG1($G(IBXDATA(Z0))+$P(IBXSAVE(""CCOB"",IBZ,Z,1),U,2))"
^IBA(364.7,1906,0)="2206^N^5^^^^N"
^IBA(364.7,1906,1)="K IBXDATA D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,""Z"")"
^IBA(364.7,1906,3,0)="^364.73^1^1^3110113^^"
^IBA(364.7,1906,3,1,0)="Payer Sequence # code"
^IBA(364.7,1907,0)="2207^N^5^^^^N"
^IBA(364.7,1907,1)="K IBXDATA D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,""Z"")"
^IBA(364.7,1907,3,0)="^364.73^1^1^3110114^^"
^IBA(364.7,1907,3,1,0)="Payer Responsibility Sequence # Code"
^IBA(364.7,1909,0)="2209^N^5^^^^N"
^IBA(364.7,1909,1)="D AMB^IBCEFP(IBXIEN,.IBXSAVE)"
^IBA(364.7,1909,3,0)="^^1^1^3110609^"
^IBA(364.7,1909,3,1,0)="Set up Data fields for AMB record(s)"
^IBA(364.7,1910,0)="2210^N^5^^^^N"
^IBA(364.7,1910,1)="K IBXSAVE(""AMB"")"
^IBA(364.7,1910,3,0)="^364.73^1^1^3110609^^"
^IBA(364.7,1910,3,1,0)="Clean up the IBXSAVE array"
^IBA(364.7,1911,0)="2211^N^5^^^^N"
^IBA(364.7,1911,1)="D AMB^IBCEFP(IBXIEN,.IBXSAVE)"
^IBA(364.7,1911,3,0)="^^1^1^3110610^"
^IBA(364.7,1911,3,1,0)="Set up IBXSAVE Array for AMB1 record"
^IBA(364.7,1912,0)="2212^N^5^^^^N"
^IBA(364.7,1912,1)="S IBXDATA=$P($G(IBXSAVE(""AMB"",""U7"")),U,5) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1912,3,0)="^364.73^1^1^3110809^^"
^IBA(364.7,1912,3,1,0)="Ambulance Stretcher Purpose"
^IBA(364.7,1913,0)="2213^N^5^^^^N^0"
^IBA(364.7,1913,1)="K IBXSAVE(""AMB"")"
^IBA(364.7,1913,3,0)="^364.73^1^1^3110610^^^^"
^IBA(364.7,1913,3,1,0)="Clean up after Ambulance record creation"
^IBA(364.7,1914,0)="2214^N^131^^^^N"
^IBA(364.7,1914,1)="S IBXDATA=""AMB2"""
^IBA(364.7,1914,3,0)="^^1^1^3110610^"
^IBA(364.7,1914,3,1,0)="AMB2 Record ID field"
^IBA(364.7,1915,0)="2215^N^5^^^^N"
^IBA(364.7,1915,1)="D AMB^IBCEFP(IBXIEN,.IBXSAVE)"
^IBA(364.7,1915,3,0)="^^1^1^3110610^"
^IBA(364.7,1915,3,1,0)="Set up IBXSAVE array with Ambulance data"
^IBA(364.7,1916,0)="2216^N^5^^^^N"
^IBA(364.7,1916,1)="K IBXDATA I $D(IBXSAVE(""AMB"",""U9"")) S IBXDATA=""07"""
^IBA(364.7,1916,3,0)="^^1^1^3110610^"
^IBA(364.7,1916,3,1,0)="Set up Amb Code Categorywith ""07"" if data exists for this record."
^IBA(364.7,1917,0)="2217^N^5^^^^N"
^IBA(364.7,1917,1)="K IBXDATA I $D(IBXSAVE(""AMB"",""U9"")) S IBXDATA=""Y"""
^IBA(364.7,1917,3,0)="^^2^2^3110610^"
^IBA(364.7,1917,3,1,0)="Set Y into field Amb Certification Condition Indicator if data exists for "
^IBA(364.7,1917,3,2,0)="the record."
^IBA(364.7,1918,0)="2218^N^5^^^^N"
^IBA(364.7,1918,1)="S IBXDATA=$G(IBXSAVE(""AMB"",""U9"",1)) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1918,3,0)="^^1^1^3110610^"
^IBA(364.7,1918,3,1,0)="Amb Condition code 1 data"
^IBA(364.7,1919,0)="2219^N^5^^^^N"
^IBA(364.7,1919,1)="S IBXDATA=$G(IBXSAVE(""AMB"",""U9"",2)) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1919,3,0)="^364.73^1^1^3110610^"
^IBA(364.7,1919,3,1,0)="Amb Condition code 2"
^IBA(364.7,1920,0)="2220^N^5^^^^N"
^IBA(364.7,1920,1)="S IBXDATA=$G(IBXSAVE(""AMB"",""U9"",3)) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1920,3,0)="^^1^1^3110610^"
^IBA(364.7,1920,3,1,0)="Amb Condition Code 3"
^IBA(364.7,1921,0)="2221^N^5^^^^N"
^IBA(364.7,1921,1)="S IBXDATA=$G(IBXSAVE(""AMB"",""U9"",4)) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1921,3,0)="^^1^1^3110610^"
^IBA(364.7,1921,3,1,0)="Amb Condition Code 4"
^IBA(364.7,1922,0)="2222^N^5^^^^N"
^IBA(364.7,1922,1)="S IBXDATA=$G(IBXSAVE(""AMB"",""U9"",5)) I IBXDATA="""" K IBXDATA"
^IBA(364.7,1922,3,0)="^^1^1^3110610^"
^IBA(364.7,1922,3,1,0)="Amb Condition Code 5"
^IBA(364.7,1923,0)="2223^N^5^^^^N"
^IBA(364.7,1923,1)="K IBXSAVE(""AMB"")"
^IBA(364.7,1923,3,0)="^^1^1^3110610^"
^IBA(364.7,1923,3,1,0)="Clean up after AMB2 record."
^IBA(364.7,1927,0)="2227^N^56^^^^N"
^IBA(364.7,1927,1)="N Z,Z1,IBZ M IBZ=IBXDATA K IBXDATA Q:$$COBN^IBCEF(IBXIEN)=1  F Z=1,2 Q:Z=2&($$COBN^IBCEF(IBXIEN)=2)  I $D(^DGCR(399,IBXIEN,""I""_(Z+1))),$G(IBZ(Z))'="""" S IBXDATA(Z)=IBZ(Z)"
^IBA(364.7,1927,3,0)="^364.73^10^10^3170417^^^^"
^IBA(364.7,1927,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1927,3,2,0)="possible for the data element in the IBXDATA array. If any other insurance"
^IBA(364.7,1927,3,3,0)="form locator 64 data is found, the data is output."
^IBA(364.7,1927,3,4,0)="  "
^IBA(364.7,1927,3,5,0)=" This is OI1A-03 also known as the ICN/DCN for the MRA secondary claims. "
^IBA(364.7,1927,3,6,0)="If there is data here in OI1A-03, then we cannot transmit the Other Payer"
^IBA(364.7,1927,3,7,0)="secondary ID and qualifier #2.  This is in the OI6 segment, pieces 7 and "
^IBA(364.7,1927,3,8,0)="8. For this calculation, OI6-6.9 is set-up very similar to this OI1A-03"
^IBA(364.7,1927,3,9,0)="piece to see if there is an ICN/DCN present.   So any changes here should"
^IBA(364.7,1927,3,10,0)="also be made to OI6-6.9 as a calculate only field."
^IBA(364.7,1928,0)="2228^N^5^^^^N"
^IBA(364.7,1928,1)="K IBXDATA D LPTRESP^IBCEU1(IBXIEN,.IBXSAVE,.IBXDATA,16)"
^IBA(364.7,1928,3,0)="^364.73^1^1^3120216^^^^"
^IBA(364.7,1928,3,1,0)="This data element is the qualifier for the amount piece 17 of this record."
^IBA(364.7,1929,0)="2229^N^5^^^^N"
^IBA(364.7,1929,1)="K IBXDATA D LPTRESP^IBCEU1(IBXIEN,.IBXSAVE,.IBXDATA,17)"
^IBA(364.7,1929,3,0)="^364.73^1^1^3120216^^^^"
^IBA(364.7,1929,3,1,0)="This data element is the remaining liability amount per line."
^IBA(364.7,1930,0)="2234^N^91"
^IBA(364.7,1931,0)="2240^N^132^^^^N"
^IBA(364.7,1931,3,0)="^364.73^1^1^3140407^^"
^IBA(364.7,1931,3,1,0)="Qualifier for the date"
^IBA(364.7,1932,0)="2241^N^139^^^^N"
^IBA(364.7,1932,3,0)="^364.73^1^1^3140407^^"
^IBA(364.7,1932,3,1,0)="Other Date Qualifier"
^IBA(364.7,1933,0)="2239^N^130"
^IBA(364.7,1934,0)="2243^N^161^^^^N"
^IBA(364.7,1934,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(5,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1935,0)="2244^N^182^^^^N"
^IBA(364.7,1935,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(6,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1936,0)="2245^N^213^^^^N"
^IBA(364.7,1936,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(7,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1937,0)="2246^N^219^^^^N"
^IBA(364.7,1937,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(8,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1938,0)="2247^N^237^^^^N"
^IBA(364.7,1938,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(9,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1939,0)="2248^N^355"
^IBA(364.7,1939,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(10,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1940,0)="2249^N^356^^^^N"
^IBA(364.7,1940,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(11,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1941,0)="2250^N^376^^^^N"
^IBA(364.7,1941,1)="S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(12,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)"
^IBA(364.7,1942,0)="2242^N^149^^^^N"
^IBA(364.7,1942,3,0)="^^2^2^3140116^"
^IBA(364.7,1942,3,1,0)="This indicates if diagnosis codes are ICD9 or ICD10. A ""9"" indicates ICD9 "
^IBA(364.7,1942,3,2,0)="and a ""0"" indicates ICD10."
^IBA(364.7,1943,0)="2238^N^377^^^^N"
^IBA(364.7,1944,0)="2230^N^110^^^^N"
^IBA(364.7,1945,0)="2251^N^5^^^^N"
^IBA(364.7,1945,1)="K IBXDATA I $P($G(IBXSAVE(""CI_HPID"",1)),U)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_HPID"",1)),U)"
^IBA(364.7,1945,3,0)="^364.73^2^2^3170901^^"
^IBA(364.7,1945,3,1,0)="If there is an HPID (Sequence 37, Piece 9), then this field will be 'XV'. "
^IBA(364.7,1945,3,2,0)="MRD;IB*2.0*516"
^IBA(364.7,1946,0)="2231^N^5^^^^N"
^IBA(364.7,1946,1)="K IBXDATA I $P($G(IBXSAVE(""CI_HPID"",1)),U,2)'="""" S IBXDATA=$P($G(IBXSAVE(""CI_HPID"",1)),U,2) D CLEANUP^IBCEF78(.IBXSAVE)"
^IBA(364.7,1946,3,0)="^364.73^1^1^3170901^^"
^IBA(364.7,1946,3,1,0)="This will be the HPID from the bill/claim. MRD;IB*2.0*516"
^IBA(364.7,1947,0)="2252^N^5^^^^N^0"
^IBA(364.7,1947,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""LDAT"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""LDAT"",Z),U,7)"
^IBA(364.7,1947,3,0)="^364.73^4^4^3140707^^"
^IBA(364.7,1947,3,1,0)="This field may contain an additional description of this procedure, which "
^IBA(364.7,1947,3,2,0)="the user is able to enter only for NOC procedures (those procedures which "
^IBA(364.7,1947,3,3,0)="end in '99' or whose descriptions contain verbiage such as 'NOT OTHERWISE"
^IBA(364.7,1947,3,4,0)="CLASSIFIED', 'NOC', 'NOS', etc.). MRD;IB*2.0*516"
^IBA(364.7,1948,0)="2235^N^5^^^^N^0"
^IBA(364.7,1948,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""INPT"",Z)) Q:'Z  I $P(IBXSAVE(""INPT"",Z),U,11)'="""" S IBXDATA(Z)=$P(IBXSAVE(""INPT"",Z),U,11)"
^IBA(364.7,1948,3,0)="^364.73^2^2^3140520^"
^IBA(364.7,1948,3,1,0)="This field may contain an NDC enterd by the user for this line of the "
^IBA(364.7,1948,3,2,0)="claim. MRD;IB*2.0*516"
^IBA(364.7,1949,0)="2236^N^5^^^^N^0"
^IBA(364.7,1949,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""INPT"",Z)) Q:'Z  I $P(IBXSAVE(""INPT"",Z),U,12)'="""" S IBXDATA(Z)=+$TR($J($P(IBXSAVE(""INPT"",Z),U,12),11,3),"" ."")"
^IBA(364.7,1949,3,0)="^364.73^2^2^3170508^^^"
^IBA(364.7,1949,3,1,0)="If the user added an NDC to this line of the claim, they are then allowed "
^IBA(364.7,1949,3,2,0)="to enter a unit. MRD;IB*2.0*516"
^IBA(364.7,1950,0)="2237^N^5^^^^N^0"
^IBA(364.7,1950,1)="K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE(""INPT"",Z)) Q:'Z  I $P(IBXSAVE(""INPT"",Z),U,12)'="""" S IBXDATA(Z)=$P(IBXSAVE(""INPT"",Z),U,13) I IBXDATA(Z)="""" S IBXDATA(Z)=""UN"""
^IBA(364.7,1950,3,0)="^364.73^3^3^3170413^^^"
^IBA(364.7,1950,3,1,0)="If the user added an NDC to this line of the claim, there should also be "
^IBA(364.7,1950,3,2,0)="a value in the unit field ($P(IBXSAVE(""INPT"",Z),U,12), and if there is, "
^IBA(364.7,1950,3,3,0)="then this field should be 'UN'. MRD;IB*2.0*516"
^IBA(364.7,1951,0)="2253^N^131^^^^N"
^IBA(364.7,1951,1)="S IBXDATA=""CI2A"""
^IBA(364.7,1951,3,0)="^^1^1^3150819^"
^IBA(364.7,1951,3,1,0)="Output RECORD ID for CI2A record."
^IBA(364.7,1952,0)="2254^N^54^^^^N"
^IBA(364.7,1953,0)="2255^N^131^^^^N"
^IBA(364.7,1953,1)="S IBXDATA=""CI3A"""
^IBA(364.7,1953,3,0)="^^1^1^3150819^"
^IBA(364.7,1953,3,1,0)="Output RECORD ID for CI3A record."
^IBA(364.7,1954,0)="2256^N^131^^^^N"
^IBA(364.7,1954,1)="S IBXDATA=""OI1A"""
^IBA(364.7,1954,3,0)="^^1^1^3150819^"
^IBA(364.7,1954,3,1,0)="Output RECORD ID for OI1A record."
^IBA(364.7,1955,0)="2257^N^101^^^^N"
^IBA(364.7,1955,1)="N IBZ,IBW,Z,Z0 D F^IBCEF(""N-ALL AUTH CODES"",""IBW"") M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=0 F  S Z=$O(IBXSAVE(1,Z)),Z0=Z0+1 Q:'Z  I Z<($F(""PST"",IBXSAVE(1))-1)!($G(IBW(Z))]"""") S IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,""OI1A"")"
^IBA(364.7,1955,3,0)="^364.73^8^8^3170417^^^^"
^IBA(364.7,1955,3,1,0)="This is a group data element so more than 1 occurrence of a value is"
^IBA(364.7,1955,3,2,0)="possible for the data element in the IBXDATA array.  The IBXSAVE(1) "
^IBA(364.7,1955,3,3,0)="variable holds the indicator of which insurance"
^IBA(364.7,1955,3,4,0)="[(P)rimary/(S)econdary/(T)ertiary] is currently responsible for the"
^IBA(364.7,1955,3,5,0)="bill.    Using this data as a guide, the next insurance for the primary is"
^IBA(364.7,1955,3,6,0)="secondary, then tertiary.  For secondary, it's primary then tertiary, and"
^IBA(364.7,1955,3,7,0)="for tertiary, it's primary, then secondary. For other than the first"
^IBA(364.7,1955,3,8,0)="occurrence, the RECORD ID 'OI1A' must be output."
^IBA(364.7,1956,0)="2371^N^5^^^^N"
^IBA(364.7,1956,1)="S IBXDATA="""""
^IBA(364.7,1956,3,0)="^364.73^2^2^3170510^^"
^IBA(364.7,1956,3,1,0)="JRA IB*2.0*577 Created to replace SUB (Seq 55), field 8 (CLIA #) which was"
^IBA(364.7,1956,3,2,0)="moved to SUB2 (Seq 57), field 13."
^IBA(364.7,1957,0)="2372^N^131^^^^N"
^IBA(364.7,1957,1)="S IBXDATA=""LSR1"""
^IBA(364.7,1958,0)="2373^N^5^^^^N"
^IBA(364.7,1958,1)="I $$FT^IBCEF(IBXIEN)=7 D CLEANUP^IBCEFP1(.IBXSAVE),ALLIDS^IBCEFP(IBXIEN,.IBXSAVE,1,""LSR1"")"
^IBA(364.7,1959,0)="2374^N^5^^^^N"
^IBA(364.7,1959,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$G(IBXSAVE(""SLPRV"",Z,""SLC"")) D:Z>1 ID^IBCEF2(Z,""LSR1"")"
^IBA(364.7,1960,0)="2375^N^5^^^^N"
^IBA(364.7,1960,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,7)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,8)"
^IBA(364.7,1961,0)="2376^N^5^^^^N"
^IBA(364.7,1961,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,7)"
^IBA(364.7,1962,0)="2377^N^5^^^^N"
^IBA(364.7,1962,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,9)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,10)"
^IBA(364.7,1963,0)="2378^N^5^^^^N"
^IBA(364.7,1963,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,9)"
^IBA(364.7,1964,0)="2379^N^5^^^^N"
^IBA(364.7,1964,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,11)'="""" IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,12)"
^IBA(364.7,1965,0)="2380^N^5^^^^N"
^IBA(364.7,1965,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,11)"
^IBA(364.7,1966,0)="2381^N^5^^^^N"
^IBA(364.7,1966,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)="""" S:$P(IBXSAVE(""SLPRV"",Z),U,5)'="""" IBXDATA(Z)=""AS"""
^IBA(364.7,1967,0)="2382^N^5^^^^N"
^IBA(364.7,1967,1)="I $$FT^IBCEF(IBXIEN)=7 N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""SLPRV"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""SLPRV"",Z),U,5)"
^IBA(364.7,1969,0)="2383^N^396^^^^N^0^D"
^IBA(364.7,1969,1)="K IBXDATA S IBXDATA=""LQ  """
^IBA(364.7,1970,0)="2385^N^5^^^^N^0^D"
^IBA(364.7,1970,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""CMNDEX"",Z),U,2) D:Z>1 ID^IBCEF2(Z,""LQ  "")"
^IBA(364.7,1971,0)="2384^N^5^^^^N^0^D"
^IBA(364.7,1971,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""UT"""
^IBA(364.7,1971,3,0)="^^1^1^3171027^"
^IBA(364.7,1971,3,1,0)="The CMN FORM TYPE QUALIFIER is always 'UT'."
^IBA(364.7,1973,0)="2387^N^5^^^^N^0^D"
^IBA(364.7,1973,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),""24:2"")"
^IBA(364.7,1974,0)="2388^N^5^^^^N^0^E"
^IBA(364.7,1974,1)="N Z N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.01,""I"")"
^IBA(364.7,1975,0)="2390^N^5^^^^N^0^D"
^IBA(364.7,1975,1)="N Z,CERTYP K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S CERTYP=$$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.01,""I"") I CERTYP=""R""!(CERTYP=""S"") S IBXDATA(Z)=607"
^IBA(364.7,1977,0)="2392^N^5^^^^N^0"
^IBA(364.7,1977,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""TR"""
^IBA(364.7,1978,0)="2393^N^5^^^^N^0^E"
^IBA(364.7,1978,1)="K IBXDATA S IBXDATA=$$PTWT^IBCEF31(IBXIEN)"
^IBA(364.7,1979,0)="2394^N^5^^^^N^0^E"
^IBA(364.7,1979,1)="K IBXDATA S IBXDATA="""" I $$PTWT^IBCEF31(IBXIEN) S IBXDATA=""01"""
^IBA(364.7,1979,3,0)="^364.73^1^1^3180223^^"
^IBA(364.7,1979,3,1,0)="This is the PATIENT WEIGHT MODIFIER which is always '01'."
^IBA(364.7,1980,0)="2395^N^5^^^^N^0^E"
^IBA(364.7,1980,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.04)"
^IBA(364.7,1981,0)="2396^N^5^^^^N^0^E"
^IBA(364.7,1981,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$DT^IBCEFG1($$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.05,""I""),"""",""D8"")"
^IBA(364.7,1982,0)="2397^N^5^^^^N^0^D"
^IBA(364.7,1982,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=463"
^IBA(364.7,1982,3,0)="^364.73^1^1^3180218^^"
^IBA(364.7,1982,3,1,0)="The value of CMN DATE THERAPY STARTED QUALIFIER is always '463'."
^IBA(364.7,1983,0)="2398^N^5^^^^N^0^E"
^IBA(364.7,1983,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$DT^IBCEFG1($$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.06,""I""),"""",""D8"")"
^IBA(364.7,1984,0)="2399^N^5^^^^N^0^E"
^IBA(364.7,1984,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=461"
^IBA(364.7,1985,0)="2400^N^5^^^^N^0^E"
^IBA(364.7,1985,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$DT^IBCEFG1($$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.07,""I""),"""",""D8"")"
^IBA(364.7,1986,0)="2401^N^5^^^^N^0^E"
^IBA(364.7,1986,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  I $$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.08,""I"") S IBXDATA(Z)=""ZV"""
^IBA(364.7,2018,0)="2433^N^5^^^^N"
^IBA(364.7,2018,1)="D:$D(IBXSAVE(""CMNDEX""))'>1 CMNDEX^IBCEF31(IBXIEN,.IBXSAVE)"
^IBA(364.7,2019,0)="2436^N^5^^^^N"
^IBA(364.7,2019,1)="K IBXSAVE(""FRM"") D FRM^IBCEF31(IBXIEN,.IBXSAVE)"
^IBA(364.7,2020,0)="2438^N^438^^^^N^^D"
^IBA(364.7,2020,1)="K IBXDATA S IBXDATA=""FRM """
^IBA(364.7,2021,0)="2442^N^5^^^^N"
^IBA(364.7,2021,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""FRM"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""FRM"",Z),U)"
^IBA(364.7,2022,0)="2443^N^5^^^^N"
^IBA(364.7,2022,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""FRM"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""FRM"",Z),U,2)"
^IBA(364.7,2023,0)="2444^N^5^^^^N"
^IBA(364.7,2023,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""FRM"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""FRM"",Z),U,3)"
^IBA(364.7,2024,0)="2445^N^5^^^^N"
^IBA(364.7,2024,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""FRM"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""FRM"",Z),U,4)"
^IBA(364.7,2025,0)="2446^N^5^^^^N"
^IBA(364.7,2025,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""FRM"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""FRM"",Z),U,5)"
^IBA(364.7,2026,0)="2439^N^5^^^^N^^D"
^IBA(364.7,2026,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""FRM"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""FRM"",Z),U,6) D:Z>1 ID^IBCEF2(Z,""FRM "")"
^IBA(364.7,2027,0)="2447^N^5^^^^N^0^D"
^IBA(364.7,2027,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""CMNDEX"",Z),U,2) D:Z>1 ID^IBCEF2(Z,""CMN "")"
^IBA(364.7,2028,0)="2448^N^5"
^IBA(364.7,2028,1)="D:$D(IBXSAVE(""CMNDEX""))'>1 CMNDEX^IBCEF31(IBXIEN,.IBXSAVE)"
^IBA(364.7,2029,0)="2449^N^440^^^^N"
^IBA(364.7,2029,1)="K IBXDATA S IBXDATA=""CMN """
^IBA(364.7,2030,0)="2451^N^5^^^^N"
^IBA(364.7,2030,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""MO"""
^IBA(364.7,2031,0)="2452^N^5^^^^N"
^IBA(364.7,2031,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""Y"""
^IBA(364.7,2032,0)="2454^N^5^^^^N"
^IBA(364.7,2032,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""CT"""
^IBA(364.7,2033,0)="2455^N^5^^^^N"
^IBA(364.7,2033,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""AD"""
^IBA(364.7,2034,0)="2456^N^5^^^^N"
^IBA(364.7,2034,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""09"""
^IBA(364.7,2035,0)="2453^N^5^^^^N"
^IBA(364.7,2035,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=""38"""
^IBA(364.7,2038,0)="2457^N^442^^^^N"
^IBA(364.7,2038,1)="K IBXDATA S IBXDATA=""MEA """
^IBA(364.7,2039,0)="2458^N^5^^^^N"
^IBA(364.7,2039,1)="D:$D(IBXSAVE(""CMNDEX""))'>1 CMNDEX^IBCEF31(IBXIEN,.IBXSAVE)"
^IBA(364.7,2040,0)="2461^N^5^^^^N"
^IBA(364.7,2040,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE(""CMNDEX"",Z),U,2) D:Z>1 ID^IBCEF2(Z,""MEA "")"
^IBA(364.7,2041,0)="2462^N^5^^^^N"
^IBA(364.7,2041,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)="""" I $$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.02) S IBXDATA(Z)=""HT"""
^IBA(364.7,2042,0)="2463^N^5^^^^N"
^IBA(364.7,2042,1)="N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE(""CMNDEX"",Z)) Q:'Z  S IBXDATA(Z)=$$CMNDATA^IBCEF31(IBXIEN,+IBXSAVE(""CMNDEX"",Z),24.02)"
^IBA(364.7,"B",1,1)=""
^IBA(364.7,"B",3,6)=""
^IBA(364.7,"B",4,2)=""
^IBA(364.7,"B",6,4)=""
^IBA(364.7,"B",7,5)=""
^IBA(364.7,"B",9,7)=""
^IBA(364.7,"B",10,8)=""
^IBA(364.7,"B",11,9)=""
^IBA(364.7,"B",12,10)=""
^IBA(364.7,"B",13,11)=""
^IBA(364.7,"B",16,15)=""
^IBA(364.7,"B",17,14)=""
^IBA(364.7,"B",18,16)=""
^IBA(364.7,"B",22,19)=""
^IBA(364.7,"B",26,20)=""
^IBA(364.7,"B",27,21)=""
^IBA(364.7,"B",28,24)=""
^IBA(364.7,"B",29,42)=""
^IBA(364.7,"B",30,44)=""
^IBA(364.7,"B",31,43)=""
^IBA(364.7,"B",32,45)=""
^IBA(364.7,"B",33,58)=""
^IBA(364.7,"B",34,59)=""
^IBA(364.7,"B",35,55)=""
^IBA(364.7,"B",36,56)=""
^IBA(364.7,"B",37,57)=""
^IBA(364.7,"B",38,54)=""
^IBA(364.7,"B",39,60)=""
^IBA(364.7,"B",40,61)=""
^IBA(364.7,"B",41,62)=""
^IBA(364.7,"B",42,36)=""
^IBA(364.7,"B",43,63)=""
^IBA(364.7,"B",44,65)=""
^IBA(364.7,"B",45,66)=""
^IBA(364.7,"B",46,67)=""
^IBA(364.7,"B",47,48)=""
^IBA(364.7,"B",48,68)=""
^IBA(364.7,"B",49,72)=""
^IBA(364.7,"B",50,73)=""
^IBA(364.7,"B",51,74)=""
^IBA(364.7,"B",52,75)=""
^IBA(364.7,"B",53,76)=""
^IBA(364.7,"B",54,77)=""
^IBA(364.7,"B",55,99)=""
^IBA(364.7,"B",56,28)=""
^IBA(364.7,"B",57,101)=""
^IBA(364.7,"B",58,52)=""
^IBA(364.7,"B",59,29)=""
^IBA(364.7,"B",60,25)=""
^IBA(364.7,"B",61,26)=""
^IBA(364.7,"B",62,102)=""
^IBA(364.7,"B",63,103)=""
^IBA(364.7,"B",64,64)=""
^IBA(364.7,"B",65,135)=""
^IBA(364.7,"B",66,69)=""
^IBA(364.7,"B",67,47)=""
^IBA(364.7,"B",70,94)=""
^IBA(364.7,"B",71,96)=""
^IBA(364.7,"B",72,97)=""
^IBA(364.7,"B",73,95)=""
^IBA(364.7,"B",74,111)=""
^IBA(364.7,"B",75,31)=""
^IBA(364.7,"B",76,30)=""
^IBA(364.7,"B",81,50)=""
^IBA(364.7,"B",82,51)=""
^IBA(364.7,"B",83,70)=""
^IBA(364.7,"B",84,71)=""
^IBA(364.7,"B",85,39)=""
^IBA(364.7,"B",86,38)=""
^IBA(364.7,"B",87,40)=""
^IBA(364.7,"B",88,105)=""
^IBA(364.7,"B",89,107)=""
^IBA(364.7,"B",91,104)=""
^IBA(364.7,"B",92,27)=""
^IBA(364.7,"B",93,41)=""
^IBA(364.7,"B",95,112)=""
^IBA(364.7,"B",96,113)=""
^IBA(364.7,"B",97,114)=""
^IBA(364.7,"B",98,115)=""
^IBA(364.7,"B",99,117)=""
^IBA(364.7,"B",100,116)=""
^IBA(364.7,"B",101,119)=""
^IBA(364.7,"B",102,120)=""
^IBA(364.7,"B",103,121)=""
^IBA(364.7,"B",106,164)=""
^IBA(364.7,"B",108,127)=""
^IBA(364.7,"B",109,128)=""
^IBA(364.7,"B",110,129)=""
^IBA(364.7,"B",112,165)=""
^IBA(364.7,"B",113,166)=""
^IBA(364.7,"B",114,167)=""
^IBA(364.7,"B",115,168)=""
^IBA(364.7,"B",116,169)=""
^IBA(364.7,"B",117,170)=""
^IBA(364.7,"B",118,171)=""
^IBA(364.7,"B",119,172)=""
^IBA(364.7,"B",120,173)=""
^IBA(364.7,"B",121,174)=""
^IBA(364.7,"B",122,175)=""
^IBA(364.7,"B",123,176)=""
^IBA(364.7,"B",124,177)=""
^IBA(364.7,"B",125,189)=""
^IBA(364.7,"B",126,178)=""
^IBA(364.7,"B",127,179)=""
^IBA(364.7,"B",128,181)=""
^IBA(364.7,"B",129,182)=""
^IBA(364.7,"B",130,180)=""
^IBA(364.7,"B",131,183)=""
^IBA(364.7,"B",132,184)=""
^IBA(364.7,"B",133,138)=""
^IBA(364.7,"B",134,139)=""
^IBA(364.7,"B",135,141)=""
^IBA(364.7,"B",136,142)=""
^IBA(364.7,"B",137,140)=""
^IBA(364.7,"B",138,143)=""
^IBA(364.7,"B",139,37)=""
^IBA(364.7,"B",140,46)=""
^IBA(364.7,"B",141,49)=""
^IBA(364.7,"B",142,98)=""
^IBA(364.7,"B",143,100)=""
^IBA(364.7,"B",144,93)=""
^IBA(364.7,"B",145,92)=""
^IBA(364.7,"B",146,91)=""
^IBA(364.7,"B",147,90)=""
^IBA(364.7,"B",150,87)=""
^IBA(364.7,"B",151,86)=""
^IBA(364.7,"B",152,85)=""
^IBA(364.7,"B",153,84)=""
^IBA(364.7,"B",155,82)=""
^IBA(364.7,"B",156,81)=""
^IBA(364.7,"B",159,78)=""
^IBA(364.7,"B",161,106)=""
^IBA(364.7,"B",162,118)=""
^IBA(364.7,"B",163,123)=""
^IBA(364.7,"B",164,126)=""
^IBA(364.7,"B",165,131)=""
^IBA(364.7,"B",166,132)=""
^IBA(364.7,"B",167,161)=""
^IBA(364.7,"B",168,162)=""
^IBA(364.7,"B",169,163)=""
^IBA(364.7,"B",170,156)=""
^IBA(364.7,"B",171,157)=""
^IBA(364.7,"B",172,390)=""
^IBA(364.7,"B",173,159)=""
^IBA(364.7,"B",174,160)=""
^IBA(364.7,"B",175,194)=""
^IBA(364.7,"B",177,945)=""
^IBA(364.7,"B",178,145)=""
^IBA(364.7,"B",179,147)=""
^IBA(364.7,"B",180,148)=""
^IBA(364.7,"B",181,146)=""
^IBA(364.7,"B",183,149)=""
^IBA(364.7,"B",185,152)=""
^IBA(364.7,"B",186,151)=""
^IBA(364.7,"B",187,153)=""
^IBA(364.7,"B",188,154)=""
^IBA(364.7,"B",189,137)=""
^IBA(364.7,"B",190,136)=""
^IBA(364.7,"B",192,134)=""
^IBA(364.7,"B",193,155)=""
^IBA(364.7,"B",194,185)=""
^IBA(364.7,"B",195,188)=""
^IBA(364.7,"B",196,195)=""
^IBA(364.7,"B",197,190)=""
^IBA(364.7,"B",198,191)=""
^IBA(364.7,"B",206,216)=""
^IBA(364.7,"B",207,219)=""
^IBA(364.7,"B",209,199)=""
^IBA(364.7,"B",210,220)=""
^IBA(364.7,"B",212,221)=""
^IBA(364.7,"B",213,222)=""
^IBA(364.7,"B",214,223)=""
^IBA(364.7,"B",215,200)=""
^IBA(364.7,"B",216,201)=""
^IBA(364.7,"B",217,202)=""
^IBA(364.7,"B",226,226)=""
^IBA(364.7,"B",227,227)=""
^IBA(364.7,"B",230,224)=""
^IBA(364.7,"B",240,231)=""
^IBA(364.7,"B",242,233)=""
^IBA(364.7,"B",243,234)=""
^IBA(364.7,"B",244,235)=""
^IBA(364.7,"B",245,236)=""
^IBA(364.7,"B",246,237)=""
^IBA(364.7,"B",249,239)=""
^IBA(364.7,"B",250,240)=""
^IBA(364.7,"B",251,241)=""
^IBA(364.7,"B",252,242)=""
^IBA(364.7,"B",253,243)=""
^IBA(364.7,"B",479,473)=""
^IBA(364.7,"B",481,474)=""
^IBA(364.7,"B",483,475)=""
^IBA(364.7,"B",488,472)=""
^IBA(364.7,"B",489,250)=""
^IBA(364.7,"B",490,251)=""
^IBA(364.7,"B",495,253)=""
^IBA(364.7,"B",496,254)=""
^IBA(364.7,"B",497,255)=""
^IBA(364.7,"B",498,257)=""
^IBA(364.7,"B",499,258)=""
^IBA(364.7,"B",500,259)=""
^IBA(364.7,"B",501,260)=""
^IBA(364.7,"B",502,261)=""
^IBA(364.7,"B",503,262)=""
^IBA(364.7,"B",504,263)=""
^IBA(364.7,"B",505,264)=""
^IBA(364.7,"B",506,265)=""
^IBA(364.7,"B",507,266)=""
^IBA(364.7,"B",508,267)=""
^IBA(364.7,"B",509,268)=""
^IBA(364.7,"B",510,269)=""
^IBA(364.7,"B",511,270)=""
^IBA(364.7,"B",512,271)=""
^IBA(364.7,"B",513,272)=""
^IBA(364.7,"B",514,273)=""
^IBA(364.7,"B",515,274)=""
^IBA(364.7,"B",516,275)=""
^IBA(364.7,"B",517,276)=""
^IBA(364.7,"B",518,277)=""
^IBA(364.7,"B",519,278)=""
^IBA(364.7,"B",520,279)=""
^IBA(364.7,"B",521,280)=""
^IBA(364.7,"B",522,281)=""
^IBA(364.7,"B",523,282)=""
^IBA(364.7,"B",524,283)=""
^IBA(364.7,"B",525,284)=""
^IBA(364.7,"B",526,285)=""
^IBA(364.7,"B",527,286)=""
^IBA(364.7,"B",528,287)=""
^IBA(364.7,"B",529,288)=""
^IBA(364.7,"B",530,289)=""
^IBA(364.7,"B",531,290)=""
^IBA(364.7,"B",532,291)=""
^IBA(364.7,"B",533,292)=""
^IBA(364.7,"B",534,293)=""
^IBA(364.7,"B",535,294)=""
^IBA(364.7,"B",536,295)=""
^IBA(364.7,"B",537,296)=""
^IBA(364.7,"B",538,297)=""
^IBA(364.7,"B",539,298)=""
^IBA(364.7,"B",540,299)=""
^IBA(364.7,"B",541,300)=""
^IBA(364.7,"B",542,301)=""
^IBA(364.7,"B",543,304)=""
^IBA(364.7,"B",544,305)=""
^IBA(364.7,"B",545,345)=""
^IBA(364.7,"B",546,303)=""
^IBA(364.7,"B",547,307)=""
^IBA(364.7,"B",548,306)=""
^IBA(364.7,"B",549,308)=""
^IBA(364.7,"B",550,309)=""
^IBA(364.7,"B",551,310)=""
^IBA(364.7,"B",552,311)=""
^IBA(364.7,"B",554,336)=""
^IBA(364.7,"B",555,337)=""
^IBA(364.7,"B",556,338)=""
^IBA(364.7,"B",557,339)=""
^IBA(364.7,"B",558,340)=""
^IBA(364.7,"B",559,341)=""
^IBA(364.7,"B",560,342)=""
^IBA(364.7,"B",561,343)=""
^IBA(364.7,"B",562,312)=""
^IBA(364.7,"B",563,313)=""
^IBA(364.7,"B",564,314)=""
^IBA(364.7,"B",565,315)=""
^IBA(364.7,"B",566,348)=""
^IBA(364.7,"B",567,317)=""
^IBA(364.7,"B",568,318)=""
^IBA(364.7,"B",569,319)=""
^IBA(364.7,"B",570,322)=""
^IBA(364.7,"B",571,323)=""
^IBA(364.7,"B",572,327)=""
^IBA(364.7,"B",573,331)=""
^IBA(364.7,"B",574,332)=""
^IBA(364.7,"B",576,252)=""
^IBA(364.7,"B",579,482)=""
^IBA(364.7,"B",580,480)=""
^IBA(364.7,"B",581,481)=""
^IBA(364.7,"B",582,478)=""
^IBA(364.7,"B",583,479)=""
^IBA(364.7,"B",584,320)=""
^IBA(364.7,"B",585,321)=""
^IBA(364.7,"B",589,328)=""
^IBA(364.7,"B",590,329)=""
^IBA(364.7,"B",591,330)=""
^IBA(364.7,"B",592,335)=""
^IBA(364.7,"B",593,344)=""
^IBA(364.7,"B",594,346)=""
^IBA(364.7,"B",595,347)=""
^IBA(364.7,"B",596,349)=""
^IBA(364.7,"B",597,350)=""
^IBA(364.7,"B",598,351)=""
^IBA(364.7,"B",599,352)=""
^IBA(364.7,"B",600,158)=""
^IBA(364.7,"B",601,354)=""
^IBA(364.7,"B",602,355)=""
^IBA(364.7,"B",603,356)=""
^IBA(364.7,"B",604,357)=""
^IBA(364.7,"B",605,483)=""
^IBA(364.7,"B",606,484)=""
^IBA(364.7,"B",607,485)=""
^IBA(364.7,"B",608,486)=""
^IBA(364.7,"B",610,488)=""
^IBA(364.7,"B",611,489)=""
^IBA(364.7,"B",612,490)=""
^IBA(364.7,"B",613,491)=""
^IBA(364.7,"B",614,492)=""
^IBA(364.7,"B",615,493)=""
^IBA(364.7,"B",616,494)=""
^IBA(364.7,"B",617,495)=""
^IBA(364.7,"B",618,496)=""
^IBA(364.7,"B",619,497)=""
^IBA(364.7,"B",620,498)=""
^IBA(364.7,"B",621,499)=""
^IBA(364.7,"B",622,500)=""
^IBA(364.7,"B",623,501)=""
^IBA(364.7,"B",624,502)=""
^IBA(364.7,"B",625,503)=""
^IBA(364.7,"B",626,504)=""
^IBA(364.7,"B",627,505)=""
^IBA(364.7,"B",628,506)=""
^IBA(364.7,"B",629,507)=""
^IBA(364.7,"B",630,508)=""
^IBA(364.7,"B",631,509)=""
^IBA(364.7,"B",632,510)=""
^IBA(364.7,"B",633,511)=""
^IBA(364.7,"B",634,512)=""
^IBA(364.7,"B",635,513)=""
^IBA(364.7,"B",636,514)=""
^IBA(364.7,"B",637,515)=""
^IBA(364.7,"B",638,516)=""
^IBA(364.7,"B",639,517)=""
^IBA(364.7,"B",640,518)=""
^IBA(364.7,"B",641,519)=""
^IBA(364.7,"B",642,520)=""
^IBA(364.7,"B",643,521)=""
^IBA(364.7,"B",644,522)=""
^IBA(364.7,"B",645,523)=""
^IBA(364.7,"B",646,524)=""
^IBA(364.7,"B",647,525)=""
^IBA(364.7,"B",648,526)=""
^IBA(364.7,"B",649,527)=""
^IBA(364.7,"B",650,528)=""
^IBA(364.7,"B",651,529)=""
^IBA(364.7,"B",652,530)=""
^IBA(364.7,"B",655,533)=""
^IBA(364.7,"B",656,534)=""
^IBA(364.7,"B",658,536)=""
^IBA(364.7,"B",661,539)=""
^IBA(364.7,"B",663,692)=""
^IBA(364.7,"B",664,693)=""
^IBA(364.7,"B",665,694)=""
^IBA(364.7,"B",666,695)=""
^IBA(364.7,"B",678,698)=""
^IBA(364.7,"B",679,699)=""
^IBA(364.7,"B",680,700)=""
^IBA(364.7,"B",681,701)=""
^IBA(364.7,"B",682,702)=""
^IBA(364.7,"B",683,703)=""
^IBA(364.7,"B",684,704)=""
^IBA(364.7,"B",685,705)=""
^IBA(364.7,"B",686,706)=""
^IBA(364.7,"B",687,707)=""
^IBA(364.7,"B",688,708)=""
^IBA(364.7,"B",689,709)=""
^IBA(364.7,"B",690,710)=""
^IBA(364.7,"B",691,711)=""
^IBA(364.7,"B",692,712)=""
^IBA(364.7,"B",693,713)=""
^IBA(364.7,"B",694,714)=""
^IBA(364.7,"B",695,715)=""
^IBA(364.7,"B",696,716)=""
^IBA(364.7,"B",697,717)=""
^IBA(364.7,"B",698,718)=""
^IBA(364.7,"B",699,719)=""
^IBA(364.7,"B",700,720)=""
^IBA(364.7,"B",701,721)=""
^IBA(364.7,"B",702,722)=""
^IBA(364.7,"B",703,723)=""
^IBA(364.7,"B",704,724)=""
^IBA(364.7,"B",705,725)=""
^IBA(364.7,"B",706,726)=""
^IBA(364.7,"B",707,727)=""
^IBA(364.7,"B",708,728)=""
^IBA(364.7,"B",709,729)=""
^IBA(364.7,"B",710,730)=""
^IBA(364.7,"B",711,731)=""
^IBA(364.7,"B",712,732)=""
^IBA(364.7,"B",713,733)=""
^IBA(364.7,"B",714,734)=""
^IBA(364.7,"B",715,735)=""
^IBA(364.7,"B",716,736)=""
^IBA(364.7,"B",717,737)=""
^IBA(364.7,"B",718,738)=""
^IBA(364.7,"B",719,739)=""
^IBA(364.7,"B",720,740)=""
^IBA(364.7,"B",721,741)=""
^IBA(364.7,"B",722,742)=""
^IBA(364.7,"B",724,744)=""
^IBA(364.7,"B",725,745)=""
^IBA(364.7,"B",726,746)=""
^IBA(364.7,"B",727,747)=""
^IBA(364.7,"B",728,606)=""
^IBA(364.7,"B",729,607)=""
^IBA(364.7,"B",730,608)=""
^IBA(364.7,"B",731,609)=""
^IBA(364.7,"B",732,610)=""
^IBA(364.7,"B",733,611)=""
^IBA(364.7,"B",734,612)=""
^IBA(364.7,"B",735,613)=""
^IBA(364.7,"B",736,614)=""
^IBA(364.7,"B",737,615)=""
^IBA(364.7,"B",738,616)=""
^IBA(364.7,"B",739,617)=""
^IBA(364.7,"B",740,618)=""
^IBA(364.7,"B",741,619)=""
^IBA(364.7,"B",742,620)=""
^IBA(364.7,"B",743,621)=""
^IBA(364.7,"B",744,622)=""
^IBA(364.7,"B",745,623)=""
^IBA(364.7,"B",746,624)=""
^IBA(364.7,"B",747,625)=""
^IBA(364.7,"B",748,626)=""
^IBA(364.7,"B",749,627)=""
^IBA(364.7,"B",750,628)=""
^IBA(364.7,"B",751,629)=""
^IBA(364.7,"B",752,630)=""
^IBA(364.7,"B",753,631)=""
^IBA(364.7,"B",754,632)=""
^IBA(364.7,"B",755,633)=""
^IBA(364.7,"B",756,634)=""
^IBA(364.7,"B",757,635)=""
^IBA(364.7,"B",758,636)=""
^IBA(364.7,"B",759,637)=""
^IBA(364.7,"B",760,638)=""
^IBA(364.7,"B",761,639)=""
^IBA(364.7,"B",765,643)=""
^IBA(364.7,"B",766,779)=""
^IBA(364.7,"B",767,780)=""
^IBA(364.7,"B",768,781)=""
^IBA(364.7,"B",769,782)=""
^IBA(364.7,"B",770,783)=""
^IBA(364.7,"B",771,784)=""
^IBA(364.7,"B",772,785)=""
^IBA(364.7,"B",774,787)=""
^IBA(364.7,"B",775,788)=""
^IBA(364.7,"B",777,790)=""
^IBA(364.7,"B",778,792)=""
^IBA(364.7,"B",779,793)=""
^IBA(364.7,"B",780,794)=""
^IBA(364.7,"B",781,791)=""
^IBA(364.7,"B",782,795)=""
^IBA(364.7,"B",783,892)=""
^IBA(364.7,"B",784,796)=""
^IBA(364.7,"B",785,797)=""
^IBA(364.7,"B",788,799)=""
^IBA(364.7,"B",789,800)=""
^IBA(364.7,"B",790,801)=""
^IBA(364.7,"B",791,802)=""
^IBA(364.7,"B",793,806)=""
^IBA(364.7,"B",794,898)=""
^IBA(364.7,"B",795,938)=""
^IBA(364.7,"B",796,946)=""
^IBA(364.7,"B",804,900)=""
^IBA(364.7,"B",805,901)=""
^IBA(364.7,"B",806,902)=""
^IBA(364.7,"B",807,803)=""
^IBA(364.7,"B",808,804)=""
^IBA(364.7,"B",809,809)=""
^IBA(364.7,"B",810,829)=""
^IBA(364.7,"B",811,840)=""
^IBA(364.7,"B",812,842)=""
^IBA(364.7,"B",816,810)=""
^IBA(364.7,"B",817,814)=""
^IBA(364.7,"B",818,823)=""
^IBA(364.7,"B",819,846)=""
^IBA(364.7,"B",820,847)=""
^IBA(364.7,"B",821,848)=""
^IBA(364.7,"B",822,849)=""
^IBA(364.7,"B",823,850)=""
^IBA(364.7,"B",825,851)=""
^IBA(364.7,"B",826,852)=""
^IBA(364.7,"B",827,811)=""
^IBA(364.7,"B",828,815)=""
^IBA(364.7,"B",829,824)=""
^IBA(364.7,"B",830,853)=""
^IBA(364.7,"B",831,854)=""
^IBA(364.7,"B",832,855)=""
^IBA(364.7,"B",833,856)=""
^IBA(364.7,"B",834,857)=""
^IBA(364.7,"B",835,858)=""
^IBA(364.7,"B",836,859)=""
^IBA(364.7,"B",837,860)=""
^IBA(364.7,"B",838,861)=""
^IBA(364.7,"B",839,812)=""
^IBA(364.7,"B",840,816)=""
^IBA(364.7,"B",841,822)=""
^IBA(364.7,"B",842,862)=""
^IBA(364.7,"B",843,863)=""
^IBA(364.7,"B",844,864)=""
^IBA(364.7,"B",845,870)=""
^IBA(364.7,"B",846,871)=""
^IBA(364.7,"B",847,865)=""
^IBA(364.7,"B",848,826)=""
^IBA(364.7,"B",849,866)=""
^IBA(364.7,"B",850,867)=""
^IBA(364.7,"B",851,868)=""
^IBA(364.7,"B",852,890)=""
^IBA(364.7,"B",853,813)=""
^IBA(364.7,"B",854,817)=""
^IBA(364.7,"B",855,825)=""
^IBA(364.7,"B",856,827)=""
^IBA(364.7,"B",857,872)=""
^IBA(364.7,"B",858,874)=""
^IBA(364.7,"B",859,925)=""
^IBA(364.7,"B",860,926)=""
^IBA(364.7,"B",861,927)=""
^IBA(364.7,"B",862,889)=""
^IBA(364.7,"B",863,891)=""
^IBA(364.7,"B",864,805)=""
^IBA(364.7,"B",865,831)=""
^IBA(364.7,"B",866,830)=""
^IBA(364.7,"B",867,832)=""
^IBA(364.7,"B",868,957)=""
^IBA(364.7,"B",869,958)=""
^IBA(364.7,"B",870,959)=""
^IBA(364.7,"B",871,960)=""
^IBA(364.7,"B",872,961)=""
^IBA(364.7,"B",873,962)=""
^IBA(364.7,"B",874,963)=""
^IBA(364.7,"B",875,964)=""
^IBA(364.7,"B",876,965)=""
^IBA(364.7,"B",877,966)=""
^IBA(364.7,"B",878,833)=""
^IBA(364.7,"B",879,834)=""
^IBA(364.7,"B",880,835)=""
^IBA(364.7,"B",881,837)=""
^IBA(364.7,"B",882,839)=""
^IBA(364.7,"B",883,968)=""
^IBA(364.7,"B",884,984)=""
^IBA(364.7,"B",885,807)=""
^IBA(364.7,"B",886,808)=""
^IBA(364.7,"B",887,818)=""
^IBA(364.7,"B",888,819)=""
^IBA(364.7,"B",890,821)=""
^IBA(364.7,"B",892,828)=""
^IBA(364.7,"B",893,873)=""
^IBA(364.7,"B",894,884)=""
^IBA(364.7,"B",895,885)=""
^IBA(364.7,"B",896,887)=""
^IBA(364.7,"B",897,875)=""
^IBA(364.7,"B",898,876)=""
^IBA(364.7,"B",899,882)=""
^IBA(364.7,"B",900,886)=""
^IBA(364.7,"B",901,883)=""
^IBA(364.7,"B",902,877)=""
^IBA(364.7,"B",903,878)=""
^IBA(364.7,"B",904,879)=""
^IBA(364.7,"B",905,880)=""
^IBA(364.7,"B",906,881)=""
^IBA(364.7,"B",907,838)=""
^IBA(364.7,"B",908,970)=""
^IBA(364.7,"B",909,971)=""
^IBA(364.7,"B",910,972)=""
^IBA(364.7,"B",911,974)=""
^IBA(364.7,"B",912,969)=""
^IBA(364.7,"B",913,978)=""
^IBA(364.7,"B",914,975)=""
^IBA(364.7,"B",915,980)=""
^IBA(364.7,"B",916,982)=""
^IBA(364.7,"B",917,981)=""
^IBA(364.7,"B",918,976)=""
^IBA(364.7,"B",919,979)=""
^IBA(364.7,"B",920,977)=""
^IBA(364.7,"B",921,973)=""
^IBA(364.7,"B",923,888)=""
^IBA(364.7,"B",924,869)=""
^IBA(364.7,"B",935,922)=""
^IBA(364.7,"B",936,893)=""
^IBA(364.7,"B",937,918)=""
^IBA(364.7,"B",938,894)=""
^IBA(364.7,"B",939,920)=""
^IBA(364.7,"B",941,914)=""
^IBA(364.7,"B",942,915)=""
^IBA(364.7,"B",943,798)=""
^IBA(364.7,"B",944,921)=""
^IBA(364.7,"B",945,53)=""
^IBA(364.7,"B",946,916)=""
^IBA(364.7,"B",947,919)=""
^IBA(364.7,"B",948,896)=""
^IBA(364.7,"B",949,917)=""
^IBA(364.7,"B",950,897)=""
^IBA(364.7,"B",951,923)=""
^IBA(364.7,"B",952,924)=""
^IBA(364.7,"B",953,928)=""
^IBA(364.7,"B",954,929)=""
^IBA(364.7,"B",955,930)=""
^IBA(364.7,"B",956,931)=""
^IBA(364.7,"B",957,932)=""
^IBA(364.7,"B",958,933)=""
^IBA(364.7,"B",959,935)=""
^IBA(364.7,"B",960,934)=""
^IBA(364.7,"B",965,936)=""
^IBA(364.7,"B",967,937)=""
^IBA(364.7,"B",968,954)=""
^IBA(364.7,"B",970,947)=""
^IBA(364.7,"B",971,948)=""
^IBA(364.7,"B",972,949)=""
^IBA(364.7,"B",973,1034)=""
^IBA(364.7,"B",974,952)=""
^IBA(364.7,"B",975,953)=""
^IBA(364.7,"B",976,967)=""
^IBA(364.7,"B",977,939)=""
^IBA(364.7,"B",978,940)=""
^IBA(364.7,"B",979,941)=""
^IBA(364.7,"B",980,942)=""
^IBA(364.7,"B",981,943)=""
^IBA(364.7,"B",982,944)=""
^IBA(364.7,"B",983,985)=""
^IBA(364.7,"B",985,987)=""
^IBA(364.7,"B",986,988)=""
^IBA(364.7,"B",988,989)=""
^IBA(364.7,"B",990,1037)=""
^IBA(364.7,"B",991,993)=""
^IBA(364.7,"B",992,994)=""
^IBA(364.7,"B",993,992)=""
^IBA(364.7,"B",994,995)=""
^IBA(364.7,"B",995,998)=""
^IBA(364.7,"B",996,997)=""
^IBA(364.7,"B",999,1000)=""
^IBA(364.7,"B",1000,1001)=""
^IBA(364.7,"B",1001,1002)=""
^IBA(364.7,"B",1002,1003)=""
^IBA(364.7,"B",1004,1005)=""
^IBA(364.7,"B",1005,1006)=""
^IBA(364.7,"B",1006,1007)=""
^IBA(364.7,"B",1007,1008)=""
^IBA(364.7,"B",1008,1009)=""
^IBA(364.7,"B",1009,1010)=""
^IBA(364.7,"B",1010,1011)=""
^IBA(364.7,"B",1011,1012)=""
^IBA(364.7,"B",1012,1013)=""
^IBA(364.7,"B",1014,1015)=""
^IBA(364.7,"B",1015,12)=""
^IBA(364.7,"B",1016,13)=""
^IBA(364.7,"B",1029,88)=""
^IBA(364.7,"B",1030,89)=""
^IBA(364.7,"B",1031,110)=""
^IBA(364.7,"B",1032,144)=""
^IBA(364.7,"B",1033,186)=""
^IBA(364.7,"B",1034,192)=""
^IBA(364.7,"B",1035,193)=""
^IBA(364.7,"B",1036,196)=""
^IBA(364.7,"B",1037,197)=""
^IBA(364.7,"B",1038,198)=""
^IBA(364.7,"B",1039,203)=""
^IBA(364.7,"B",1041,205)=""
^IBA(364.7,"B",1042,206)=""
^IBA(364.7,"B",1043,207)=""
^IBA(364.7,"B",1044,208)=""
^IBA(364.7,"B",1045,209)=""
^IBA(364.7,"B",1046,211)=""
^IBA(364.7,"B",1047,212)=""
^IBA(364.7,"B",1048,213)=""
^IBA(364.7,"B",1051,225)=""
^IBA(364.7,"B",1056,228)=""
^IBA(364.7,"B",1057,229)=""
^IBA(364.7,"B",1058,230)=""
^IBA(364.7,"B",1059,232)=""
^IBA(364.7,"B",1060,244)=""
^IBA(364.7,"B",1061,245)=""
^IBA(364.7,"B",1062,246)=""
^IBA(364.7,"B",1063,247)=""
^IBA(364.7,"B",1065,256)=""
^IBA(364.7,"B",1072,326)=""
^IBA(364.7,"B",1073,333)=""
^IBA(364.7,"B",1074,334)=""
^IBA(364.7,"B",1075,358)=""
^IBA(364.7,"B",1076,359)=""
^IBA(364.7,"B",1077,360)=""
^IBA(364.7,"B",1081,363)=""
^IBA(364.7,"B",1082,364)=""
^IBA(364.7,"B",1083,365)=""
^IBA(364.7,"B",1084,1026)=""
^IBA(364.7,"B",1085,366)=""
^IBA(364.7,"B",1086,368)=""
^IBA(364.7,"B",1087,369)=""
^IBA(364.7,"B",1088,370)=""
^IBA(364.7,"B",1089,371)=""
^IBA(364.7,"B",1090,372)=""
^IBA(364.7,"B",1091,373)=""
^IBA(364.7,"B",1094,375)=""
^IBA(364.7,"B",1095,376)=""
^IBA(364.7,"B",1096,377)=""
^IBA(364.7,"B",1106,641)=""
^IBA(364.7,"B",1107,537)=""
^IBA(364.7,"B",1108,541)=""
^IBA(364.7,"B",1110,543)=""
^IBA(364.7,"B",1111,542)=""
^IBA(364.7,"B",1112,544)=""
^IBA(364.7,"B",1113,538)=""
^IBA(364.7,"B",1114,663)=""
^IBA(364.7,"B",1115,540)=""
^IBA(364.7,"B",1116,466)=""
^IBA(364.7,"B",1117,551)=""
^IBA(364.7,"B",1118,545)=""
^IBA(364.7,"B",1119,546)=""
^IBA(364.7,"B",1120,549)=""
^IBA(364.7,"B",1121,547)=""
^IBA(364.7,"B",1122,664)=""
^IBA(364.7,"B",1123,548)=""
^IBA(364.7,"B",1124,550)=""
^IBA(364.7,"B",1126,467)=""
^IBA(364.7,"B",1127,559)=""
^IBA(364.7,"B",1128,552)=""
^IBA(364.7,"B",1129,554)=""
^IBA(364.7,"B",1130,556)=""
^IBA(364.7,"B",1131,553)=""
^IBA(364.7,"B",1132,557)=""
^IBA(364.7,"B",1133,555)=""
^IBA(364.7,"B",1134,558)=""
^IBA(364.7,"B",1135,469)=""
^IBA(364.7,"B",1136,561)=""
^IBA(364.7,"B",1137,560)=""
^IBA(364.7,"B",1138,562)=""
^IBA(364.7,"B",1139,565)=""
^IBA(364.7,"B",1140,563)=""
^IBA(364.7,"B",1141,566)=""
^IBA(364.7,"B",1142,564)=""
^IBA(364.7,"B",1143,567)=""
^IBA(364.7,"B",1161,583)=""
^IBA(364.7,"B",1162,471)=""
^IBA(364.7,"B",1163,591)=""
^IBA(364.7,"B",1164,590)=""
^IBA(364.7,"B",1165,584)=""
^IBA(364.7,"B",1166,587)=""
^IBA(364.7,"B",1167,585)=""
^IBA(364.7,"B",1168,588)=""
^IBA(364.7,"B",1169,586)=""
^IBA(364.7,"B",1170,589)=""
^IBA(364.7,"B",1171,487)=""
^IBA(364.7,"B",1172,599)=""
^IBA(364.7,"B",1173,592)=""
^IBA(364.7,"B",1174,593)=""
^IBA(364.7,"B",1175,596)=""
^IBA(364.7,"B",1176,594)=""
^IBA(364.7,"B",1177,597)=""
^IBA(364.7,"B",1178,595)=""
^IBA(364.7,"B",1179,598)=""
^IBA(364.7,"B",1180,531)=""
^IBA(364.7,"B",1181,640)=""
^IBA(364.7,"B",1182,535)=""
^IBA(364.7,"B",1183,600)=""
^IBA(364.7,"B",1184,603)=""
^IBA(364.7,"B",1185,601)=""
^IBA(364.7,"B",1186,604)=""
^IBA(364.7,"B",1187,602)=""
^IBA(364.7,"B",1188,605)=""
^IBA(364.7,"B",1189,386)=""
^IBA(364.7,"B",1190,387)=""
^IBA(364.7,"B",1191,389)=""
^IBA(364.7,"B",1192,388)=""
^IBA(364.7,"B",1194,391)=""
^IBA(364.7,"B",1207,404)=""
^IBA(364.7,"B",1209,405)=""
^IBA(364.7,"B",1210,406)=""
^IBA(364.7,"B",1211,407)=""
^IBA(364.7,"B",1212,408)=""
^IBA(364.7,"B",1213,409)=""
^IBA(364.7,"B",1218,441)=""
^IBA(364.7,"B",1219,414)=""
^IBA(364.7,"B",1220,416)=""
^IBA(364.7,"B",1221,417)=""
^IBA(364.7,"B",1222,418)=""
^IBA(364.7,"B",1223,419)=""
^IBA(364.7,"B",1224,420)=""
^IBA(364.7,"B",1225,421)=""
^IBA(364.7,"B",1226,422)=""
^IBA(364.7,"B",1227,423)=""
^IBA(364.7,"B",1228,424)=""
^IBA(364.7,"B",1229,425)=""
^IBA(364.7,"B",1230,426)=""
^IBA(364.7,"B",1231,427)=""
^IBA(364.7,"B",1234,430)=""
^IBA(364.7,"B",1235,431)=""
^IBA(364.7,"B",1236,432)=""
^IBA(364.7,"B",1237,433)=""
^IBA(364.7,"B",1238,434)=""
^IBA(364.7,"B",1239,435)=""
^IBA(364.7,"B",1240,436)=""
^IBA(364.7,"B",1241,437)=""
^IBA(364.7,"B",1244,658)=""
^IBA(364.7,"B",1245,440)=""
^IBA(364.7,"B",1246,659)=""
^IBA(364.7,"B",1247,654)=""
^IBA(364.7,"B",1248,660)=""
^IBA(364.7,"B",1249,655)=""
^IBA(364.7,"B",1250,661)=""
^IBA(364.7,"B",1251,656)=""
^IBA(364.7,"B",1254,644)=""
^IBA(364.7,"B",1255,645)=""
^IBA(364.7,"B",1256,646)=""
^IBA(364.7,"B",1257,647)=""
^IBA(364.7,"B",1258,648)=""
^IBA(364.7,"B",1259,649)=""
^IBA(364.7,"B",1277,443)=""
^IBA(364.7,"B",1278,444)=""
^IBA(364.7,"B",1279,445)=""
^IBA(364.7,"B",1280,446)=""
^IBA(364.7,"B",1281,447)=""
^IBA(364.7,"B",1282,448)=""
^IBA(364.7,"B",1283,449)=""
^IBA(364.7,"B",1284,450)=""
^IBA(364.7,"B",1287,453)=""
^IBA(364.7,"B",1288,454)=""
^IBA(364.7,"B",1289,455)=""
^IBA(364.7,"B",1290,456)=""
^IBA(364.7,"B",1291,457)=""
^IBA(364.7,"B",1292,458)=""
^IBA(364.7,"B",1293,459)=""
^IBA(364.7,"B",1294,460)=""
^IBA(364.7,"B",1295,461)=""
^IBA(364.7,"B",1300,532)=""
^IBA(364.7,"B",1301,1018)=""
^IBA(364.7,"B",1303,1019)=""
^IBA(364.7,"B",1304,1025)=""
^IBA(364.7,"B",1305,1020)=""
^IBA(364.7,"B",1306,1021)=""
^IBA(364.7,"B",1309,1023)=""
^IBA(364.7,"B",1310,1024)=""
^IBA(364.7,"B",1311,1027)=""
^IBA(364.7,"B",1312,1028)=""
^IBA(364.7,"B",1313,1029)=""
^IBA(364.7,"B",1314,1030)=""
^IBA(364.7,"B",1315,1031)=""
^IBA(364.7,"B",1316,1032)=""
^IBA(364.7,"B",1317,1033)=""
^IBA(364.7,"B",1318,1035)=""
^IBA(364.7,"B",1319,1036)=""
^IBA(364.7,"B",1320,1038)=""
^IBA(364.7,"B",1321,1039)=""
^IBA(364.7,"B",1322,1040)=""
^IBA(364.7,"B",1400,1100)=""
^IBA(364.7,"B",1401,1101)=""
^IBA(364.7,"B",1402,1102)=""
^IBA(364.7,"B",1403,1103)=""
^IBA(364.7,"B",1404,1104)=""
^IBA(364.7,"B",1405,1105)=""
^IBA(364.7,"B",1406,1106)=""
^IBA(364.7,"B",1407,1107)=""
^IBA(364.7,"B",1408,1108)=""
^IBA(364.7,"B",1409,1109)=""
^IBA(364.7,"B",1410,1110)=""
^IBA(364.7,"B",1411,1111)=""
^IBA(364.7,"B",1412,1112)=""
^IBA(364.7,"B",1413,1113)=""
^IBA(364.7,"B",1414,1114)=""
^IBA(364.7,"B",1415,1115)=""
^IBA(364.7,"B",1416,1116)=""
^IBA(364.7,"B",1417,1117)=""
^IBA(364.7,"B",1418,1118)=""
^IBA(364.7,"B",1419,1119)=""
^IBA(364.7,"B",1420,1120)=""
^IBA(364.7,"B",1421,1121)=""
^IBA(364.7,"B",1422,1122)=""
^IBA(364.7,"B",1423,1123)=""
^IBA(364.7,"B",1424,1124)=""
^IBA(364.7,"B",1425,1125)=""
^IBA(364.7,"B",1426,1126)=""
^IBA(364.7,"B",1427,1127)=""
^IBA(364.7,"B",1428,1128)=""
^IBA(364.7,"B",1429,1129)=""
^IBA(364.7,"B",1430,1130)=""
^IBA(364.7,"B",1431,1131)=""
^IBA(364.7,"B",1432,1132)=""
^IBA(364.7,"B",1433,1133)=""
^IBA(364.7,"B",1434,1134)=""
^IBA(364.7,"B",1435,1135)=""
^IBA(364.7,"B",1436,1136)=""
^IBA(364.7,"B",1437,1137)=""
^IBA(364.7,"B",1438,1138)=""
^IBA(364.7,"B",1439,1139)=""
^IBA(364.7,"B",1440,1140)=""
^IBA(364.7,"B",1441,1141)=""
^IBA(364.7,"B",1442,1142)=""
^IBA(364.7,"B",1443,1143)=""
^IBA(364.7,"B",1444,1144)=""
^IBA(364.7,"B",1445,1145)=""
^IBA(364.7,"B",1446,1146)=""
^IBA(364.7,"B",1447,1147)=""
^IBA(364.7,"B",1448,1148)=""
^IBA(364.7,"B",1449,1149)=""
^IBA(364.7,"B",1450,1150)=""
^IBA(364.7,"B",1451,1151)=""
^IBA(364.7,"B",1452,1152)=""
^IBA(364.7,"B",1453,1153)=""
^IBA(364.7,"B",1454,1154)=""
^IBA(364.7,"B",1455,1155)=""
^IBA(364.7,"B",1456,1156)=""
^IBA(364.7,"B",1457,1157)=""
^IBA(364.7,"B",1458,1158)=""
^IBA(364.7,"B",1459,1159)=""
^IBA(364.7,"B",1460,1160)=""
^IBA(364.7,"B",1461,1161)=""
^IBA(364.7,"B",1462,1162)=""
^IBA(364.7,"B",1463,1163)=""
^IBA(364.7,"B",1464,1164)=""
^IBA(364.7,"B",1465,1165)=""
^IBA(364.7,"B",1466,1166)=""
^IBA(364.7,"B",1467,1167)=""
^IBA(364.7,"B",1468,1168)=""
^IBA(364.7,"B",1469,1169)=""
^IBA(364.7,"B",1470,1170)=""
^IBA(364.7,"B",1471,1171)=""
^IBA(364.7,"B",1472,1172)=""
^IBA(364.7,"B",1473,1173)=""
^IBA(364.7,"B",1474,1174)=""
^IBA(364.7,"B",1475,1175)=""
^IBA(364.7,"B",1476,1176)=""
^IBA(364.7,"B",1477,1177)=""
^IBA(364.7,"B",1478,1178)=""
^IBA(364.7,"B",1479,1179)=""
^IBA(364.7,"B",1480,1180)=""
^IBA(364.7,"B",1481,1181)=""
^IBA(364.7,"B",1482,1182)=""
^IBA(364.7,"B",1483,1183)=""
^IBA(364.7,"B",1484,1184)=""
^IBA(364.7,"B",1485,1185)=""
^IBA(364.7,"B",1486,1186)=""
^IBA(364.7,"B",1487,1187)=""
^IBA(364.7,"B",1488,1188)=""
^IBA(364.7,"B",1489,1189)=""
^IBA(364.7,"B",1490,1190)=""
^IBA(364.7,"B",1491,1191)=""
^IBA(364.7,"B",1492,1192)=""
^IBA(364.7,"B",1493,1193)=""
^IBA(364.7,"B",1494,1194)=""
^IBA(364.7,"B",1495,1195)=""
^IBA(364.7,"B",1496,1196)=""
^IBA(364.7,"B",1497,1197)=""
^IBA(364.7,"B",1498,1198)=""
^IBA(364.7,"B",1499,1199)=""
^IBA(364.7,"B",1500,1200)=""
^IBA(364.7,"B",1501,1201)=""
^IBA(364.7,"B",1502,1202)=""
^IBA(364.7,"B",1503,1203)=""
^IBA(364.7,"B",1504,1204)=""
^IBA(364.7,"B",1505,1205)=""
^IBA(364.7,"B",1506,1206)=""
^IBA(364.7,"B",1507,1207)=""
^IBA(364.7,"B",1508,1208)=""
^IBA(364.7,"B",1509,1209)=""
^IBA(364.7,"B",1513,1213)=""
^IBA(364.7,"B",1514,1214)=""
^IBA(364.7,"B",1515,1215)=""
^IBA(364.7,"B",1516,1216)=""
^IBA(364.7,"B",1517,1217)=""
^IBA(364.7,"B",1518,1218)=""
^IBA(364.7,"B",1519,1219)=""
^IBA(364.7,"B",1520,1220)=""
^IBA(364.7,"B",1550,1250)=""
^IBA(364.7,"B",1551,1251)=""
^IBA(364.7,"B",1552,1252)=""
^IBA(364.7,"B",1553,1253)=""
^IBA(364.7,"B",1554,1254)=""
^IBA(364.7,"B",1555,1255)=""
^IBA(364.7,"B",1556,1256)=""
^IBA(364.7,"B",1557,1257)=""
^IBA(364.7,"B",1558,1258)=""
^IBA(364.7,"B",1559,1259)=""
^IBA(364.7,"B",1560,1260)=""
^IBA(364.7,"B",1561,1261)=""
^IBA(364.7,"B",1562,1262)=""
^IBA(364.7,"B",1563,1263)=""
^IBA(364.7,"B",1564,1264)=""
^IBA(364.7,"B",1565,1265)=""
^IBA(364.7,"B",1566,1266)=""
^IBA(364.7,"B",1567,1267)=""
^IBA(364.7,"B",1568,1268)=""
^IBA(364.7,"B",1569,1269)=""
^IBA(364.7,"B",1570,1270)=""
^IBA(364.7,"B",1571,1271)=""
^IBA(364.7,"B",1572,1272)=""
^IBA(364.7,"B",1573,1273)=""
^IBA(364.7,"B",1574,1274)=""
^IBA(364.7,"B",1575,1275)=""
^IBA(364.7,"B",1576,1276)=""
^IBA(364.7,"B",1577,1277)=""
^IBA(364.7,"B",1578,1278)=""
^IBA(364.7,"B",1579,1279)=""
^IBA(364.7,"B",1580,1280)=""
^IBA(364.7,"B",1581,1281)=""
^IBA(364.7,"B",1582,1282)=""
^IBA(364.7,"B",1583,1283)=""
^IBA(364.7,"B",1584,1284)=""
^IBA(364.7,"B",1585,1285)=""
^IBA(364.7,"B",1586,1286)=""
^IBA(364.7,"B",1587,1287)=""
^IBA(364.7,"B",1588,1288)=""
^IBA(364.7,"B",1589,1289)=""
^IBA(364.7,"B",1590,1290)=""
^IBA(364.7,"B",1591,1291)=""
^IBA(364.7,"B",1592,1292)=""
^IBA(364.7,"B",1593,1293)=""
^IBA(364.7,"B",1594,1294)=""
^IBA(364.7,"B",1595,1295)=""
^IBA(364.7,"B",1596,1296)=""
^IBA(364.7,"B",1597,1297)=""
^IBA(364.7,"B",1598,1298)=""
^IBA(364.7,"B",1599,1299)=""
^IBA(364.7,"B",1600,1300)=""
^IBA(364.7,"B",1601,1301)=""
^IBA(364.7,"B",1602,1302)=""
^IBA(364.7,"B",1603,1303)=""
^IBA(364.7,"B",1604,1304)=""
^IBA(364.7,"B",1605,1305)=""
^IBA(364.7,"B",1606,1306)=""
^IBA(364.7,"B",1607,1307)=""
^IBA(364.7,"B",1608,1308)=""
^IBA(364.7,"B",1609,1309)=""
^IBA(364.7,"B",1610,1310)=""
^IBA(364.7,"B",1611,1311)=""
^IBA(364.7,"B",1612,1312)=""
^IBA(364.7,"B",1613,1313)=""
^IBA(364.7,"B",1614,1314)=""
^IBA(364.7,"B",1615,1315)=""
^IBA(364.7,"B",1616,1316)=""
^IBA(364.7,"B",1617,1317)=""
^IBA(364.7,"B",1618,1318)=""
^IBA(364.7,"B",1619,1319)=""
^IBA(364.7,"B",1620,1320)=""
^IBA(364.7,"B",1621,1321)=""
^IBA(364.7,"B",1622,1322)=""
^IBA(364.7,"B",1623,1323)=""
^IBA(364.7,"B",1624,1324)=""
^IBA(364.7,"B",1625,1325)=""
^IBA(364.7,"B",1626,1326)=""
^IBA(364.7,"B",1627,1327)=""
^IBA(364.7,"B",1628,1328)=""
^IBA(364.7,"B",1629,1329)=""
^IBA(364.7,"B",1630,1330)=""
^IBA(364.7,"B",1631,1331)=""
^IBA(364.7,"B",1632,1332)=""
^IBA(364.7,"B",1633,1333)=""
^IBA(364.7,"B",1634,1334)=""
^IBA(364.7,"B",1635,1335)=""
^IBA(364.7,"B",1636,1336)=""
^IBA(364.7,"B",1637,1337)=""
^IBA(364.7,"B",1638,1338)=""
^IBA(364.7,"B",1639,1339)=""
^IBA(364.7,"B",1640,1340)=""
^IBA(364.7,"B",1641,1341)=""
^IBA(364.7,"B",1642,1342)=""
^IBA(364.7,"B",1643,1343)=""
^IBA(364.7,"B",1644,1344)=""
^IBA(364.7,"B",1645,1345)=""
^IBA(364.7,"B",1646,1346)=""
^IBA(364.7,"B",1647,1347)=""
^IBA(364.7,"B",1648,1348)=""
^IBA(364.7,"B",1649,1349)=""
^IBA(364.7,"B",1650,1350)=""
^IBA(364.7,"B",1651,1351)=""
^IBA(364.7,"B",1652,1352)=""
^IBA(364.7,"B",1653,1353)=""
^IBA(364.7,"B",1654,1354)=""
^IBA(364.7,"B",1655,1355)=""
^IBA(364.7,"B",1656,1356)=""
^IBA(364.7,"B",1657,1357)=""
^IBA(364.7,"B",1658,1358)=""
^IBA(364.7,"B",1659,1359)=""
^IBA(364.7,"B",1660,1360)=""
^IBA(364.7,"B",1661,1361)=""
^IBA(364.7,"B",1662,1362)=""
^IBA(364.7,"B",1663,1363)=""
^IBA(364.7,"B",1664,1364)=""
^IBA(364.7,"B",1665,1365)=""
^IBA(364.7,"B",1666,1366)=""
^IBA(364.7,"B",1667,1367)=""
^IBA(364.7,"B",1668,1368)=""
^IBA(364.7,"B",1669,1369)=""
^IBA(364.7,"B",1670,1370)=""
^IBA(364.7,"B",1671,1371)=""
^IBA(364.7,"B",1672,1372)=""
^IBA(364.7,"B",1673,1373)=""
^IBA(364.7,"B",1674,1374)=""
^IBA(364.7,"B",1675,1375)=""
^IBA(364.7,"B",1676,1376)=""
^IBA(364.7,"B",1677,1377)=""
^IBA(364.7,"B",1678,1378)=""
^IBA(364.7,"B",1679,1379)=""
^IBA(364.7,"B",1680,1380)=""
^IBA(364.7,"B",1681,1381)=""
^IBA(364.7,"B",1682,1382)=""
^IBA(364.7,"B",1683,1383)=""
^IBA(364.7,"B",1684,1384)=""
^IBA(364.7,"B",1685,1385)=""
^IBA(364.7,"B",1686,1386)=""
^IBA(364.7,"B",1687,1387)=""
^IBA(364.7,"B",1688,1388)=""
^IBA(364.7,"B",1689,1389)=""
^IBA(364.7,"B",1690,1390)=""
^IBA(364.7,"B",1691,1391)=""
^IBA(364.7,"B",1692,1392)=""
^IBA(364.7,"B",1693,1393)=""
^IBA(364.7,"B",1694,1394)=""
^IBA(364.7,"B",1695,1395)=""
^IBA(364.7,"B",1696,1396)=""
^IBA(364.7,"B",1697,1397)=""
^IBA(364.7,"B",1698,1398)=""
^IBA(364.7,"B",1699,1399)=""
^IBA(364.7,"B",1700,1400)=""
^IBA(364.7,"B",1701,1401)=""
^IBA(364.7,"B",1702,1402)=""
^IBA(364.7,"B",1703,1403)=""
^IBA(364.7,"B",1704,1404)=""
^IBA(364.7,"B",1705,1405)=""
^IBA(364.7,"B",1706,1406)=""
^IBA(364.7,"B",1707,1407)=""
^IBA(364.7,"B",1708,1408)=""
^IBA(364.7,"B",1709,1409)=""
^IBA(364.7,"B",1710,1410)=""
^IBA(364.7,"B",1711,1411)=""
^IBA(364.7,"B",1712,1412)=""
^IBA(364.7,"B",1713,1413)=""
^IBA(364.7,"B",1714,1414)=""
^IBA(364.7,"B",1715,1415)=""
^IBA(364.7,"B",1716,1416)=""
^IBA(364.7,"B",1717,1417)=""
^IBA(364.7,"B",1718,1418)=""
^IBA(364.7,"B",1719,1419)=""
^IBA(364.7,"B",1720,1420)=""
^IBA(364.7,"B",1721,1421)=""
^IBA(364.7,"B",1722,1422)=""
^IBA(364.7,"B",1723,1423)=""
^IBA(364.7,"B",1724,1424)=""
^IBA(364.7,"B",1727,1427)=""
^IBA(364.7,"B",1728,1428)=""
^IBA(364.7,"B",1729,1429)=""
^IBA(364.7,"B",1730,1430)=""
^IBA(364.7,"B",1731,1431)=""
^IBA(364.7,"B",1732,1432)=""
^IBA(364.7,"B",1733,1433)=""
^IBA(364.7,"B",1734,1434)=""
^IBA(364.7,"B",1735,1435)=""
^IBA(364.7,"B",1736,1436)=""
^IBA(364.7,"B",1737,1437)=""
^IBA(364.7,"B",1738,1438)=""
^IBA(364.7,"B",1739,1439)=""
^IBA(364.7,"B",1740,1440)=""
^IBA(364.7,"B",1741,1441)=""
^IBA(364.7,"B",1742,1442)=""
^IBA(364.7,"B",1743,1443)=""
^IBA(364.7,"B",1744,1444)=""
^IBA(364.7,"B",1745,1445)=""
^IBA(364.7,"B",1746,1446)=""
^IBA(364.7,"B",1747,1447)=""
^IBA(364.7,"B",1748,1448)=""
^IBA(364.7,"B",1749,1449)=""
^IBA(364.7,"B",1750,1450)=""
^IBA(364.7,"B",1751,1451)=""
^IBA(364.7,"B",1752,1452)=""
^IBA(364.7,"B",1753,1453)=""
^IBA(364.7,"B",1754,1454)=""
^IBA(364.7,"B",1755,1455)=""
^IBA(364.7,"B",1756,1456)=""
^IBA(364.7,"B",1757,1457)=""
^IBA(364.7,"B",1758,1458)=""
^IBA(364.7,"B",1759,1459)=""
^IBA(364.7,"B",1800,1500)=""
^IBA(364.7,"B",1801,1501)=""
^IBA(364.7,"B",1802,1502)=""
^IBA(364.7,"B",1803,1503)=""
^IBA(364.7,"B",1804,1504)=""
^IBA(364.7,"B",1818,1518)=""
^IBA(364.7,"B",1819,1519)=""
^IBA(364.7,"B",1820,1520)=""
^IBA(364.7,"B",1821,1521)=""
^IBA(364.7,"B",1822,1522)=""
^IBA(364.7,"B",1823,1523)=""
^IBA(364.7,"B",1824,1524)=""
^IBA(364.7,"B",1825,1525)=""
^IBA(364.7,"B",1826,1526)=""
^IBA(364.7,"B",1827,1527)=""
^IBA(364.7,"B",1829,1529)=""
^IBA(364.7,"B",1830,1530)=""
^IBA(364.7,"B",1831,1531)=""
^IBA(364.7,"B",1832,1532)=""
^IBA(364.7,"B",1833,1533)=""
^IBA(364.7,"B",1834,1534)=""
^IBA(364.7,"B",1835,1535)=""
^IBA(364.7,"B",1836,1536)=""
^IBA(364.7,"B",1837,1537)=""
^IBA(364.7,"B",1838,1538)=""
^IBA(364.7,"B",1839,1539)=""
^IBA(364.7,"B",1840,1540)=""
^IBA(364.7,"B",1841,1541)=""
^IBA(364.7,"B",1842,1542)=""
^IBA(364.7,"B",1843,1543)=""
^IBA(364.7,"B",1844,1544)=""
^IBA(364.7,"B",1845,1545)=""
^IBA(364.7,"B",1846,1546)=""
^IBA(364.7,"B",1847,1547)=""
^IBA(364.7,"B",1851,1551)=""
^IBA(364.7,"B",1861,1561)=""
^IBA(364.7,"B",1862,1562)=""
^IBA(364.7,"B",1863,1563)=""
^IBA(364.7,"B",1864,1564)=""
^IBA(364.7,"B",1865,1565)=""
^IBA(364.7,"B",1866,1566)=""
^IBA(364.7,"B",1867,1567)=""
^IBA(364.7,"B",1868,1568)=""
^IBA(364.7,"B",1869,1569)=""
^IBA(364.7,"B",1870,1570)=""
^IBA(364.7,"B",1871,1571)=""
^IBA(364.7,"B",1872,1572)=""
^IBA(364.7,"B",1873,1573)=""
^IBA(364.7,"B",1874,1574)=""
^IBA(364.7,"B",1875,1575)=""
^IBA(364.7,"B",1876,1576)=""
^IBA(364.7,"B",1877,1577)=""
^IBA(364.7,"B",1878,1578)=""
^IBA(364.7,"B",1879,1579)=""
^IBA(364.7,"B",1910,1610)=""
^IBA(364.7,"B",1911,1611)=""
^IBA(364.7,"B",1912,1612)=""
^IBA(364.7,"B",1913,1613)=""
^IBA(364.7,"B",1915,1615)=""
^IBA(364.7,"B",1916,1616)=""
^IBA(364.7,"B",1917,1617)=""
^IBA(364.7,"B",1918,1618)=""
^IBA(364.7,"B",1919,1619)=""
^IBA(364.7,"B",1920,1620)=""
^IBA(364.7,"B",1921,1621)=""
^IBA(364.7,"B",1922,1622)=""
^IBA(364.7,"B",1923,1623)=""
^IBA(364.7,"B",1924,1624)=""
^IBA(364.7,"B",1925,1625)=""
^IBA(364.7,"B",1926,1626)=""
^IBA(364.7,"B",1927,1627)=""
^IBA(364.7,"B",1928,1628)=""
^IBA(364.7,"B",1929,1629)=""
^IBA(364.7,"B",1930,1630)=""
^IBA(364.7,"B",1931,1631)=""
^IBA(364.7,"B",1932,1632)=""
^IBA(364.7,"B",1933,1633)=""
^IBA(364.7,"B",1934,1634)=""
^IBA(364.7,"B",1935,1635)=""
^IBA(364.7,"B",1936,1636)=""
^IBA(364.7,"B",1937,1637)=""
^IBA(364.7,"B",1938,1638)=""
^IBA(364.7,"B",1939,1639)=""
^IBA(364.7,"B",1940,1640)=""
^IBA(364.7,"B",1941,1641)=""
^IBA(364.7,"B",1942,1642)=""
^IBA(364.7,"B",1943,1643)=""
^IBA(364.7,"B",1944,1644)=""
^IBA(364.7,"B",1945,1645)=""
^IBA(364.7,"B",1946,1646)=""
^IBA(364.7,"B",1947,1647)=""
^IBA(364.7,"B",1948,1648)=""
^IBA(364.7,"B",1949,1649)=""
^IBA(364.7,"B",1950,1650)=""
^IBA(364.7,"B",1951,1651)=""
^IBA(364.7,"B",1952,1652)=""
^IBA(364.7,"B",1953,1653)=""
^IBA(364.7,"B",1954,1654)=""
^IBA(364.7,"B",1955,1655)=""
^IBA(364.7,"B",1956,1656)=""
^IBA(364.7,"B",1957,1657)=""
^IBA(364.7,"B",1958,1658)=""
^IBA(364.7,"B",1959,1659)=""
^IBA(364.7,"B",1960,1660)=""
^IBA(364.7,"B",1961,1661)=""
^IBA(364.7,"B",1962,1662)=""
^IBA(364.7,"B",1963,1663)=""
^IBA(364.7,"B",1964,1664)=""
^IBA(364.7,"B",1965,1665)=""
^IBA(364.7,"B",1966,1666)=""
^IBA(364.7,"B",1967,1667)=""
^IBA(364.7,"B",1968,1668)=""
^IBA(364.7,"B",1969,1669)=""
^IBA(364.7,"B",1970,1670)=""
^IBA(364.7,"B",1971,1671)=""
^IBA(364.7,"B",1972,1672)=""
^IBA(364.7,"B",1973,1673)=""
^IBA(364.7,"B",1974,1674)=""
^IBA(364.7,"B",1975,1675)=""
^IBA(364.7,"B",1976,1676)=""
^IBA(364.7,"B",1977,1677)=""
^IBA(364.7,"B",1978,1678)=""
^IBA(364.7,"B",1979,1679)=""
^IBA(364.7,"B",1980,1680)=""
^IBA(364.7,"B",1981,1681)=""
^IBA(364.7,"B",1982,1682)=""
^IBA(364.7,"B",1983,1683)=""
^IBA(364.7,"B",1984,1684)=""
^IBA(364.7,"B",1985,1685)=""
^IBA(364.7,"B",1986,1686)=""
^IBA(364.7,"B",1988,1687)=""
^IBA(364.7,"B",1991,1690)=""
^IBA(364.7,"B",1992,1691)=""
^IBA(364.7,"B",1993,1692)=""
^IBA(364.7,"B",1994,1693)=""
^IBA(364.7,"B",1995,1694)=""
^IBA(364.7,"B",1996,1695)=""
^IBA(364.7,"B",1997,1696)=""
^IBA(364.7,"B",1998,1697)=""
^IBA(364.7,"B",1999,1698)=""
^IBA(364.7,"B",2000,1699)=""
^IBA(364.7,"B",2001,1700)=""
^IBA(364.7,"B",2002,1701)=""
^IBA(364.7,"B",2003,1702)=""
^IBA(364.7,"B",2004,1703)=""
^IBA(364.7,"B",2005,1704)=""
^IBA(364.7,"B",2006,1705)=""
^IBA(364.7,"B",2007,1706)=""
^IBA(364.7,"B",2008,1707)=""
^IBA(364.7,"B",2009,1708)=""
^IBA(364.7,"B",2010,1709)=""
^IBA(364.7,"B",2011,1710)=""
^IBA(364.7,"B",2012,1711)=""
^IBA(364.7,"B",2013,1712)=""
^IBA(364.7,"B",2014,1713)=""
^IBA(364.7,"B",2015,1714)=""
^IBA(364.7,"B",2016,1715)=""
^IBA(364.7,"B",2017,1716)=""
^IBA(364.7,"B",2018,1717)=""
^IBA(364.7,"B",2019,1718)=""
^IBA(364.7,"B",2020,1719)=""
^IBA(364.7,"B",2021,1720)=""
^IBA(364.7,"B",2022,1721)=""
^IBA(364.7,"B",2023,1722)=""
^IBA(364.7,"B",2024,1723)=""
^IBA(364.7,"B",2025,1724)=""
^IBA(364.7,"B",2026,1725)=""
^IBA(364.7,"B",2027,1726)=""
^IBA(364.7,"B",2028,1727)=""
^IBA(364.7,"B",2050,1750)=""
^IBA(364.7,"B",2051,1751)=""
^IBA(364.7,"B",2052,1752)=""
^IBA(364.7,"B",2053,1753)=""
^IBA(364.7,"B",2054,1754)=""
^IBA(364.7,"B",2055,1755)=""
^IBA(364.7,"B",2056,1756)=""
^IBA(364.7,"B",2057,1757)=""
^IBA(364.7,"B",2058,1758)=""
^IBA(364.7,"B",2059,1759)=""
^IBA(364.7,"B",2060,1760)=""
^IBA(364.7,"B",2061,1761)=""
^IBA(364.7,"B",2062,1762)=""
^IBA(364.7,"B",2063,1763)=""
^IBA(364.7,"B",2064,1764)=""
^IBA(364.7,"B",2065,1765)=""
^IBA(364.7,"B",2066,1766)=""
^IBA(364.7,"B",2067,1767)=""
^IBA(364.7,"B",2068,1768)=""
^IBA(364.7,"B",2069,1769)=""
^IBA(364.7,"B",2070,1770)=""
^IBA(364.7,"B",2071,1771)=""
^IBA(364.7,"B",2072,1772)=""
^IBA(364.7,"B",2073,1773)=""
^IBA(364.7,"B",2074,1774)=""
^IBA(364.7,"B",2075,1775)=""
^IBA(364.7,"B",2076,1776)=""
^IBA(364.7,"B",2077,1777)=""
^IBA(364.7,"B",2078,1778)=""
^IBA(364.7,"B",2079,1779)=""
^IBA(364.7,"B",2080,1780)=""
^IBA(364.7,"B",2081,1781)=""
^IBA(364.7,"B",2084,1784)=""
^IBA(364.7,"B",2085,1785)=""
^IBA(364.7,"B",2086,1786)=""
^IBA(364.7,"B",2087,1787)=""
^IBA(364.7,"B",2088,1788)=""
^IBA(364.7,"B",2089,1789)=""
^IBA(364.7,"B",2090,1790)=""
^IBA(364.7,"B",2091,1791)=""
^IBA(364.7,"B",2092,1792)=""
^IBA(364.7,"B",2093,1793)=""
^IBA(364.7,"B",2094,1794)=""
^IBA(364.7,"B",2095,1795)=""
^IBA(364.7,"B",2096,1796)=""
^IBA(364.7,"B",2097,1797)=""
^IBA(364.7,"B",2098,1798)=""
^IBA(364.7,"B",2099,1799)=""
^IBA(364.7,"B",2100,1800)=""
^IBA(364.7,"B",2103,1803)=""
^IBA(364.7,"B",2104,1804)=""
^IBA(364.7,"B",2105,1805)=""
^IBA(364.7,"B",2106,1806)=""
^IBA(364.7,"B",2107,1807)=""
^IBA(364.7,"B",2108,1808)=""
^IBA(364.7,"B",2109,1809)=""
^IBA(364.7,"B",2110,1810)=""
^IBA(364.7,"B",2111,1811)=""
^IBA(364.7,"B",2112,1812)=""
^IBA(364.7,"B",2113,1813)=""
^IBA(364.7,"B",2114,1814)=""
^IBA(364.7,"B",2115,1815)=""
^IBA(364.7,"B",2116,1816)=""
^IBA(364.7,"B",2117,1817)=""
^IBA(364.7,"B",2118,1818)=""
^IBA(364.7,"B",2119,1819)=""
^IBA(364.7,"B",2122,1822)=""
^IBA(364.7,"B",2123,1823)=""
^IBA(364.7,"B",2124,1824)=""
^IBA(364.7,"B",2125,1825)=""
^IBA(364.7,"B",2126,1826)=""
^IBA(364.7,"B",2127,1827)=""
^IBA(364.7,"B",2128,1828)=""
^IBA(364.7,"B",2129,1829)=""
^IBA(364.7,"B",2130,1830)=""
^IBA(364.7,"B",2131,1831)=""
^IBA(364.7,"B",2132,1832)=""
^IBA(364.7,"B",2133,1833)=""
^IBA(364.7,"B",2134,1834)=""
^IBA(364.7,"B",2135,1835)=""
^IBA(364.7,"B",2136,1836)=""
^IBA(364.7,"B",2137,1837)=""
^IBA(364.7,"B",2138,1838)=""
^IBA(364.7,"B",2139,1839)=""
^IBA(364.7,"B",2140,1840)=""
^IBA(364.7,"B",2141,1841)=""
^IBA(364.7,"B",2142,1842)=""
^IBA(364.7,"B",2143,1843)=""
^IBA(364.7,"B",2144,1844)=""
^IBA(364.7,"B",2145,1845)=""
^IBA(364.7,"B",2146,1846)=""
^IBA(364.7,"B",2147,1847)=""
^IBA(364.7,"B",2148,1848)=""
^IBA(364.7,"B",2149,1849)=""
^IBA(364.7,"B",2152,1852)=""
^IBA(364.7,"B",2153,1853)=""
^IBA(364.7,"B",2154,1854)=""
^IBA(364.7,"B",2155,1855)=""
^IBA(364.7,"B",2156,1856)=""
^IBA(364.7,"B",2157,1857)=""
^IBA(364.7,"B",2158,1858)=""
^IBA(364.7,"B",2159,1859)=""
^IBA(364.7,"B",2160,1860)=""
^IBA(364.7,"B",2161,1861)=""
^IBA(364.7,"B",2162,1862)=""
^IBA(364.7,"B",2163,1863)=""
^IBA(364.7,"B",2164,1864)=""
^IBA(364.7,"B",2165,1865)=""
^IBA(364.7,"B",2166,1866)=""
^IBA(364.7,"B",2167,1867)=""
^IBA(364.7,"B",2168,1868)=""
^IBA(364.7,"B",2169,1869)=""
^IBA(364.7,"B",2170,1870)=""
^IBA(364.7,"B",2171,1871)=""
^IBA(364.7,"B",2172,1872)=""
^IBA(364.7,"B",2173,1873)=""
^IBA(364.7,"B",2174,1874)=""
^IBA(364.7,"B",2175,1875)=""
^IBA(364.7,"B",2176,1876)=""
^IBA(364.7,"B",2177,1877)=""
^IBA(364.7,"B",2178,1878)=""
^IBA(364.7,"B",2179,1879)=""
^IBA(364.7,"B",2180,1880)=""
^IBA(364.7,"B",2181,1881)=""
^IBA(364.7,"B",2182,1882)=""
^IBA(364.7,"B",2183,1883)=""
^IBA(364.7,"B",2184,1884)=""
^IBA(364.7,"B",2185,1885)=""
^IBA(364.7,"B",2186,1886)=""
^IBA(364.7,"B",2187,1887)=""
^IBA(364.7,"B",2188,1888)=""
^IBA(364.7,"B",2189,1889)=""
^IBA(364.7,"B",2190,1890)=""
^IBA(364.7,"B",2191,1891)=""
^IBA(364.7,"B",2192,1892)=""
^IBA(364.7,"B",2193,1893)=""
^IBA(364.7,"B",2194,1894)=""
^IBA(364.7,"B",2195,1895)=""
^IBA(364.7,"B",2196,1896)=""
^IBA(364.7,"B",2197,1897)=""
^IBA(364.7,"B",2198,1898)=""
^IBA(364.7,"B",2199,1899)=""
^IBA(364.7,"B",2200,1900)=""
^IBA(364.7,"B",2201,1901)=""
^IBA(364.7,"B",2202,1902)=""
^IBA(364.7,"B",2203,1903)=""
^IBA(364.7,"B",2204,1904)=""
^IBA(364.7,"B",2205,1905)=""
^IBA(364.7,"B",2206,1906)=""
^IBA(364.7,"B",2207,1907)=""
^IBA(364.7,"B",2209,1909)=""
^IBA(364.7,"B",2210,1910)=""
^IBA(364.7,"B",2211,1911)=""
^IBA(364.7,"B",2212,1912)=""
^IBA(364.7,"B",2213,1913)=""
^IBA(364.7,"B",2214,1914)=""
^IBA(364.7,"B",2215,1915)=""
^IBA(364.7,"B",2216,1916)=""
^IBA(364.7,"B",2217,1917)=""
^IBA(364.7,"B",2218,1918)=""
^IBA(364.7,"B",2219,1919)=""
^IBA(364.7,"B",2220,1920)=""
^IBA(364.7,"B",2221,1921)=""
^IBA(364.7,"B",2222,1922)=""
^IBA(364.7,"B",2223,1923)=""
^IBA(364.7,"B",2227,1927)=""
^IBA(364.7,"B",2228,1928)=""
^IBA(364.7,"B",2229,1929)=""
^IBA(364.7,"B",2230,1944)=""
^IBA(364.7,"B",2231,1946)=""
^IBA(364.7,"B",2234,1930)=""
^IBA(364.7,"B",2235,1948)=""
^IBA(364.7,"B",2236,1949)=""
^IBA(364.7,"B",2237,1950)=""
^IBA(364.7,"B",2238,1943)=""
^IBA(364.7,"B",2239,1933)=""
^IBA(364.7,"B",2240,1931)=""
^IBA(364.7,"B",2241,1932)=""
^IBA(364.7,"B",2242,1942)=""
^IBA(364.7,"B",2243,1934)=""
^IBA(364.7,"B",2244,1935)=""
^IBA(364.7,"B",2245,1936)=""
^IBA(364.7,"B",2246,1937)=""
^IBA(364.7,"B",2247,1938)=""
^IBA(364.7,"B",2248,1939)=""
^IBA(364.7,"B",2249,1940)=""
^IBA(364.7,"B",2250,1941)=""
^IBA(364.7,"B",2251,1945)=""
^IBA(364.7,"B",2252,1947)=""
^IBA(364.7,"B",2253,1951)=""
^IBA(364.7,"B",2254,1952)=""
^IBA(364.7,"B",2255,1953)=""
^IBA(364.7,"B",2256,1954)=""
^IBA(364.7,"B",2257,1955)=""
^IBA(364.7,"B",2258,1425)=""
^IBA(364.7,"B",2259,1426)=""
^IBA(364.7,"B",2260,1460)=""
^IBA(364.7,"B",2261,1461)=""
^IBA(364.7,"B",2262,1462)=""
^IBA(364.7,"B",2263,1463)=""
^IBA(364.7,"B",2264,1464)=""
^IBA(364.7,"B",2266,1465)=""
^IBA(364.7,"B",2267,1466)=""
^IBA(364.7,"B",2268,1467)=""
^IBA(364.7,"B",2269,1468)=""
^IBA(364.7,"B",2270,1469)=""
^IBA(364.7,"B",2271,1470)=""
^IBA(364.7,"B",2272,1471)=""
^IBA(364.7,"B",2273,1473)=""
^IBA(364.7,"B",2274,1474)=""
^IBA(364.7,"B",2275,1475)=""
^IBA(364.7,"B",2276,1476)=""
^IBA(364.7,"B",2277,1477)=""
^IBA(364.7,"B",2278,1478)=""
^IBA(364.7,"B",2279,1479)=""
^IBA(364.7,"B",2280,1480)=""
^IBA(364.7,"B",2281,1481)=""
^IBA(364.7,"B",2282,1482)=""
^IBA(364.7,"B",2283,1472)=""
^IBA(364.7,"B",2284,1483)=""
^IBA(364.7,"B",2285,1484)=""
^IBA(364.7,"B",2286,1486)=""
^IBA(364.7,"B",2287,1487)=""
^IBA(364.7,"B",2288,1485)=""
^IBA(364.7,"B",2289,1488)=""
^IBA(364.7,"B",2290,1489)=""
^IBA(364.7,"B",2291,1490)=""
^IBA(364.7,"B",2292,1491)=""
^IBA(364.7,"B",2293,1492)=""
^IBA(364.7,"B",2294,1493)=""
^IBA(364.7,"B",2295,1494)=""
^IBA(364.7,"B",2296,1495)=""
^IBA(364.7,"B",2297,1496)=""
^IBA(364.7,"B",2298,1497)=""
^IBA(364.7,"B",2299,1498)=""
^IBA(364.7,"B",2300,1499)=""
^IBA(364.7,"B",2301,1505)=""
^IBA(364.7,"B",2302,1506)=""
^IBA(364.7,"B",2303,1507)=""
^IBA(364.7,"B",2304,1508)=""
^IBA(364.7,"B",2305,1509)=""
^IBA(364.7,"B",2306,1510)=""
^IBA(364.7,"B",2307,1511)=""
^IBA(364.7,"B",2308,1512)=""
^IBA(364.7,"B",2309,1513)=""
^IBA(364.7,"B",2310,1514)=""
^IBA(364.7,"B",2311,1515)=""
^IBA(364.7,"B",2312,1516)=""
^IBA(364.7,"B",2313,1517)=""
^IBA(364.7,"B",2314,1528)=""
^IBA(364.7,"B",2315,1548)=""
^IBA(364.7,"B",2316,1549)=""
^IBA(364.7,"B",2317,1552)=""
^IBA(364.7,"B",2318,1553)=""
^IBA(364.7,"B",2319,1554)=""
^IBA(364.7,"B",2320,1555)=""
^IBA(364.7,"B",2321,1556)=""
^IBA(364.7,"B",2322,1557)=""
^IBA(364.7,"B",2323,1558)=""
^IBA(364.7,"B",2324,1559)=""
^IBA(364.7,"B",2325,1560)=""
^IBA(364.7,"B",2326,1580)=""
^IBA(364.7,"B",2327,1581)=""
^IBA(364.7,"B",2328,1582)=""
^IBA(364.7,"B",2329,1583)=""
^IBA(364.7,"B",2330,1584)=""
^IBA(364.7,"B",2331,1585)=""
^IBA(364.7,"B",2332,1586)=""
^IBA(364.7,"B",2333,1587)=""
^IBA(364.7,"B",2334,1588)=""
^IBA(364.7,"B",2335,1589)=""
^IBA(364.7,"B",2336,1590)=""
^IBA(364.7,"B",2337,1591)=""
^IBA(364.7,"B",2338,1592)=""
^IBA(364.7,"B",2339,1593)=""
^IBA(364.7,"B",2340,1594)=""
^IBA(364.7,"B",2341,1595)=""
^IBA(364.7,"B",2342,1596)=""
^IBA(364.7,"B",2343,1597)=""
^IBA(364.7,"B",2344,1598)=""
^IBA(364.7,"B",2345,1599)=""
^IBA(364.7,"B",2346,1600)=""
^IBA(364.7,"B",2347,1601)=""
^IBA(364.7,"B",2348,1602)=""
^IBA(364.7,"B",2349,1603)=""
^IBA(364.7,"B",2350,1604)=""
^IBA(364.7,"B",2351,1605)=""
^IBA(364.7,"B",2352,1606)=""
^IBA(364.7,"B",2353,1607)=""
^IBA(364.7,"B",2354,1608)=""
^IBA(364.7,"B",2355,1614)=""
^IBA(364.7,"B",2356,1688)=""
^IBA(364.7,"B",2357,1689)=""
^IBA(364.7,"B",2358,1728)=""
^IBA(364.7,"B",2359,1729)=""
^IBA(364.7,"B",2360,1730)=""
^IBA(364.7,"B",2361,1731)=""
^IBA(364.7,"B",2370,1609)=""
^IBA(364.7,"B",2371,1956)=""
^IBA(364.7,"B",2372,1957)=""
^IBA(364.7,"B",2373,1958)=""
^IBA(364.7,"B",2374,1959)=""
^IBA(364.7,"B",2375,1960)=""
^IBA(364.7,"B",2376,1961)=""
^IBA(364.7,"B",2377,1962)=""
^IBA(364.7,"B",2378,1963)=""
^IBA(364.7,"B",2379,1964)=""
^IBA(364.7,"B",2380,1965)=""
^IBA(364.7,"B",2381,1966)=""
^IBA(364.7,"B",2382,1967)=""
^IBA(364.7,"B",2383,1969)=""
^IBA(364.7,"B",2384,1971)=""
^IBA(364.7,"B",2385,1970)=""
^IBA(364.7,"B",2387,1973)=""
^IBA(364.7,"B",2388,1974)=""
^IBA(364.7,"B",2390,1975)=""
^IBA(364.7,"B",2392,1977)=""
^IBA(364.7,"B",2393,1978)=""
^IBA(364.7,"B",2394,1979)=""
^IBA(364.7,"B",2395,1980)=""
^IBA(364.7,"B",2396,1981)=""
^IBA(364.7,"B",2397,1982)=""
^IBA(364.7,"B",2398,1983)=""
^IBA(364.7,"B",2399,1984)=""
^IBA(364.7,"B",2400,1985)=""
^IBA(364.7,"B",2401,1986)=""
^IBA(364.7,"B",2433,2018)=""
^IBA(364.7,"B",2436,2019)=""
^IBA(364.7,"B",2438,2020)=""
^IBA(364.7,"B",2439,2026)=""
^IBA(364.7,"B",2442,2021)=""
^IBA(364.7,"B",2443,2022)=""
^IBA(364.7,"B",2444,2023)=""
^IBA(364.7,"B",2445,2024)=""
^IBA(364.7,"B",2446,2025)=""
^IBA(364.7,"B",2447,2027)=""
^IBA(364.7,"B",2448,2028)=""
^IBA(364.7,"B",2449,2029)=""
^IBA(364.7,"B",2451,2030)=""
^IBA(364.7,"B",2452,2031)=""
^IBA(364.7,"B",2453,2035)=""
^IBA(364.7,"B",2454,2032)=""
^IBA(364.7,"B",2455,2033)=""
^IBA(364.7,"B",2456,2034)=""
^IBA(364.7,"B",2457,2038)=""
^IBA(364.7,"B",2458,2039)=""
^IBA(364.7,"B",2461,2040)=""
^IBA(364.7,"B",2462,2041)=""
^IBA(364.7,"B",2463,2042)=""
^IBA(364.7,"C",2,2)=""
^IBA(364.7,"C",2,259)=""
^IBA(364.7,"C",2,297)=""
^IBA(364.7,"C",2,698)=""
^IBA(364.7,"C",2,1110)=""
^IBA(364.7,"C",2,1157)=""
^IBA(364.7,"C",3,253)=""
^IBA(364.7,"C",3,1104)=""
^IBA(364.7,"C",4,4)=""
^IBA(364.7,"C",4,785)=""
^IBA(364.7,"C",4,791)=""
^IBA(364.7,"C",4,1116)=""
^IBA(364.7,"C",5,5)=""
^IBA(364.7,"C",5,6)=""
^IBA(364.7,"C",5,7)=""
^IBA(364.7,"C",5,9)=""
^IBA(364.7,"C",5,10)=""
^IBA(364.7,"C",5,12)=""
^IBA(364.7,"C",5,13)=""
^IBA(364.7,"C",5,14)=""
^IBA(364.7,"C",5,15)=""
^IBA(364.7,"C",5,16)=""
^IBA(364.7,"C",5,19)=""
^IBA(364.7,"C",5,20)=""
^IBA(364.7,"C",5,21)=""
^IBA(364.7,"C",5,28)=""
^IBA(364.7,"C",5,38)=""
^IBA(364.7,"C",5,39)=""
^IBA(364.7,"C",5,40)=""
^IBA(364.7,"C",5,41)=""
^IBA(364.7,"C",5,42)=""
^IBA(364.7,"C",5,43)=""
^IBA(364.7,"C",5,44)=""
^IBA(364.7,"C",5,45)=""
^IBA(364.7,"C",5,50)=""
^IBA(364.7,"C",5,51)=""
^IBA(364.7,"C",5,53)=""
^IBA(364.7,"C",5,61)=""
^IBA(364.7,"C",5,62)=""
^IBA(364.7,"C",5,63)=""
^IBA(364.7,"C",5,69)=""
^IBA(364.7,"C",5,70)=""
^IBA(364.7,"C",5,71)=""
^IBA(364.7,"C",5,77)=""
^IBA(364.7,"C",5,88)=""
^IBA(364.7,"C",5,89)=""
^IBA(364.7,"C",5,99)=""
^IBA(364.7,"C",5,101)=""
^IBA(364.7,"C",5,103)=""
^IBA(364.7,"C",5,105)=""
^IBA(364.7,"C",5,107)=""
^IBA(364.7,"C",5,110)=""
^IBA(364.7,"C",5,119)=""
^IBA(364.7,"C",5,120)=""
^IBA(364.7,"C",5,121)=""
^IBA(364.7,"C",5,127)=""
^IBA(364.7,"C",5,128)=""
^IBA(364.7,"C",5,129)=""
^IBA(364.7,"C",5,132)=""
^IBA(364.7,"C",5,135)=""
^IBA(364.7,"C",5,139)=""
^IBA(364.7,"C",5,140)=""
^IBA(364.7,"C",5,141)=""
^IBA(364.7,"C",5,142)=""
^IBA(364.7,"C",5,143)=""
^IBA(364.7,"C",5,145)=""
^IBA(364.7,"C",5,146)=""
^IBA(364.7,"C",5,147)=""
^IBA(364.7,"C",5,148)=""
^IBA(364.7,"C",5,149)=""
^IBA(364.7,"C",5,151)=""
^IBA(364.7,"C",5,152)=""
^IBA(364.7,"C",5,153)=""
^IBA(364.7,"C",5,154)=""
^IBA(364.7,"C",5,156)=""
^IBA(364.7,"C",5,157)=""
^IBA(364.7,"C",5,159)=""
^IBA(364.7,"C",5,160)=""
^IBA(364.7,"C",5,163)=""
^IBA(364.7,"C",5,166)=""
^IBA(364.7,"C",5,167)=""
^IBA(364.7,"C",5,168)=""
^IBA(364.7,"C",5,169)=""
^IBA(364.7,"C",5,170)=""
^IBA(364.7,"C",5,171)=""
^IBA(364.7,"C",5,172)=""
^IBA(364.7,"C",5,173)=""
^IBA(364.7,"C",5,174)=""
^IBA(364.7,"C",5,175)=""
^IBA(364.7,"C",5,177)=""
^IBA(364.7,"C",5,178)=""
^IBA(364.7,"C",5,179)=""
^IBA(364.7,"C",5,180)=""
^IBA(364.7,"C",5,181)=""
^IBA(364.7,"C",5,182)=""
^IBA(364.7,"C",5,183)=""
^IBA(364.7,"C",5,184)=""
^IBA(364.7,"C",5,185)=""
^IBA(364.7,"C",5,189)=""
^IBA(364.7,"C",5,192)=""
^IBA(364.7,"C",5,193)=""
^IBA(364.7,"C",5,195)=""
^IBA(364.7,"C",5,203)=""
^IBA(364.7,"C",5,208)=""
^IBA(364.7,"C",5,209)=""
^IBA(364.7,"C",5,211)=""
^IBA(364.7,"C",5,212)=""
^IBA(364.7,"C",5,213)=""
^IBA(364.7,"C",5,225)=""
^IBA(364.7,"C",5,226)=""
^IBA(364.7,"C",5,227)=""
^IBA(364.7,"C",5,229)=""
^IBA(364.7,"C",5,230)=""
^IBA(364.7,"C",5,232)=""
^IBA(364.7,"C",5,244)=""
^IBA(364.7,"C",5,245)=""
^IBA(364.7,"C",5,246)=""
^IBA(364.7,"C",5,247)=""
^IBA(364.7,"C",5,256)=""
^IBA(364.7,"C",5,258)=""
^IBA(364.7,"C",5,262)=""
^IBA(364.7,"C",5,263)=""
^IBA(364.7,"C",5,264)=""
^IBA(364.7,"C",5,265)=""
^IBA(364.7,"C",5,269)=""
^IBA(364.7,"C",5,270)=""
^IBA(364.7,"C",5,278)=""
^IBA(364.7,"C",5,279)=""
^IBA(364.7,"C",5,280)=""
^IBA(364.7,"C",5,281)=""
^IBA(364.7,"C",5,283)=""
^IBA(364.7,"C",5,284)=""
^IBA(364.7,"C",5,286)=""
^IBA(364.7,"C",5,291)=""
^IBA(364.7,"C",5,295)=""
^IBA(364.7,"C",5,303)=""
^IBA(364.7,"C",5,319)=""
^IBA(364.7,"C",5,326)=""
^IBA(364.7,"C",5,327)=""
^IBA(364.7,"C",5,331)=""
^IBA(364.7,"C",5,332)=""
^IBA(364.7,"C",5,333)=""
^IBA(364.7,"C",5,334)=""
^IBA(364.7,"C",5,335)=""
^IBA(364.7,"C",5,344)=""
^IBA(364.7,"C",5,346)=""
^IBA(364.7,"C",5,349)=""
^IBA(364.7,"C",5,351)=""
^IBA(364.7,"C",5,355)=""
^IBA(364.7,"C",5,356)=""
^IBA(364.7,"C",5,358)=""
^IBA(364.7,"C",5,359)=""
^IBA(364.7,"C",5,360)=""
^IBA(364.7,"C",5,365)=""
^IBA(364.7,"C",5,366)=""
^IBA(364.7,"C",5,368)=""
^IBA(364.7,"C",5,369)=""
^IBA(364.7,"C",5,370)=""
^IBA(364.7,"C",5,371)=""
^IBA(364.7,"C",5,372)=""
^IBA(364.7,"C",5,373)=""
^IBA(364.7,"C",5,375)=""
^IBA(364.7,"C",5,376)=""
^IBA(364.7,"C",5,377)=""
^IBA(364.7,"C",5,388)=""
^IBA(364.7,"C",5,389)=""
^IBA(364.7,"C",5,390)=""
^IBA(364.7,"C",5,391)=""
^IBA(364.7,"C",5,405)=""
^IBA(364.7,"C",5,406)=""
^IBA(364.7,"C",5,407)=""
^IBA(364.7,"C",5,408)=""
^IBA(364.7,"C",5,409)=""
^IBA(364.7,"C",5,420)=""
^IBA(364.7,"C",5,421)=""
^IBA(364.7,"C",5,422)=""
^IBA(364.7,"C",5,423)=""
^IBA(364.7,"C",5,424)=""
^IBA(364.7,"C",5,425)=""
^IBA(364.7,"C",5,426)=""
^IBA(364.7,"C",5,427)=""
^IBA(364.7,"C",5,430)=""
^IBA(364.7,"C",5,431)=""
^IBA(364.7,"C",5,432)=""
^IBA(364.7,"C",5,433)=""
^IBA(364.7,"C",5,434)=""
^IBA(364.7,"C",5,435)=""
^IBA(364.7,"C",5,436)=""
^IBA(364.7,"C",5,437)=""
^IBA(364.7,"C",5,440)=""
^IBA(364.7,"C",5,443)=""
^IBA(364.7,"C",5,444)=""
^IBA(364.7,"C",5,445)=""
^IBA(364.7,"C",5,446)=""
^IBA(364.7,"C",5,447)=""
^IBA(364.7,"C",5,448)=""
^IBA(364.7,"C",5,449)=""
^IBA(364.7,"C",5,450)=""
^IBA(364.7,"C",5,455)=""
^IBA(364.7,"C",5,456)=""
^IBA(364.7,"C",5,457)=""
^IBA(364.7,"C",5,458)=""
^IBA(364.7,"C",5,459)=""
^IBA(364.7,"C",5,460)=""
^IBA(364.7,"C",5,461)=""
^IBA(364.7,"C",5,474)=""
^IBA(364.7,"C",5,475)=""
^IBA(364.7,"C",5,480)=""
^IBA(364.7,"C",5,481)=""
^IBA(364.7,"C",5,482)=""
^IBA(364.7,"C",5,489)=""
^IBA(364.7,"C",5,494)=""
^IBA(364.7,"C",5,496)=""
^IBA(364.7,"C",5,497)=""
^IBA(364.7,"C",5,506)=""
^IBA(364.7,"C",5,507)=""
^IBA(364.7,"C",5,515)=""
^IBA(364.7,"C",5,522)=""
^IBA(364.7,"C",5,523)=""
^IBA(364.7,"C",5,524)=""
^IBA(364.7,"C",5,525)=""
^IBA(364.7,"C",5,526)=""
^IBA(364.7,"C",5,527)=""
^IBA(364.7,"C",5,528)=""
^IBA(364.7,"C",5,529)=""
^IBA(364.7,"C",5,534)=""
^IBA(364.7,"C",5,535)=""
^IBA(364.7,"C",5,536)=""
^IBA(364.7,"C",5,537)=""
^IBA(364.7,"C",5,538)=""
^IBA(364.7,"C",5,539)=""
^IBA(364.7,"C",5,540)=""
^IBA(364.7,"C",5,541)=""
^IBA(364.7,"C",5,542)=""
^IBA(364.7,"C",5,543)=""
^IBA(364.7,"C",5,544)=""
^IBA(364.7,"C",5,545)=""
^IBA(364.7,"C",5,546)=""
^IBA(364.7,"C",5,547)=""
^IBA(364.7,"C",5,548)=""
^IBA(364.7,"C",5,549)=""
^IBA(364.7,"C",5,550)=""
^IBA(364.7,"C",5,551)=""
^IBA(364.7,"C",5,552)=""
^IBA(364.7,"C",5,553)=""
^IBA(364.7,"C",5,554)=""
^IBA(364.7,"C",5,555)=""
^IBA(364.7,"C",5,556)=""
^IBA(364.7,"C",5,557)=""
^IBA(364.7,"C",5,558)=""
^IBA(364.7,"C",5,559)=""
^IBA(364.7,"C",5,560)=""
^IBA(364.7,"C",5,561)=""
^IBA(364.7,"C",5,562)=""
^IBA(364.7,"C",5,563)=""
^IBA(364.7,"C",5,564)=""
^IBA(364.7,"C",5,565)=""
^IBA(364.7,"C",5,566)=""
^IBA(364.7,"C",5,567)=""
^IBA(364.7,"C",5,583)=""
^IBA(364.7,"C",5,584)=""
^IBA(364.7,"C",5,585)=""
^IBA(364.7,"C",5,586)=""
^IBA(364.7,"C",5,587)=""
^IBA(364.7,"C",5,588)=""
^IBA(364.7,"C",5,589)=""
^IBA(364.7,"C",5,590)=""
^IBA(364.7,"C",5,591)=""
^IBA(364.7,"C",5,592)=""
^IBA(364.7,"C",5,593)=""
^IBA(364.7,"C",5,594)=""
^IBA(364.7,"C",5,595)=""
^IBA(364.7,"C",5,596)=""
^IBA(364.7,"C",5,597)=""
^IBA(364.7,"C",5,598)=""
^IBA(364.7,"C",5,599)=""
^IBA(364.7,"C",5,600)=""
^IBA(364.7,"C",5,601)=""
^IBA(364.7,"C",5,602)=""
^IBA(364.7,"C",5,603)=""
^IBA(364.7,"C",5,604)=""
^IBA(364.7,"C",5,605)=""
^IBA(364.7,"C",5,606)=""
^IBA(364.7,"C",5,607)=""
^IBA(364.7,"C",5,608)=""
^IBA(364.7,"C",5,609)=""
^IBA(364.7,"C",5,610)=""
^IBA(364.7,"C",5,613)=""
^IBA(364.7,"C",5,614)=""
^IBA(364.7,"C",5,617)=""
^IBA(364.7,"C",5,618)=""
^IBA(364.7,"C",5,619)=""
^IBA(364.7,"C",5,620)=""
^IBA(364.7,"C",5,621)=""
^IBA(364.7,"C",5,622)=""
^IBA(364.7,"C",5,623)=""
^IBA(364.7,"C",5,624)=""
^IBA(364.7,"C",5,625)=""
^IBA(364.7,"C",5,626)=""
^IBA(364.7,"C",5,627)=""
^IBA(364.7,"C",5,628)=""
^IBA(364.7,"C",5,629)=""
^IBA(364.7,"C",5,630)=""
^IBA(364.7,"C",5,631)=""
^IBA(364.7,"C",5,632)=""
^IBA(364.7,"C",5,633)=""
^IBA(364.7,"C",5,635)=""
^IBA(364.7,"C",5,637)=""
^IBA(364.7,"C",5,638)=""
^IBA(364.7,"C",5,640)=""
^IBA(364.7,"C",5,643)=""
^IBA(364.7,"C",5,644)=""
^IBA(364.7,"C",5,645)=""
^IBA(364.7,"C",5,646)=""
^IBA(364.7,"C",5,647)=""
^IBA(364.7,"C",5,648)=""
^IBA(364.7,"C",5,649)=""
^IBA(364.7,"C",5,654)=""
^IBA(364.7,"C",5,655)=""
^IBA(364.7,"C",5,656)=""
^IBA(364.7,"C",5,658)=""
^IBA(364.7,"C",5,659)=""
^IBA(364.7,"C",5,660)=""
^IBA(364.7,"C",5,661)=""
^IBA(364.7,"C",5,663)=""
^IBA(364.7,"C",5,664)=""
^IBA(364.7,"C",5,692)=""
^IBA(364.7,"C",5,693)=""
^IBA(364.7,"C",5,694)=""
^IBA(364.7,"C",5,695)=""
^IBA(364.7,"C",5,699)=""
^IBA(364.7,"C",5,701)=""
^IBA(364.7,"C",5,702)=""
^IBA(364.7,"C",5,703)=""
^IBA(364.7,"C",5,704)=""
^IBA(364.7,"C",5,705)=""
^IBA(364.7,"C",5,706)=""
^IBA(364.7,"C",5,707)=""
^IBA(364.7,"C",5,708)=""
^IBA(364.7,"C",5,709)=""
^IBA(364.7,"C",5,711)=""
^IBA(364.7,"C",5,712)=""
^IBA(364.7,"C",5,713)=""
^IBA(364.7,"C",5,714)=""
^IBA(364.7,"C",5,715)=""
^IBA(364.7,"C",5,716)=""
^IBA(364.7,"C",5,717)=""
^IBA(364.7,"C",5,718)=""
^IBA(364.7,"C",5,720)=""
^IBA(364.7,"C",5,721)=""
^IBA(364.7,"C",5,722)=""
^IBA(364.7,"C",5,723)=""
^IBA(364.7,"C",5,730)=""
^IBA(364.7,"C",5,731)=""
^IBA(364.7,"C",5,732)=""
^IBA(364.7,"C",5,740)=""
^IBA(364.7,"C",5,741)=""
^IBA(364.7,"C",5,745)=""
^IBA(364.7,"C",5,746)=""
^IBA(364.7,"C",5,747)=""
^IBA(364.7,"C",5,779)=""
^IBA(364.7,"C",5,780)=""
^IBA(364.7,"C",5,781)=""
^IBA(364.7,"C",5,787)=""
^IBA(364.7,"C",5,790)=""
^IBA(364.7,"C",5,792)=""
^IBA(364.7,"C",5,793)=""
^IBA(364.7,"C",5,794)=""
^IBA(364.7,"C",5,796)=""
^IBA(364.7,"C",5,797)=""
^IBA(364.7,"C",5,798)=""
^IBA(364.7,"C",5,800)=""
^IBA(364.7,"C",5,804)=""
^IBA(364.7,"C",5,805)=""
^IBA(364.7,"C",5,806)=""
^IBA(364.7,"C",5,809)=""
^IBA(364.7,"C",5,814)=""
^IBA(364.7,"C",5,815)=""
^IBA(364.7,"C",5,816)=""
^IBA(364.7,"C",5,817)=""
^IBA(364.7,"C",5,822)=""
^IBA(364.7,"C",5,823)=""
^IBA(364.7,"C",5,824)=""
^IBA(364.7,"C",5,825)=""
^IBA(364.7,"C",5,826)=""
^IBA(364.7,"C",5,827)=""
^IBA(364.7,"C",5,828)=""
^IBA(364.7,"C",5,829)=""
^IBA(364.7,"C",5,830)=""
^IBA(364.7,"C",5,832)=""
^IBA(364.7,"C",5,834)=""
^IBA(364.7,"C",5,835)=""
^IBA(364.7,"C",5,837)=""
^IBA(364.7,"C",5,838)=""
^IBA(364.7,"C",5,839)=""
^IBA(364.7,"C",5,840)=""
^IBA(364.7,"C",5,842)=""
^IBA(364.7,"C",5,846)=""
^IBA(364.7,"C",5,847)=""
^IBA(364.7,"C",5,848)=""
^IBA(364.7,"C",5,849)=""
^IBA(364.7,"C",5,850)=""
^IBA(364.7,"C",5,851)=""
^IBA(364.7,"C",5,852)=""
^IBA(364.7,"C",5,853)=""
^IBA(364.7,"C",5,855)=""
^IBA(364.7,"C",5,856)=""
^IBA(364.7,"C",5,857)=""
^IBA(364.7,"C",5,858)=""
^IBA(364.7,"C",5,859)=""
^IBA(364.7,"C",5,860)=""
^IBA(364.7,"C",5,861)=""
^IBA(364.7,"C",5,862)=""
^IBA(364.7,"C",5,863)=""
^IBA(364.7,"C",5,864)=""
^IBA(364.7,"C",5,865)=""
^IBA(364.7,"C",5,866)=""
^IBA(364.7,"C",5,867)=""
^IBA(364.7,"C",5,868)=""
^IBA(364.7,"C",5,869)=""
^IBA(364.7,"C",5,870)=""
^IBA(364.7,"C",5,871)=""
^IBA(364.7,"C",5,872)=""
^IBA(364.7,"C",5,873)=""
^IBA(364.7,"C",5,874)=""
^IBA(364.7,"C",5,875)=""
^IBA(364.7,"C",5,876)=""
^IBA(364.7,"C",5,877)=""
^IBA(364.7,"C",5,878)=""
^IBA(364.7,"C",5,879)=""
^IBA(364.7,"C",5,880)=""
^IBA(364.7,"C",5,881)=""
^IBA(364.7,"C",5,882)=""
^IBA(364.7,"C",5,883)=""
^IBA(364.7,"C",5,884)=""
^IBA(364.7,"C",5,885)=""
^IBA(364.7,"C",5,886)=""
^IBA(364.7,"C",5,887)=""
^IBA(364.7,"C",5,888)=""
^IBA(364.7,"C",5,889)=""
^IBA(364.7,"C",5,890)=""
^IBA(364.7,"C",5,891)=""
^IBA(364.7,"C",5,893)=""
^IBA(364.7,"C",5,894)=""
^IBA(364.7,"C",5,896)=""
^IBA(364.7,"C",5,897)=""
^IBA(364.7,"C",5,914)=""
^IBA(364.7,"C",5,915)=""
^IBA(364.7,"C",5,916)=""
^IBA(364.7,"C",5,917)=""
^IBA(364.7,"C",5,918)=""
^IBA(364.7,"C",5,919)=""
^IBA(364.7,"C",5,920)=""
^IBA(364.7,"C",5,921)=""
^IBA(364.7,"C",5,922)=""
^IBA(364.7,"C",5,923)=""
^IBA(364.7,"C",5,924)=""
^IBA(364.7,"C",5,925)=""
^IBA(364.7,"C",5,926)=""
^IBA(364.7,"C",5,927)=""
^IBA(364.7,"C",5,933)=""
^IBA(364.7,"C",5,934)=""
^IBA(364.7,"C",5,935)=""
^IBA(364.7,"C",5,939)=""
^IBA(364.7,"C",5,940)=""
^IBA(364.7,"C",5,941)=""
^IBA(364.7,"C",5,942)=""
^IBA(364.7,"C",5,943)=""
^IBA(364.7,"C",5,944)=""
^IBA(364.7,"C",5,945)=""
^IBA(364.7,"C",5,948)=""
^IBA(364.7,"C",5,952)=""
^IBA(364.7,"C",5,953)=""
^IBA(364.7,"C",5,954)=""
^IBA(364.7,"C",5,957)=""
^IBA(364.7,"C",5,958)=""
^IBA(364.7,"C",5,959)=""
^IBA(364.7,"C",5,960)=""
^IBA(364.7,"C",5,961)=""
^IBA(364.7,"C",5,962)=""
^IBA(364.7,"C",5,963)=""
^IBA(364.7,"C",5,964)=""
^IBA(364.7,"C",5,965)=""
^IBA(364.7,"C",5,966)=""
^IBA(364.7,"C",5,967)=""
^IBA(364.7,"C",5,968)=""
^IBA(364.7,"C",5,969)=""
^IBA(364.7,"C",5,970)=""
^IBA(364.7,"C",5,971)=""
^IBA(364.7,"C",5,972)=""
^IBA(364.7,"C",5,973)=""
^IBA(364.7,"C",5,974)=""
^IBA(364.7,"C",5,975)=""
^IBA(364.7,"C",5,976)=""
^IBA(364.7,"C",5,977)=""
^IBA(364.7,"C",5,978)=""
^IBA(364.7,"C",5,979)=""
^IBA(364.7,"C",5,980)=""
^IBA(364.7,"C",5,981)=""
^IBA(364.7,"C",5,982)=""
^IBA(364.7,"C",5,985)=""
^IBA(364.7,"C",5,987)=""
^IBA(364.7,"C",5,988)=""
^IBA(364.7,"C",5,989)=""
^IBA(364.7,"C",5,992)=""
^IBA(364.7,"C",5,993)=""
^IBA(364.7,"C",5,994)=""
^IBA(364.7,"C",5,995)=""
^IBA(364.7,"C",5,1005)=""
^IBA(364.7,"C",5,1007)=""
^IBA(364.7,"C",5,1008)=""
^IBA(364.7,"C",5,1011)=""
^IBA(364.7,"C",5,1012)=""
^IBA(364.7,"C",5,1013)=""
^IBA(364.7,"C",5,1015)=""
^IBA(364.7,"C",5,1018)=""
^IBA(364.7,"C",5,1019)=""
^IBA(364.7,"C",5,1020)=""
^IBA(364.7,"C",5,1021)=""
^IBA(364.7,"C",5,1023)=""
^IBA(364.7,"C",5,1024)=""
^IBA(364.7,"C",5,1026)=""
^IBA(364.7,"C",5,1031)=""
^IBA(364.7,"C",5,1032)=""
^IBA(364.7,"C",5,1033)=""
^IBA(364.7,"C",5,1034)=""
^IBA(364.7,"C",5,1035)=""
^IBA(364.7,"C",5,1036)=""
^IBA(364.7,"C",5,1037)=""
^IBA(364.7,"C",5,1038)=""
^IBA(364.7,"C",5,1040)=""
^IBA(364.7,"C",5,1108)=""
^IBA(364.7,"C",5,1113)=""
^IBA(364.7,"C",5,1114)=""
^IBA(364.7,"C",5,1115)=""
^IBA(364.7,"C",5,1117)=""
^IBA(364.7,"C",5,1120)=""
^IBA(364.7,"C",5,1121)=""
^IBA(364.7,"C",5,1122)=""
^IBA(364.7,"C",5,1123)=""
^IBA(364.7,"C",5,1124)=""
^IBA(364.7,"C",5,1127)=""
^IBA(364.7,"C",5,1128)=""
^IBA(364.7,"C",5,1129)=""
^IBA(364.7,"C",5,1134)=""
^IBA(364.7,"C",5,1135)=""
^IBA(364.7,"C",5,1136)=""
^IBA(364.7,"C",5,1137)=""
^IBA(364.7,"C",5,1138)=""
^IBA(364.7,"C",5,1139)=""
^IBA(364.7,"C",5,1140)=""
^IBA(364.7,"C",5,1142)=""
^IBA(364.7,"C",5,1145)=""
^IBA(364.7,"C",5,1147)=""
^IBA(364.7,"C",5,1152)=""
^IBA(364.7,"C",5,1162)=""
^IBA(364.7,"C",5,1163)=""
^IBA(364.7,"C",5,1165)=""
^IBA(364.7,"C",5,1169)=""
^IBA(364.7,"C",5,1170)=""
^IBA(364.7,"C",5,1172)=""
^IBA(364.7,"C",5,1180)=""
^IBA(364.7,"C",5,1192)=""
^IBA(364.7,"C",5,1199)=""
^IBA(364.7,"C",5,1200)=""
^IBA(364.7,"C",5,1201)=""
^IBA(364.7,"C",5,1202)=""
^IBA(364.7,"C",5,1205)=""
^IBA(364.7,"C",5,1206)=""
^IBA(364.7,"C",5,1207)=""
^IBA(364.7,"C",5,1209)=""
^IBA(364.7,"C",5,1213)=""
^IBA(364.7,"C",5,1214)=""
^IBA(364.7,"C",5,1215)=""
^IBA(364.7,"C",5,1216)=""
^IBA(364.7,"C",5,1217)=""
^IBA(364.7,"C",5,1218)=""
^IBA(364.7,"C",5,1219)=""
^IBA(364.7,"C",5,1220)=""
^IBA(364.7,"C",5,1250)=""
^IBA(364.7,"C",5,1253)=""
^IBA(364.7,"C",5,1254)=""
^IBA(364.7,"C",5,1255)=""
^IBA(364.7,"C",5,1256)=""
^IBA(364.7,"C",5,1257)=""
^IBA(364.7,"C",5,1258)=""
^IBA(364.7,"C",5,1259)=""
^IBA(364.7,"C",5,1260)=""
^IBA(364.7,"C",5,1261)=""
^IBA(364.7,"C",5,1262)=""
^IBA(364.7,"C",5,1263)=""
^IBA(364.7,"C",5,1264)=""
^IBA(364.7,"C",5,1265)=""
^IBA(364.7,"C",5,1266)=""
^IBA(364.7,"C",5,1269)=""
^IBA(364.7,"C",5,1274)=""
^IBA(364.7,"C",5,1275)=""
^IBA(364.7,"C",5,1283)=""
^IBA(364.7,"C",5,1284)=""
^IBA(364.7,"C",5,1285)=""
^IBA(364.7,"C",5,1286)=""
^IBA(364.7,"C",5,1287)=""
^IBA(364.7,"C",5,1288)=""
^IBA(364.7,"C",5,1289)=""
^IBA(364.7,"C",5,1290)=""
^IBA(364.7,"C",5,1291)=""
^IBA(364.7,"C",5,1292)=""
^IBA(364.7,"C",5,1293)=""
^IBA(364.7,"C",5,1294)=""
^IBA(364.7,"C",5,1295)=""
^IBA(364.7,"C",5,1296)=""
^IBA(364.7,"C",5,1297)=""
^IBA(364.7,"C",5,1299)=""
^IBA(364.7,"C",5,1300)=""
^IBA(364.7,"C",5,1301)=""
^IBA(364.7,"C",5,1302)=""
^IBA(364.7,"C",5,1306)=""
^IBA(364.7,"C",5,1313)=""
^IBA(364.7,"C",5,1314)=""
^IBA(364.7,"C",5,1315)=""
^IBA(364.7,"C",5,1317)=""
^IBA(364.7,"C",5,1318)=""
^IBA(364.7,"C",5,1319)=""
^IBA(364.7,"C",5,1320)=""
^IBA(364.7,"C",5,1321)=""
^IBA(364.7,"C",5,1322)=""
^IBA(364.7,"C",5,1323)=""
^IBA(364.7,"C",5,1324)=""
^IBA(364.7,"C",5,1325)=""
^IBA(364.7,"C",5,1327)=""
^IBA(364.7,"C",5,1328)=""
^IBA(364.7,"C",5,1329)=""
^IBA(364.7,"C",5,1330)=""
^IBA(364.7,"C",5,1331)=""
^IBA(364.7,"C",5,1332)=""
^IBA(364.7,"C",5,1333)=""
^IBA(364.7,"C",5,1334)=""
^IBA(364.7,"C",5,1335)=""
^IBA(364.7,"C",5,1336)=""
^IBA(364.7,"C",5,1338)=""
^IBA(364.7,"C",5,1339)=""
^IBA(364.7,"C",5,1341)=""
^IBA(364.7,"C",5,1346)=""
^IBA(364.7,"C",5,1347)=""
^IBA(364.7,"C",5,1348)=""
^IBA(364.7,"C",5,1349)=""
^IBA(364.7,"C",5,1350)=""
^IBA(364.7,"C",5,1351)=""
^IBA(364.7,"C",5,1352)=""
^IBA(364.7,"C",5,1353)=""
^IBA(364.7,"C",5,1354)=""
^IBA(364.7,"C",5,1355)=""
^IBA(364.7,"C",5,1356)=""
^IBA(364.7,"C",5,1357)=""
^IBA(364.7,"C",5,1358)=""
^IBA(364.7,"C",5,1359)=""
^IBA(364.7,"C",5,1367)=""
^IBA(364.7,"C",5,1368)=""
^IBA(364.7,"C",5,1369)=""
^IBA(364.7,"C",5,1371)=""
^IBA(364.7,"C",5,1372)=""
^IBA(364.7,"C",5,1373)=""
^IBA(364.7,"C",5,1374)=""
^IBA(364.7,"C",5,1375)=""
^IBA(364.7,"C",5,1376)=""
^IBA(364.7,"C",5,1377)=""
^IBA(364.7,"C",5,1378)=""
^IBA(364.7,"C",5,1379)=""
^IBA(364.7,"C",5,1380)=""
^IBA(364.7,"C",5,1381)=""
^IBA(364.7,"C",5,1382)=""
^IBA(364.7,"C",5,1383)=""
^IBA(364.7,"C",5,1384)=""
^IBA(364.7,"C",5,1385)=""
^IBA(364.7,"C",5,1386)=""
^IBA(364.7,"C",5,1387)=""
^IBA(364.7,"C",5,1388)=""
^IBA(364.7,"C",5,1389)=""
^IBA(364.7,"C",5,1390)=""
^IBA(364.7,"C",5,1391)=""
^IBA(364.7,"C",5,1392)=""
^IBA(364.7,"C",5,1393)=""
^IBA(364.7,"C",5,1394)=""
^IBA(364.7,"C",5,1395)=""
^IBA(364.7,"C",5,1396)=""
^IBA(364.7,"C",5,1397)=""
^IBA(364.7,"C",5,1398)=""
^IBA(364.7,"C",5,1399)=""
^IBA(364.7,"C",5,1400)=""
^IBA(364.7,"C",5,1401)=""
^IBA(364.7,"C",5,1402)=""
^IBA(364.7,"C",5,1405)=""
^IBA(364.7,"C",5,1406)=""
^IBA(364.7,"C",5,1407)=""
^IBA(364.7,"C",5,1408)=""
^IBA(364.7,"C",5,1409)=""
^IBA(364.7,"C",5,1410)=""
^IBA(364.7,"C",5,1411)=""
^IBA(364.7,"C",5,1412)=""
^IBA(364.7,"C",5,1413)=""
^IBA(364.7,"C",5,1414)=""
^IBA(364.7,"C",5,1415)=""
^IBA(364.7,"C",5,1416)=""
^IBA(364.7,"C",5,1417)=""
^IBA(364.7,"C",5,1418)=""
^IBA(364.7,"C",5,1419)=""
^IBA(364.7,"C",5,1420)=""
^IBA(364.7,"C",5,1421)=""
^IBA(364.7,"C",5,1422)=""
^IBA(364.7,"C",5,1423)=""
^IBA(364.7,"C",5,1424)=""
^IBA(364.7,"C",5,1427)=""
^IBA(364.7,"C",5,1428)=""
^IBA(364.7,"C",5,1429)=""
^IBA(364.7,"C",5,1430)=""
^IBA(364.7,"C",5,1431)=""
^IBA(364.7,"C",5,1432)=""
^IBA(364.7,"C",5,1433)=""
^IBA(364.7,"C",5,1434)=""
^IBA(364.7,"C",5,1435)=""
^IBA(364.7,"C",5,1436)=""
^IBA(364.7,"C",5,1437)=""
^IBA(364.7,"C",5,1438)=""
^IBA(364.7,"C",5,1439)=""
^IBA(364.7,"C",5,1440)=""
^IBA(364.7,"C",5,1441)=""
^IBA(364.7,"C",5,1442)=""
^IBA(364.7,"C",5,1443)=""
^IBA(364.7,"C",5,1444)=""
^IBA(364.7,"C",5,1445)=""
^IBA(364.7,"C",5,1446)=""
^IBA(364.7,"C",5,1447)=""
^IBA(364.7,"C",5,1448)=""
^IBA(364.7,"C",5,1449)=""
^IBA(364.7,"C",5,1450)=""
^IBA(364.7,"C",5,1451)=""
^IBA(364.7,"C",5,1452)=""
^IBA(364.7,"C",5,1453)=""
^IBA(364.7,"C",5,1454)=""
^IBA(364.7,"C",5,1455)=""
^IBA(364.7,"C",5,1456)=""
^IBA(364.7,"C",5,1458)=""
^IBA(364.7,"C",5,1459)=""
^IBA(364.7,"C",5,1466)=""
^IBA(364.7,"C",5,1467)=""
^IBA(364.7,"C",5,1468)=""
^IBA(364.7,"C",5,1469)=""
^IBA(364.7,"C",5,1470)=""
^IBA(364.7,"C",5,1472)=""
^IBA(364.7,"C",5,1473)=""
^IBA(364.7,"C",5,1474)=""
^IBA(364.7,"C",5,1475)=""
^IBA(364.7,"C",5,1476)=""
^IBA(364.7,"C",5,1477)=""
^IBA(364.7,"C",5,1478)=""
^IBA(364.7,"C",5,1479)=""
^IBA(364.7,"C",5,1480)=""
^IBA(364.7,"C",5,1481)=""
^IBA(364.7,"C",5,1482)=""
^IBA(364.7,"C",5,1483)=""
^IBA(364.7,"C",5,1485)=""
^IBA(364.7,"C",5,1486)=""
^IBA(364.7,"C",5,1487)=""
^IBA(364.7,"C",5,1488)=""
^IBA(364.7,"C",5,1489)=""
^IBA(364.7,"C",5,1490)=""
^IBA(364.7,"C",5,1491)=""
^IBA(364.7,"C",5,1492)=""
^IBA(364.7,"C",5,1493)=""
^IBA(364.7,"C",5,1494)=""
^IBA(364.7,"C",5,1496)=""
^IBA(364.7,"C",5,1497)=""
^IBA(364.7,"C",5,1498)=""
^IBA(364.7,"C",5,1499)=""
^IBA(364.7,"C",5,1501)=""
^IBA(364.7,"C",5,1502)=""
^IBA(364.7,"C",5,1503)=""
^IBA(364.7,"C",5,1504)=""
^IBA(364.7,"C",5,1505)=""
^IBA(364.7,"C",5,1506)=""
^IBA(364.7,"C",5,1507)=""
^IBA(364.7,"C",5,1508)=""
^IBA(364.7,"C",5,1509)=""
^IBA(364.7,"C",5,1510)=""
^IBA(364.7,"C",5,1511)=""
^IBA(364.7,"C",5,1514)=""
^IBA(364.7,"C",5,1515)=""
^IBA(364.7,"C",5,1516)=""
^IBA(364.7,"C",5,1517)=""
^IBA(364.7,"C",5,1519)=""
^IBA(364.7,"C",5,1520)=""
^IBA(364.7,"C",5,1521)=""
^IBA(364.7,"C",5,1522)=""
^IBA(364.7,"C",5,1523)=""
^IBA(364.7,"C",5,1524)=""
^IBA(364.7,"C",5,1525)=""
^IBA(364.7,"C",5,1526)=""
^IBA(364.7,"C",5,1527)=""
^IBA(364.7,"C",5,1528)=""
^IBA(364.7,"C",5,1529)=""
^IBA(364.7,"C",5,1532)=""
^IBA(364.7,"C",5,1533)=""
^IBA(364.7,"C",5,1534)=""
^IBA(364.7,"C",5,1535)=""
^IBA(364.7,"C",5,1536)=""
^IBA(364.7,"C",5,1537)=""
^IBA(364.7,"C",5,1538)=""
^IBA(364.7,"C",5,1539)=""
^IBA(364.7,"C",5,1540)=""
^IBA(364.7,"C",5,1541)=""
^IBA(364.7,"C",5,1542)=""
^IBA(364.7,"C",5,1543)=""
^IBA(364.7,"C",5,1544)=""
^IBA(364.7,"C",5,1545)=""
^IBA(364.7,"C",5,1546)=""
^IBA(364.7,"C",5,1547)=""
^IBA(364.7,"C",5,1548)=""
^IBA(364.7,"C",5,1549)=""
^IBA(364.7,"C",5,1551)=""
^IBA(364.7,"C",5,1552)=""
^IBA(364.7,"C",5,1553)=""
^IBA(364.7,"C",5,1554)=""
^IBA(364.7,"C",5,1555)=""
^IBA(364.7,"C",5,1556)=""
^IBA(364.7,"C",5,1557)=""
^IBA(364.7,"C",5,1558)=""
^IBA(364.7,"C",5,1559)=""
^IBA(364.7,"C",5,1560)=""
^IBA(364.7,"C",5,1561)=""
^IBA(364.7,"C",5,1562)=""
^IBA(364.7,"C",5,1563)=""
^IBA(364.7,"C",5,1564)=""
^IBA(364.7,"C",5,1565)=""
^IBA(364.7,"C",5,1566)=""
^IBA(364.7,"C",5,1567)=""
^IBA(364.7,"C",5,1568)=""
^IBA(364.7,"C",5,1569)=""
^IBA(364.7,"C",5,1570)=""
^IBA(364.7,"C",5,1571)=""
^IBA(364.7,"C",5,1572)=""
^IBA(364.7,"C",5,1573)=""
^IBA(364.7,"C",5,1574)=""
^IBA(364.7,"C",5,1575)=""
^IBA(364.7,"C",5,1576)=""
^IBA(364.7,"C",5,1577)=""
^IBA(364.7,"C",5,1578)=""
^IBA(364.7,"C",5,1579)=""
^IBA(364.7,"C",5,1580)=""
^IBA(364.7,"C",5,1583)=""
^IBA(364.7,"C",5,1584)=""
^IBA(364.7,"C",5,1585)=""
^IBA(364.7,"C",5,1586)=""
^IBA(364.7,"C",5,1587)=""
^IBA(364.7,"C",5,1588)=""
^IBA(364.7,"C",5,1589)=""
^IBA(364.7,"C",5,1590)=""
^IBA(364.7,"C",5,1591)=""
^IBA(364.7,"C",5,1592)=""
^IBA(364.7,"C",5,1593)=""
^IBA(364.7,"C",5,1594)=""
^IBA(364.7,"C",5,1595)=""
^IBA(364.7,"C",5,1596)=""
^IBA(364.7,"C",5,1597)=""
^IBA(364.7,"C",5,1600)=""
^IBA(364.7,"C",5,1601)=""
^IBA(364.7,"C",5,1602)=""
^IBA(364.7,"C",5,1603)=""
^IBA(364.7,"C",5,1604)=""
^IBA(364.7,"C",5,1605)=""
^IBA(364.7,"C",5,1606)=""
^IBA(364.7,"C",5,1608)=""
^IBA(364.7,"C",5,1609)=""
^IBA(364.7,"C",5,1611)=""
^IBA(364.7,"C",5,1612)=""
^IBA(364.7,"C",5,1613)=""
^IBA(364.7,"C",5,1614)=""
^IBA(364.7,"C",5,1616)=""
^IBA(364.7,"C",5,1617)=""
^IBA(364.7,"C",5,1618)=""
^IBA(364.7,"C",5,1619)=""
^IBA(364.7,"C",5,1620)=""
^IBA(364.7,"C",5,1621)=""
^IBA(364.7,"C",5,1622)=""
^IBA(364.7,"C",5,1624)=""
^IBA(364.7,"C",5,1625)=""
^IBA(364.7,"C",5,1626)=""
^IBA(364.7,"C",5,1628)=""
^IBA(364.7,"C",5,1629)=""
^IBA(364.7,"C",5,1630)=""
^IBA(364.7,"C",5,1631)=""
^IBA(364.7,"C",5,1632)=""
^IBA(364.7,"C",5,1633)=""
^IBA(364.7,"C",5,1634)=""
^IBA(364.7,"C",5,1635)=""
^IBA(364.7,"C",5,1636)=""
^IBA(364.7,"C",5,1638)=""
^IBA(364.7,"C",5,1640)=""
^IBA(364.7,"C",5,1641)=""
^IBA(364.7,"C",5,1642)=""
^IBA(364.7,"C",5,1643)=""
^IBA(364.7,"C",5,1644)=""
^IBA(364.7,"C",5,1645)=""
^IBA(364.7,"C",5,1646)=""
^IBA(364.7,"C",5,1647)=""
^IBA(364.7,"C",5,1648)=""
^IBA(364.7,"C",5,1649)=""
^IBA(364.7,"C",5,1650)=""
^IBA(364.7,"C",5,1651)=""
^IBA(364.7,"C",5,1687)=""
^IBA(364.7,"C",5,1688)=""
^IBA(364.7,"C",5,1689)=""
^IBA(364.7,"C",5,1691)=""
^IBA(364.7,"C",5,1692)=""
^IBA(364.7,"C",5,1693)=""
^IBA(364.7,"C",5,1694)=""
^IBA(364.7,"C",5,1695)=""
^IBA(364.7,"C",5,1696)=""
^IBA(364.7,"C",5,1697)=""
^IBA(364.7,"C",5,1698)=""
^IBA(364.7,"C",5,1699)=""
^IBA(364.7,"C",5,1700)=""
^IBA(364.7,"C",5,1701)=""
^IBA(364.7,"C",5,1703)=""
^IBA(364.7,"C",5,1704)=""
^IBA(364.7,"C",5,1705)=""
^IBA(364.7,"C",5,1706)=""
^IBA(364.7,"C",5,1707)=""
^IBA(364.7,"C",5,1708)=""
^IBA(364.7,"C",5,1709)=""
^IBA(364.7,"C",5,1710)=""
^IBA(364.7,"C",5,1712)=""
^IBA(364.7,"C",5,1713)=""
^IBA(364.7,"C",5,1714)=""
^IBA(364.7,"C",5,1715)=""
^IBA(364.7,"C",5,1716)=""
^IBA(364.7,"C",5,1717)=""
^IBA(364.7,"C",5,1718)=""
^IBA(364.7,"C",5,1719)=""
^IBA(364.7,"C",5,1720)=""
^IBA(364.7,"C",5,1721)=""
^IBA(364.7,"C",5,1722)=""
^IBA(364.7,"C",5,1725)=""
^IBA(364.7,"C",5,1726)=""
^IBA(364.7,"C",5,1727)=""
^IBA(364.7,"C",5,1728)=""
^IBA(364.7,"C",5,1729)=""
^IBA(364.7,"C",5,1730)=""
^IBA(364.7,"C",5,1731)=""
^IBA(364.7,"C",5,1751)=""
^IBA(364.7,"C",5,1752)=""
^IBA(364.7,"C",5,1753)=""
^IBA(364.7,"C",5,1754)=""
^IBA(364.7,"C",5,1755)=""
^IBA(364.7,"C",5,1756)=""
^IBA(364.7,"C",5,1757)=""
^IBA(364.7,"C",5,1758)=""
^IBA(364.7,"C",5,1759)=""
^IBA(364.7,"C",5,1760)=""
^IBA(364.7,"C",5,1761)=""
^IBA(364.7,"C",5,1762)=""
^IBA(364.7,"C",5,1763)=""
^IBA(364.7,"C",5,1764)=""
^IBA(364.7,"C",5,1765)=""
^IBA(364.7,"C",5,1767)=""
^IBA(364.7,"C",5,1768)=""
^IBA(364.7,"C",5,1769)=""
^IBA(364.7,"C",5,1770)=""
^IBA(364.7,"C",5,1771)=""
^IBA(364.7,"C",5,1772)=""
^IBA(364.7,"C",5,1773)=""
^IBA(364.7,"C",5,1774)=""
^IBA(364.7,"C",5,1775)=""
^IBA(364.7,"C",5,1776)=""
^IBA(364.7,"C",5,1777)=""
^IBA(364.7,"C",5,1778)=""
^IBA(364.7,"C",5,1779)=""
^IBA(364.7,"C",5,1780)=""
^IBA(364.7,"C",5,1781)=""
^IBA(364.7,"C",5,1784)=""
^IBA(364.7,"C",5,1786)=""
^IBA(364.7,"C",5,1787)=""
^IBA(364.7,"C",5,1788)=""
^IBA(364.7,"C",5,1789)=""
^IBA(364.7,"C",5,1790)=""
^IBA(364.7,"C",5,1791)=""
^IBA(364.7,"C",5,1792)=""
^IBA(364.7,"C",5,1793)=""
^IBA(364.7,"C",5,1794)=""
^IBA(364.7,"C",5,1795)=""
^IBA(364.7,"C",5,1796)=""
^IBA(364.7,"C",5,1797)=""
^IBA(364.7,"C",5,1798)=""
^IBA(364.7,"C",5,1799)=""
^IBA(364.7,"C",5,1800)=""
^IBA(364.7,"C",5,1803)=""
^IBA(364.7,"C",5,1805)=""
^IBA(364.7,"C",5,1806)=""
^IBA(364.7,"C",5,1807)=""
^IBA(364.7,"C",5,1808)=""
^IBA(364.7,"C",5,1809)=""
^IBA(364.7,"C",5,1810)=""
^IBA(364.7,"C",5,1811)=""
^IBA(364.7,"C",5,1812)=""
^IBA(364.7,"C",5,1813)=""
^IBA(364.7,"C",5,1814)=""
^IBA(364.7,"C",5,1815)=""
^IBA(364.7,"C",5,1816)=""
^IBA(364.7,"C",5,1817)=""
^IBA(364.7,"C",5,1818)=""
^IBA(364.7,"C",5,1819)=""
^IBA(364.7,"C",5,1822)=""
^IBA(364.7,"C",5,1823)=""
^IBA(364.7,"C",5,1824)=""
^IBA(364.7,"C",5,1826)=""
^IBA(364.7,"C",5,1827)=""
^IBA(364.7,"C",5,1828)=""
^IBA(364.7,"C",5,1829)=""
^IBA(364.7,"C",5,1830)=""
^IBA(364.7,"C",5,1831)=""
^IBA(364.7,"C",5,1832)=""
^IBA(364.7,"C",5,1833)=""
^IBA(364.7,"C",5,1835)=""
^IBA(364.7,"C",5,1836)=""
^IBA(364.7,"C",5,1837)=""
^IBA(364.7,"C",5,1838)=""
^IBA(364.7,"C",5,1839)=""
^IBA(364.7,"C",5,1840)=""
^IBA(364.7,"C",5,1841)=""
^IBA(364.7,"C",5,1842)=""
^IBA(364.7,"C",5,1843)=""
^IBA(364.7,"C",5,1844)=""
^IBA(364.7,"C",5,1845)=""
^IBA(364.7,"C",5,1846)=""
^IBA(364.7,"C",5,1847)=""
^IBA(364.7,"C",5,1848)=""
^IBA(364.7,"C",5,1849)=""
^IBA(364.7,"C",5,1852)=""
^IBA(364.7,"C",5,1854)=""
^IBA(364.7,"C",5,1855)=""
^IBA(364.7,"C",5,1856)=""
^IBA(364.7,"C",5,1857)=""
^IBA(364.7,"C",5,1858)=""
^IBA(364.7,"C",5,1859)=""
^IBA(364.7,"C",5,1860)=""
^IBA(364.7,"C",5,1861)=""
^IBA(364.7,"C",5,1862)=""
^IBA(364.7,"C",5,1863)=""
^IBA(364.7,"C",5,1864)=""
^IBA(364.7,"C",5,1865)=""
^IBA(364.7,"C",5,1866)=""
^IBA(364.7,"C",5,1867)=""
^IBA(364.7,"C",5,1868)=""
^IBA(364.7,"C",5,1869)=""
^IBA(364.7,"C",5,1870)=""
^IBA(364.7,"C",5,1871)=""
^IBA(364.7,"C",5,1872)=""
^IBA(364.7,"C",5,1873)=""
^IBA(364.7,"C",5,1874)=""
^IBA(364.7,"C",5,1875)=""
^IBA(364.7,"C",5,1876)=""
^IBA(364.7,"C",5,1877)=""
^IBA(364.7,"C",5,1878)=""
^IBA(364.7,"C",5,1879)=""
^IBA(364.7,"C",5,1880)=""
^IBA(364.7,"C",5,1881)=""
^IBA(364.7,"C",5,1882)=""
^IBA(364.7,"C",5,1883)=""
^IBA(364.7,"C",5,1884)=""
^IBA(364.7,"C",5,1885)=""
^IBA(364.7,"C",5,1886)=""
^IBA(364.7,"C",5,1887)=""
^IBA(364.7,"C",5,1888)=""
^IBA(364.7,"C",5,1889)=""
^IBA(364.7,"C",5,1890)=""
^IBA(364.7,"C",5,1891)=""
^IBA(364.7,"C",5,1892)=""
^IBA(364.7,"C",5,1893)=""
^IBA(364.7,"C",5,1894)=""
^IBA(364.7,"C",5,1895)=""
^IBA(364.7,"C",5,1896)=""
^IBA(364.7,"C",5,1897)=""
^IBA(364.7,"C",5,1898)=""
^IBA(364.7,"C",5,1899)=""
^IBA(364.7,"C",5,1900)=""
^IBA(364.7,"C",5,1901)=""
^IBA(364.7,"C",5,1902)=""
^IBA(364.7,"C",5,1905)=""
^IBA(364.7,"C",5,1906)=""
^IBA(364.7,"C",5,1907)=""
^IBA(364.7,"C",5,1909)=""
^IBA(364.7,"C",5,1910)=""
^IBA(364.7,"C",5,1911)=""
^IBA(364.7,"C",5,1912)=""
^IBA(364.7,"C",5,1913)=""
^IBA(364.7,"C",5,1915)=""
^IBA(364.7,"C",5,1916)=""
^IBA(364.7,"C",5,1917)=""
^IBA(364.7,"C",5,1918)=""
^IBA(364.7,"C",5,1919)=""
^IBA(364.7,"C",5,1920)=""
^IBA(364.7,"C",5,1921)=""
^IBA(364.7,"C",5,1922)=""
^IBA(364.7,"C",5,1923)=""
^IBA(364.7,"C",5,1928)=""
^IBA(364.7,"C",5,1929)=""
^IBA(364.7,"C",5,1945)=""
^IBA(364.7,"C",5,1946)=""
^IBA(364.7,"C",5,1947)=""
^IBA(364.7,"C",5,1948)=""
^IBA(364.7,"C",5,1949)=""
^IBA(364.7,"C",5,1950)=""
^IBA(364.7,"C",5,1956)=""
^IBA(364.7,"C",5,1958)=""
^IBA(364.7,"C",5,1959)=""
^IBA(364.7,"C",5,1960)=""
^IBA(364.7,"C",5,1961)=""
^IBA(364.7,"C",5,1962)=""
^IBA(364.7,"C",5,1963)=""
^IBA(364.7,"C",5,1964)=""
^IBA(364.7,"C",5,1965)=""
^IBA(364.7,"C",5,1966)=""
^IBA(364.7,"C",5,1967)=""
^IBA(364.7,"C",5,1970)=""
^IBA(364.7,"C",5,1971)=""
^IBA(364.7,"C",5,1973)=""
^IBA(364.7,"C",5,1974)=""
^IBA(364.7,"C",5,1975)=""
^IBA(364.7,"C",5,1977)=""
^IBA(364.7,"C",5,1978)=""
^IBA(364.7,"C",5,1979)=""
^IBA(364.7,"C",5,1980)=""
^IBA(364.7,"C",5,1981)=""
^IBA(364.7,"C",5,1982)=""
^IBA(364.7,"C",5,1983)=""
^IBA(364.7,"C",5,1984)=""
^IBA(364.7,"C",5,1985)=""
^IBA(364.7,"C",5,1986)=""
^IBA(364.7,"C",5,2018)=""
^IBA(364.7,"C",5,2019)=""
^IBA(364.7,"C",5,2021)=""
^IBA(364.7,"C",5,2022)=""
^IBA(364.7,"C",5,2023)=""
^IBA(364.7,"C",5,2024)=""
^IBA(364.7,"C",5,2025)=""
^IBA(364.7,"C",5,2026)=""
^IBA(364.7,"C",5,2027)=""
^IBA(364.7,"C",5,2028)=""
^IBA(364.7,"C",5,2030)=""
^IBA(364.7,"C",5,2031)=""
^IBA(364.7,"C",5,2032)=""
^IBA(364.7,"C",5,2033)=""
^IBA(364.7,"C",5,2034)=""
^IBA(364.7,"C",5,2035)=""
^IBA(364.7,"C",5,2039)=""
^IBA(364.7,"C",5,2040)=""
^IBA(364.7,"C",5,2041)=""
^IBA(364.7,"C",5,2042)=""
^IBA(364.7,"C",6,8)=""
^IBA(364.7,"C",6,795)=""
^IBA(364.7,"C",6,1109)=""
^IBA(364.7,"C",7,11)=""
^IBA(364.7,"C",7,288)=""
^IBA(364.7,"C",8,176)=""
^IBA(364.7,"C",9,64)=""
^IBA(364.7,"C",9,519)=""
^IBA(364.7,"C",9,1310)=""
^IBA(364.7,"C",10,36)=""
^IBA(364.7,"C",10,520)=""
^IBA(364.7,"C",10,1268)=""
^IBA(364.7,"C",11,104)=""
^IBA(364.7,"C",11,521)=""
^IBA(364.7,"C",11,1326)=""
^IBA(364.7,"C",12,700)=""
^IBA(364.7,"C",12,1316)=""
^IBA(364.7,"C",13,719)=""
^IBA(364.7,"C",15,510)=""
^IBA(364.7,"C",16,37)=""
^IBA(364.7,"C",16,616)=""
^IBA(364.7,"C",16,1403)=""
^IBA(364.7,"C",20,892)=""
^IBA(364.7,"C",20,1171)=""
^IBA(364.7,"C",21,144)=""
^IBA(364.7,"C",22,198)=""
^IBA(364.7,"C",23,68)=""
^IBA(364.7,"C",23,726)=""
^IBA(364.7,"C",23,1342)=""
^IBA(364.7,"C",24,72)=""
^IBA(364.7,"C",24,357)=""
^IBA(364.7,"C",24,727)=""
^IBA(364.7,"C",24,1196)=""
^IBA(364.7,"C",24,1343)=""
^IBA(364.7,"C",25,24)=""
^IBA(364.7,"C",25,261)=""
^IBA(364.7,"C",25,1112)=""
^IBA(364.7,"C",25,1276)=""
^IBA(364.7,"C",26,136)=""
^IBA(364.7,"C",26,292)=""
^IBA(364.7,"C",26,1148)=""
^IBA(364.7,"C",27,137)=""
^IBA(364.7,"C",27,275)=""
^IBA(364.7,"C",27,1131)=""
^IBA(364.7,"C",28,123)=""
^IBA(364.7,"C",28,282)=""
^IBA(364.7,"C",29,186)=""
^IBA(364.7,"C",30,126)=""
^IBA(364.7,"C",30,289)=""
^IBA(364.7,"C",31,116)=""
^IBA(364.7,"C",31,293)=""
^IBA(364.7,"C",31,1149)=""
^IBA(364.7,"C",32,118)=""
^IBA(364.7,"C",32,274)=""
^IBA(364.7,"C",32,1130)=""
^IBA(364.7,"C",33,115)=""
^IBA(364.7,"C",33,276)=""
^IBA(364.7,"C",33,1132)=""
^IBA(364.7,"C",34,117)=""
^IBA(364.7,"C",35,114)=""
^IBA(364.7,"C",36,197)=""
^IBA(364.7,"C",46,113)=""
^IBA(364.7,"C",53,742)=""
^IBA(364.7,"C",54,1)=""
^IBA(364.7,"C",54,1952)=""
^IBA(364.7,"C",55,1000)=""
^IBA(364.7,"C",55,1001)=""
^IBA(364.7,"C",55,1176)=""
^IBA(364.7,"C",56,1627)=""
^IBA(364.7,"C",56,1927)=""
^IBA(364.7,"C",58,111)=""
^IBA(364.7,"C",59,58)=""
^IBA(364.7,"C",60,59)=""
^IBA(364.7,"C",61,55)=""
^IBA(364.7,"C",61,266)=""
^IBA(364.7,"C",61,1118)=""
^IBA(364.7,"C",61,1279)=""
^IBA(364.7,"C",62,56)=""
^IBA(364.7,"C",62,267)=""
^IBA(364.7,"C",62,1119)=""
^IBA(364.7,"C",62,1280)=""
^IBA(364.7,"C",63,57)=""
^IBA(364.7,"C",63,271)=""
^IBA(364.7,"C",63,1125)=""
^IBA(364.7,"C",63,1281)=""
^IBA(364.7,"C",64,272)=""
^IBA(364.7,"C",64,801)=""
^IBA(364.7,"C",64,1126)=""
^IBA(364.7,"C",65,46)=""
^IBA(364.7,"C",65,254)=""
^IBA(364.7,"C",65,296)=""
^IBA(364.7,"C",65,508)=""
^IBA(364.7,"C",65,1105)=""
^IBA(364.7,"C",65,1155)=""
^IBA(364.7,"C",65,1277)=""
^IBA(364.7,"C",66,54)=""
^IBA(364.7,"C",66,255)=""
^IBA(364.7,"C",66,511)=""
^IBA(364.7,"C",66,1106)=""
^IBA(364.7,"C",66,1303)=""
^IBA(364.7,"C",67,60)=""
^IBA(364.7,"C",67,257)=""
^IBA(364.7,"C",67,512)=""
^IBA(364.7,"C",67,1107)=""
^IBA(364.7,"C",67,1304)=""
^IBA(364.7,"C",68,268)=""
^IBA(364.7,"C",68,513)=""
^IBA(364.7,"C",71,74)=""
^IBA(364.7,"C",71,501)=""
^IBA(364.7,"C",71,937)=""
^IBA(364.7,"C",71,1156)=""
^IBA(364.7,"C",71,1272)=""
^IBA(364.7,"C",72,492)=""
^IBA(364.7,"C",74,67)=""
^IBA(364.7,"C",75,503)=""
^IBA(364.7,"C",76,47)=""
^IBA(364.7,"C",76,504)=""
^IBA(364.7,"C",78,98)=""
^IBA(364.7,"C",78,514)=""
^IBA(364.7,"C",78,1305)=""
^IBA(364.7,"C",79,516)=""
^IBA(364.7,"C",79,1307)=""
^IBA(364.7,"C",80,102)=""
^IBA(364.7,"C",80,517)=""
^IBA(364.7,"C",80,1308)=""
^IBA(364.7,"C",81,100)=""
^IBA(364.7,"C",81,518)=""
^IBA(364.7,"C",81,1309)=""
^IBA(364.7,"C",83,318)=""
^IBA(364.7,"C",85,611)=""
^IBA(364.7,"C",85,1370)=""
^IBA(364.7,"C",86,27)=""
^IBA(364.7,"C",86,306)=""
^IBA(364.7,"C",86,744)=""
^IBA(364.7,"C",86,1173)=""
^IBA(364.7,"C",86,1298)=""
^IBA(364.7,"C",87,96)=""
^IBA(364.7,"C",87,277)=""
^IBA(364.7,"C",87,1133)=""
^IBA(364.7,"C",88,94)=""
^IBA(364.7,"C",88,285)=""
^IBA(364.7,"C",88,1141)=""
^IBA(364.7,"C",88,1337)=""
^IBA(364.7,"C",89,97)=""
^IBA(364.7,"C",89,290)=""
^IBA(364.7,"C",89,1146)=""
^IBA(364.7,"C",90,29)=""
^IBA(364.7,"C",90,299)=""
^IBA(364.7,"C",91,1930)=""
^IBA(364.7,"C",93,25)=""
^IBA(364.7,"C",93,300)=""
^IBA(364.7,"C",93,1160)=""
^IBA(364.7,"C",94,26)=""
^IBA(364.7,"C",94,301)=""
^IBA(364.7,"C",94,1161)=""
^IBA(364.7,"C",95,76)=""
^IBA(364.7,"C",95,315)=""
^IBA(364.7,"C",95,1197)=""
^IBA(364.7,"C",96,1204)=""
^IBA(364.7,"C",96,1252)=""
^IBA(364.7,"C",96,1610)=""
^IBA(364.7,"C",96,1615)=""
^IBA(364.7,"C",97,48)=""
^IBA(364.7,"C",98,73)=""
^IBA(364.7,"C",99,273)=""
^IBA(364.7,"C",100,78)=""
^IBA(364.7,"C",100,81)=""
^IBA(364.7,"C",100,82)=""
^IBA(364.7,"C",100,84)=""
^IBA(364.7,"C",100,85)=""
^IBA(364.7,"C",100,86)=""
^IBA(364.7,"C",100,87)=""
^IBA(364.7,"C",100,90)=""
^IBA(364.7,"C",100,91)=""
^IBA(364.7,"C",100,92)=""
^IBA(364.7,"C",100,93)=""
^IBA(364.7,"C",100,190)=""
^IBA(364.7,"C",100,191)=""
^IBA(364.7,"C",100,984)=""
^IBA(364.7,"C",101,112)=""
^IBA(364.7,"C",101,224)=""
^IBA(364.7,"C",101,1027)=""
^IBA(364.7,"C",101,1028)=""
^IBA(364.7,"C",101,1029)=""
^IBA(364.7,"C",101,1030)=""
^IBA(364.7,"C",101,1039)=""
^IBA(364.7,"C",101,1531)=""
^IBA(364.7,"C",101,1955)=""
^IBA(364.7,"C",102,138)=""
^IBA(364.7,"C",104,322)=""
^IBA(364.7,"C",104,493)=""
^IBA(364.7,"C",105,328)=""
^IBA(364.7,"C",105,782)=""
^IBA(364.7,"C",106,329)=""
^IBA(364.7,"C",106,783)=""
^IBA(364.7,"C",107,330)=""
^IBA(364.7,"C",107,784)=""
^IBA(364.7,"C",109,312)=""
^IBA(364.7,"C",109,500)=""
^IBA(364.7,"C",109,1193)=""
^IBA(364.7,"C",109,1271)=""
^IBA(364.7,"C",110,1144)=""
^IBA(364.7,"C",110,1944)=""
^IBA(364.7,"C",111,196)=""
^IBA(364.7,"C",112,947)=""
^IBA(364.7,"C",113,1009)=""
^IBA(364.7,"C",115,155)=""
^IBA(364.7,"C",116,320)=""
^IBA(364.7,"C",120,161)=""
^IBA(364.7,"C",121,162)=""
^IBA(364.7,"C",122,1150)=""
^IBA(364.7,"C",124,194)=""
^IBA(364.7,"C",125,164)=""
^IBA(364.7,"C",126,165)=""
^IBA(364.7,"C",127,799)=""
^IBA(364.7,"C",130,1933)=""
^IBA(364.7,"C",131,199)=""
^IBA(364.7,"C",131,200)=""
^IBA(364.7,"C",131,201)=""
^IBA(364.7,"C",131,202)=""
^IBA(364.7,"C",131,216)=""
^IBA(364.7,"C",131,219)=""
^IBA(364.7,"C",131,220)=""
^IBA(364.7,"C",131,221)=""
^IBA(364.7,"C",131,222)=""
^IBA(364.7,"C",131,223)=""
^IBA(364.7,"C",131,228)=""
^IBA(364.7,"C",131,231)=""
^IBA(364.7,"C",131,233)=""
^IBA(364.7,"C",131,234)=""
^IBA(364.7,"C",131,235)=""
^IBA(364.7,"C",131,236)=""
^IBA(364.7,"C",131,237)=""
^IBA(364.7,"C",131,239)=""
^IBA(364.7,"C",131,240)=""
^IBA(364.7,"C",131,241)=""
^IBA(364.7,"C",131,242)=""
^IBA(364.7,"C",131,243)=""
^IBA(364.7,"C",131,364)=""
^IBA(364.7,"C",131,386)=""
^IBA(364.7,"C",131,387)=""
^IBA(364.7,"C",131,404)=""
^IBA(364.7,"C",131,414)=""
^IBA(364.7,"C",131,416)=""
^IBA(364.7,"C",131,417)=""
^IBA(364.7,"C",131,418)=""
^IBA(364.7,"C",131,419)=""
^IBA(364.7,"C",131,441)=""
^IBA(364.7,"C",131,453)=""
^IBA(364.7,"C",131,454)=""
^IBA(364.7,"C",131,466)=""
^IBA(364.7,"C",131,467)=""
^IBA(364.7,"C",131,469)=""
^IBA(364.7,"C",131,471)=""
^IBA(364.7,"C",131,478)=""
^IBA(364.7,"C",131,487)=""
^IBA(364.7,"C",131,531)=""
^IBA(364.7,"C",131,532)=""
^IBA(364.7,"C",131,641)=""
^IBA(364.7,"C",131,803)=""
^IBA(364.7,"C",131,810)=""
^IBA(364.7,"C",131,811)=""
^IBA(364.7,"C",131,812)=""
^IBA(364.7,"C",131,813)=""
^IBA(364.7,"C",131,831)=""
^IBA(364.7,"C",131,833)=""
^IBA(364.7,"C",131,1425)=""
^IBA(364.7,"C",131,1464)=""
^IBA(364.7,"C",131,1471)=""
^IBA(364.7,"C",131,1484)=""
^IBA(364.7,"C",131,1495)=""
^IBA(364.7,"C",131,1500)=""
^IBA(364.7,"C",131,1512)=""
^IBA(364.7,"C",131,1518)=""
^IBA(364.7,"C",131,1530)=""
^IBA(364.7,"C",131,1581)=""
^IBA(364.7,"C",131,1598)=""
^IBA(364.7,"C",131,1607)=""
^IBA(364.7,"C",131,1623)=""
^IBA(364.7,"C",131,1637)=""
^IBA(364.7,"C",131,1639)=""
^IBA(364.7,"C",131,1669)=""
^IBA(364.7,"C",131,1682)=""
^IBA(364.7,"C",131,1690)=""
^IBA(364.7,"C",131,1702)=""
^IBA(364.7,"C",131,1711)=""
^IBA(364.7,"C",131,1750)=""
^IBA(364.7,"C",131,1766)=""
^IBA(364.7,"C",131,1785)=""
^IBA(364.7,"C",131,1804)=""
^IBA(364.7,"C",131,1825)=""
^IBA(364.7,"C",131,1834)=""
^IBA(364.7,"C",131,1853)=""
^IBA(364.7,"C",131,1914)=""
^IBA(364.7,"C",131,1951)=""
^IBA(364.7,"C",131,1953)=""
^IBA(364.7,"C",131,1954)=""
^IBA(364.7,"C",131,1957)=""
^IBA(364.7,"C",132,1931)=""
^IBA(364.7,"C",133,473)=""
^IBA(364.7,"C",133,502)=""
^IBA(364.7,"C",133,1273)=""
^IBA(364.7,"C",136,479)=""
^IBA(364.7,"C",139,1932)=""
^IBA(364.7,"C",140,1158)=""
^IBA(364.7,"C",141,1159)=""
^IBA(364.7,"C",142,250)=""
^IBA(364.7,"C",142,490)=""
^IBA(364.7,"C",142,1100)=""
^IBA(364.7,"C",142,1251)=""
^IBA(364.7,"C",144,294)=""
^IBA(364.7,"C",144,1151)=""
^IBA(364.7,"C",145,998)=""
^IBA(364.7,"C",145,1153)=""
^IBA(364.7,"C",146,997)=""
^IBA(364.7,"C",146,1154)=""
^IBA(364.7,"C",147,304)=""
^IBA(364.7,"C",147,1166)=""
^IBA(364.7,"C",148,345)=""
^IBA(364.7,"C",148,1003)=""
^IBA(364.7,"C",148,1168)=""
^IBA(364.7,"C",149,1942)=""
^IBA(364.7,"C",150,307)=""
^IBA(364.7,"C",151,313)=""
^IBA(364.7,"C",151,1194)=""
^IBA(364.7,"C",152,729)=""
^IBA(364.7,"C",152,1345)=""
^IBA(364.7,"C",155,321)=""
^IBA(364.7,"C",156,728)=""
^IBA(364.7,"C",156,1198)=""
^IBA(364.7,"C",156,1344)=""
^IBA(364.7,"C",157,260)=""
^IBA(364.7,"C",157,1111)=""
^IBA(364.7,"C",157,1278)=""
^IBA(364.7,"C",159,95)=""
^IBA(364.7,"C",159,287)=""
^IBA(364.7,"C",159,1143)=""
^IBA(364.7,"C",160,305)=""
^IBA(364.7,"C",160,1167)=""
^IBA(364.7,"C",161,1934)=""
^IBA(364.7,"C",162,309)=""
^IBA(364.7,"C",162,1177)=""
^IBA(364.7,"C",163,308)=""
^IBA(364.7,"C",163,1174)=""
^IBA(364.7,"C",164,310)=""
^IBA(364.7,"C",164,1178)=""
^IBA(364.7,"C",165,336)=""
^IBA(364.7,"C",165,1181)=""
^IBA(364.7,"C",166,337)=""
^IBA(364.7,"C",166,1182)=""
^IBA(364.7,"C",167,338)=""
^IBA(364.7,"C",167,1183)=""
^IBA(364.7,"C",168,339)=""
^IBA(364.7,"C",169,340)=""
^IBA(364.7,"C",169,1185)=""
^IBA(364.7,"C",170,341)=""
^IBA(364.7,"C",170,1186)=""
^IBA(364.7,"C",171,342)=""
^IBA(364.7,"C",171,1187)=""
^IBA(364.7,"C",172,343)=""
^IBA(364.7,"C",172,1188)=""
^IBA(364.7,"C",173,75)=""
^IBA(364.7,"C",173,347)=""
^IBA(364.7,"C",174,483)=""
^IBA(364.7,"C",174,1189)=""
^IBA(364.7,"C",176,485)=""
^IBA(364.7,"C",177,486)=""
^IBA(364.7,"C",178,488)=""
^IBA(364.7,"C",182,1935)=""
^IBA(364.7,"C",186,498)=""
^IBA(364.7,"C",187,509)=""
^IBA(364.7,"C",190,49)=""
^IBA(364.7,"C",190,533)=""
^IBA(364.7,"C",190,1282)=""
^IBA(364.7,"C",191,530)=""
^IBA(364.7,"C",192,252)=""
^IBA(364.7,"C",192,636)=""
^IBA(364.7,"C",192,807)=""
^IBA(364.7,"C",192,1102)=""
^IBA(364.7,"C",192,1312)=""
^IBA(364.7,"C",193,710)=""
^IBA(364.7,"C",193,1404)=""
^IBA(364.7,"C",194,724)=""
^IBA(364.7,"C",194,1340)=""
^IBA(364.7,"C",195,725)=""
^IBA(364.7,"C",195,1360)=""
^IBA(364.7,"C",196,733)=""
^IBA(364.7,"C",196,1361)=""
^IBA(364.7,"C",197,734)=""
^IBA(364.7,"C",197,1362)=""
^IBA(364.7,"C",198,735)=""
^IBA(364.7,"C",198,1363)=""
^IBA(364.7,"C",199,736)=""
^IBA(364.7,"C",199,1364)=""
^IBA(364.7,"C",200,737)=""
^IBA(364.7,"C",200,1365)=""
^IBA(364.7,"C",202,739)=""
^IBA(364.7,"C",203,615)=""
^IBA(364.7,"C",209,323)=""
^IBA(364.7,"C",209,1208)=""
^IBA(364.7,"C",209,1457)=""
^IBA(364.7,"C",210,65)=""
^IBA(364.7,"C",210,314)=""
^IBA(364.7,"C",210,495)=""
^IBA(364.7,"C",210,1195)=""
^IBA(364.7,"C",210,1267)=""
^IBA(364.7,"C",213,1936)=""
^IBA(364.7,"C",218,505)=""
^IBA(364.7,"C",219,1937)=""
^IBA(364.7,"C",221,1175)=""
^IBA(364.7,"C",222,66)=""
^IBA(364.7,"C",223,788)=""
^IBA(364.7,"C",224,802)=""
^IBA(364.7,"C",225,808)=""
^IBA(364.7,"C",225,1904)=""
^IBA(364.7,"C",226,819)=""
^IBA(364.7,"C",227,818)=""
^IBA(364.7,"C",228,821)=""
^IBA(364.7,"C",229,484)=""
^IBA(364.7,"C",229,1184)=""
^IBA(364.7,"C",230,928)=""
^IBA(364.7,"C",230,1270)=""
^IBA(364.7,"C",232,52)=""
^IBA(364.7,"C",232,298)=""
^IBA(364.7,"C",233,1010)=""
^IBA(364.7,"C",234,1006)=""
^IBA(364.7,"C",235,350)=""
^IBA(364.7,"C",235,898)=""
^IBA(364.7,"C",235,1103)=""
^IBA(364.7,"C",236,901)=""
^IBA(364.7,"C",237,1938)=""
^IBA(364.7,"C",240,352)=""
^IBA(364.7,"C",241,158)=""
^IBA(364.7,"C",246,929)=""
^IBA(364.7,"C",247,930)=""
^IBA(364.7,"C",253,612)=""
^IBA(364.7,"C",255,499)=""
^IBA(364.7,"C",257,854)=""
^IBA(364.7,"C",262,311)=""
^IBA(364.7,"C",262,932)=""
^IBA(364.7,"C",262,1666)=""
^IBA(364.7,"C",265,738)=""
^IBA(364.7,"C",266,902)=""
^IBA(364.7,"C",266,931)=""
^IBA(364.7,"C",267,639)=""
^IBA(364.7,"C",268,207)=""
^IBA(364.7,"C",270,946)=""
^IBA(364.7,"C",273,949)=""
^IBA(364.7,"C",274,205)=""
^IBA(364.7,"C",274,206)=""
^IBA(364.7,"C",275,348)=""
^IBA(364.7,"C",280,134)=""
^IBA(364.7,"C",280,251)=""
^IBA(364.7,"C",280,634)=""
^IBA(364.7,"C",280,1101)=""
^IBA(364.7,"C",280,1311)=""
^IBA(364.7,"C",282,1002)=""
^IBA(364.7,"C",283,354)=""
^IBA(364.7,"C",284,31)=""
^IBA(364.7,"C",285,30)=""
^IBA(364.7,"C",286,131)=""
^IBA(364.7,"C",292,938)=""
^IBA(364.7,"C",293,936)=""
^IBA(364.7,"C",296,317)=""
^IBA(364.7,"C",296,491)=""
^IBA(364.7,"C",312,1025)=""
^IBA(364.7,"C",316,363)=""
^IBA(364.7,"C",319,472)=""
^IBA(364.7,"C",321,1652)=""
^IBA(364.7,"C",321,1653)=""
^IBA(364.7,"C",322,1664)=""
^IBA(364.7,"C",322,1665)=""
^IBA(364.7,"C",332,1654)=""
^IBA(364.7,"C",332,1655)=""
^IBA(364.7,"C",333,1656)=""
^IBA(364.7,"C",333,1659)=""
^IBA(364.7,"C",334,1657)=""
^IBA(364.7,"C",335,1658)=""
^IBA(364.7,"C",336,1660)=""
^IBA(364.7,"C",336,1661)=""
^IBA(364.7,"C",337,1662)=""
^IBA(364.7,"C",337,1663)=""
^IBA(364.7,"C",341,1667)=""
^IBA(364.7,"C",341,1668)=""
^IBA(364.7,"C",342,1670)=""
^IBA(364.7,"C",343,1671)=""
^IBA(364.7,"C",344,1672)=""
^IBA(364.7,"C",344,1673)=""
^IBA(364.7,"C",345,1674)=""
^IBA(364.7,"C",345,1675)=""
^IBA(364.7,"C",346,1676)=""
^IBA(364.7,"C",346,1677)=""
^IBA(364.7,"C",347,1678)=""
^IBA(364.7,"C",347,1679)=""
^IBA(364.7,"C",348,1680)=""
^IBA(364.7,"C",348,1681)=""
^IBA(364.7,"C",349,1683)=""
^IBA(364.7,"C",349,1684)=""
^IBA(364.7,"C",350,1685)=""
^IBA(364.7,"C",350,1686)=""
^IBA(364.7,"C",351,188)=""
^IBA(364.7,"C",351,900)=""
^IBA(364.7,"C",354,1723)=""
^IBA(364.7,"C",354,1724)=""
^IBA(364.7,"C",355,1939)=""
^IBA(364.7,"C",356,1940)=""
^IBA(364.7,"C",358,1179)=""
^IBA(364.7,"C",359,1366)=""
^IBA(364.7,"C",364,1164)=""
^IBA(364.7,"C",370,1203)=""
^IBA(364.7,"C",371,1190)=""
^IBA(364.7,"C",372,1191)=""
^IBA(364.7,"C",373,1903)=""
^IBA(364.7,"C",374,106)=""
^IBA(364.7,"C",376,1941)=""
^IBA(364.7,"C",377,1943)=""
^IBA(364.7,"C",378,1426)=""
^IBA(364.7,"C",379,1460)=""
^IBA(364.7,"C",380,1461)=""
^IBA(364.7,"C",381,1462)=""
^IBA(364.7,"C",382,1463)=""
^IBA(364.7,"C",383,1465)=""
^IBA(364.7,"C",384,1513)=""
^IBA(364.7,"C",384,1582)=""
^IBA(364.7,"C",384,1599)=""
^IBA(364.7,"C",396,1969)=""
^IBA(364.7,"C",438,2020)=""
^IBA(364.7,"C",440,2029)=""
^IBA(364.7,"C",442,2038)=""
