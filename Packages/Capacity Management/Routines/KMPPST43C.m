KMPPST43C ;SP/JML - VSM KMP*4*3 POST INSTALL ROUTINE ;2/1/2023
 ;;4.0;CAPACITY MANAGEMENT;**3**;3/1/2018;Build 17
 ;
IMALIVE(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP ImAliveEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""ImAlive"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP ImAliveHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
SYNRCMD(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SynthRcmdEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""SynthRcmd"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D SYNRCMD^KMPSYNTH(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SynthRcmdHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
SYNFILE(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SynthFileEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""SynthFile"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D SYNFILE^KMPSYNTH(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SynthFileHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
SYNVPR(MDEF) ;
 D MDEF.Implementation.WriteLine("    ;demographics;reactions;problems;vitals;labs;meds;immunizations;observation;visits;appointments;documents;procedures;consults;flags;factors;skinTests;exams;education;insurance")
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SynthVprEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""SynthVpr"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D SYNVPR^KMPSYNTH(KMPRET,KMPREQ.PatientDfn,KMPREQ.ClinicalDomains)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SynthVprHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
GETERR(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetErrorEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""GetError"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D GETERR^KMPUTLW2(KMPRET,KMPREQ)")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetErrorsHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
  ;
GETHTTPG(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetHttpMetricsGetEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 W ""Invalid Cache Version"" Q $$$OK")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    W ""<H1>Site</H1>""")
 D MDEF.Implementation.WriteLine("    S KMPITER = KMPRET.Site.%GetIterator()")
 D MDEF.Implementation.WriteLine("    WHILE KMPITER.%GetNext(.KEY,.KMPVALUE) {")
 D MDEF.Implementation.WriteLine("     W KEY_"": ""_KMPVALUE_""<BR>""")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    S KMPMCHK=%request.Get(""MONTYPE"")")
 D MDEF.Implementation.WriteLine("    I KMPMCHK="""" S KMPMCHK=""ALL""")
 D MDEF.Implementation.WriteLine("    S KMPDATE=%request.Get(""DATE"")")
 D MDEF.Implementation.WriteLine("    I KMPDATE'="""" S KMPDCHK=""3""_KMPDATE")
 D MDEF.Implementation.WriteLine("    E  S KMPDCHK=""ALL""")
 D MDEF.Implementation.WriteLine("    S KMPSUB=""KMP""")
 D MDEF.Implementation.WriteLine("    F  S KMPSUB=$O(^XTMP(KMPSUB)) Q:$E(KMPSUB,1,3)'=""KMP""  D")
 D MDEF.Implementation.WriteLine("    .S KMPDAY=$P(KMPSUB,"" "",2)")
 D MDEF.Implementation.WriteLine("    .Q:(KMPDCHK'=KMPDAY)&&(KMPDCHK'=""ALL"")")
 D MDEF.Implementation.WriteLine("    .W ""<H2>""_$P(^XTMP(KMPSUB,0),""^"",3)_""</H2>""")
 D MDEF.Implementation.WriteLine("    .S KMPMTYP=0")
 D MDEF.Implementation.WriteLine("    .F  S KMPMTYP=$O(^XTMP(KMPSUB,KMPMTYP)) Q:KMPMTYP=""""  D")
 D MDEF.Implementation.WriteLine("    ..Q:(KMPMTYP'[KMPMCHK)&&(KMPMCHK'=""ALL"")")
 D MDEF.Implementation.WriteLine("    ..S KMPNODE=""""")
 D MDEF.Implementation.WriteLine("    ..F  S KMPNODE=$O(^XTMP(KMPSUB,KMPMTYP,""HTTP"",KMPNODE)) Q:KMPNODE=""""  D")
 D MDEF.Implementation.WriteLine("    ...W ""<H3>""_KMPMTYP_"" : ""_KMPNODE_""</H3>""")
 D MDEF.Implementation.WriteLine("    ...S KMPT=""""")
 D MDEF.Implementation.WriteLine("    ...F  S KMPT=$O(^XTMP(KMPSUB,KMPMTYP,""HTTP"",KMPNODE,KMPT)) Q:KMPT=""""  D")
 D MDEF.Implementation.WriteLine("    ....S KMPTIME=$ZT(KMPT)")
 D MDEF.Implementation.WriteLine("    ....S KMPDATA=^XTMP(KMPSUB,KMPMTYP,""HTTP"",KMPNODE,KMPT)")
 D MDEF.Implementation.WriteLine("    ....W ""<pre>""_KMPMTYP_"" - ""_KMPTIME_"" - ""_KMPDATA_""</pre>""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetHttpMetricsGetHandler"")")
 D MDEF.Implementation.WriteLine("    QUIT $$$OK")
 Q
 ;
GETHTTPP(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetHttpMetricsPostEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    D %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    D %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""HttpMetrics"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    ;")
 D MDEF.Implementation.WriteLine("    S KMPMCHK=KMPREQ.Montype")
 D MDEF.Implementation.WriteLine("    I KMPMCHK="""" S KMPMCHK=""ALL""")
 D MDEF.Implementation.WriteLine("    S KMPDATE=KMPREQ.Date")
 D MDEF.Implementation.WriteLine("    ; parse odbc date format into fileman data format")
 D MDEF.Implementation.WriteLine("    S KMPDCHK=""3""_$E(KMPDATE,3,4)_$P(KMPDATE,""-"",2)_$P(KMPDATE,""-"",3)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Date=KMPDATE")
 D MDEF.Implementation.WriteLine("    S KMPMLIST=##class(%DynamicArray).%New()")
 D MDEF.Implementation.WriteLine("    S KMPSUB=""KMP""")
 D MDEF.Implementation.WriteLine("    F  S KMPSUB=$O(^XTMP(KMPSUB)) Q:$E(KMPSUB,1,3)'=""KMP""  D")
 D MDEF.Implementation.WriteLine("    .S KMPDAY=$P(KMPSUB,"" "",2)")
 D MDEF.Implementation.WriteLine("    .Q:KMPDCHK'=KMPDAY")
 D MDEF.Implementation.WriteLine("    .S KMPMTYP=0")
 D MDEF.Implementation.WriteLine("    .F  S KMPMTYP=$O(^XTMP(KMPSUB,KMPMTYP)) Q:KMPMTYP=""""  D")
 D MDEF.Implementation.WriteLine("    ..Q:(KMPMCHK'[KMPMTYP)&&(KMPMCHK'=""ALL"")")
 D MDEF.Implementation.WriteLine("    ..S KMPMOBJ=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    ..S KMPMOBJ.Monitor=KMPMTYP")
 D MDEF.Implementation.WriteLine("    ..S KMPNODE=""""")
 D MDEF.Implementation.WriteLine("    ..F  S KMPNODE=$O(^XTMP(KMPSUB,KMPMTYP,""HTTP"",KMPNODE)) Q:KMPNODE=""""  D")
 D MDEF.Implementation.WriteLine("    ...S KMPDARR=##class(%DynamicArray).%New()")
 D MDEF.Implementation.WriteLine("    ...S KMPT=""""")
 D MDEF.Implementation.WriteLine("    ...F  S KMPT=$O(^XTMP(KMPSUB,KMPMTYP,""HTTP"",KMPNODE,KMPT)) Q:KMPT=""""  D")
 D MDEF.Implementation.WriteLine("    ....S KMPTIME=$ZT(KMPT)")
 D MDEF.Implementation.WriteLine("    ....S KMPDATA=^XTMP(KMPSUB,KMPMTYP,""HTTP"",KMPNODE,KMPT)")
 D MDEF.Implementation.WriteLine("    ....S KMPDATA=KMPTIME_""^""_KMPNODE_""^""_KMPDATA")
 D MDEF.Implementation.WriteLine("    ....D KMPDARR.%Push(KMPDATA)")
 D MDEF.Implementation.WriteLine("    ...S KMPMOBJ.Data=KMPDARR")
 D MDEF.Implementation.WriteLine("    ..D KMPMLIST.%Push(KMPMOBJ)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Monitors=KMPMLIST")
 D MDEF.Implementation.WriteLine("    ;")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetHttpMetricsPostHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
