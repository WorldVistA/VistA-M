KMPPST43B ;SP/JML - KMP*4*3 POST INSTALL ROUTINE ;2/1/2023
 ;;4.0;CAPACITY MANAGEMENT;**3**;3/1/2018;Build 17
 ;
 ;
 N BR,I,KEY,KEY2,KMPLINE,KMPLINE2,KMPVALUE
 ;
GETCFG(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetConfigEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""GetConfig"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D CPF^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D MON^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetConfigHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
SETCFG(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SetConfigEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""SetConfig"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=$$SETCFG^KMPUTLW2(KMPREQ)")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D CPF^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D MON^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SetConfigHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
GETCONFIG(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetConfigurationEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D CPF^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D MON^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    #dim KMPITER As %Iterator.Array")
 D MDEF.Implementation.WriteLine("    #dim KMPITER2 As %Iterator.Array")
 D MDEF.Implementation.WriteLine("    W ""<H1>Site</H1>""")
 D MDEF.Implementation.WriteLine("    S KMPITER=KMPRET.Site.%GetIterator()")
 D MDEF.Implementation.WriteLine("    WHILE KMPITER.%GetNext(.KMPKEY,.KMPVALUE) {")
 D MDEF.Implementation.WriteLine("      W KMPKEY_"": ""_KMPVALUE_""<BR>""")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    W ""<H1>CPF</H1>""")
 D MDEF.Implementation.WriteLine("    W ""<H2>CPF Startup</H2>""")
 D MDEF.Implementation.WriteLine("    S KMPITER=KMPRET.CPF.Startup.%GetIterator()")
 D MDEF.Implementation.WriteLine("    WHILE KMPITER.%GetNext(.KMPKEY,.KMPVALUE) {")
 D MDEF.Implementation.WriteLine("    W KMPKEY_"": ""_KMPVALUE_""<BR>""")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    W ""<H2>CPF Mirror</H2>""")
 D MDEF.Implementation.WriteLine("    S KMPITER=KMPRET.CPF.MirrorMember.%GetIterator()")
 D MDEF.Implementation.WriteLine("    WHILE KMPITER.%GetNext(.KMPKEY,.KMPVALUE) {")
 D MDEF.Implementation.WriteLine("      W KMPKEY_"": ""_KMPVALUE_""<BR>""")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    W ""<H2>CPF Config</H2>""")
 D MDEF.Implementation.WriteLine("    S KMPITER=KMPRET.CPF.Config.%GetIterator()")
 D MDEF.Implementation.WriteLine("    WHILE KMPITER.%GetNext(.KMPKEY,.KMPVALUE) {")
 D MDEF.Implementation.WriteLine("      W KMPKEY_"": ""_KMPVALUE_""<BR>""")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    W ""<H1>Monitors</H1>""")
 D MDEF.Implementation.WriteLine("    S KMPITER=KMPRET.MonCFG.%GetIterator()")
 D MDEF.Implementation.WriteLine("    while KMPITER.%GetNext(.KMPKEY,.KMPLINE) {")
 D MDEF.Implementation.WriteLine("        W ""<H3>""_KMPLINE.Monitor_""</H3>""")
 D MDEF.Implementation.WriteLine("        S KMPITER2 = KMPLINE.%GetIterator()")
 D MDEF.Implementation.WriteLine("        while KMPITER2.%GetNext(.KMPKEY2, .KMPLINE2) {")
 D MDEF.Implementation.WriteLine("          I KMPKEY2'=""ApiKey"" W KMPKEY2_"": ""_KMPLINE2_""<BR>""")
 D MDEF.Implementation.WriteLine("        }")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP SetConfigurationHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
CTMLOG(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetCtmLogEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""GetCtmLog"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D CTMLOG^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetCtmLogHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
GETPACK(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetPackagesEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""GetPackages"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D PACKAGES^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=""OK""")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetPackagesHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
RETRY(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP RetryEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""Retry"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    S KMPRET.ResultText=$$RETRY^KMPUTLW(KMPREQ)")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP RetryHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
GETNODE(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    W ""<H>""_##class(%SYS.System).GetNodeName(1)_""</H>""")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
  ;
KILLDATA(MDEF) ;
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ERR^ZU,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    W ""<H1>Site</H1>""")
 D MDEF.Implementation.WriteLine("    S KMPITER = KMPRET.Site.%GetIterator()")
 D MDEF.Implementation.WriteLine("    WHILE KMPITER.%GetNext(.KEY,.KMPVALUE) {")
 D MDEF.Implementation.WriteLine("     W KEY_"": ""_KMPVALUE_""<BR>""")
 D MDEF.Implementation.WriteLine("    }")
 D MDEF.Implementation.WriteLine("    S KMPMCHK=%request.Get(""MONTYPE"")")
 D MDEF.Implementation.WriteLine("    S KMPMCHK=$REPLACE(KMPMCHK,"""""""","""")")
 D MDEF.Implementation.WriteLine("    I KMPMCHK="""" S KMPMCHK=""VBEM:VCSM:VETM:VHLM:VMCM:VSTM:VTCM""")
 D MDEF.Implementation.WriteLine("    S KMPL=$L(KMPMCHK,"":"")")
 D MDEF.Implementation.WriteLine("    F KMPI=1:1:KMPL D")
 D MDEF.Implementation.WriteLine("    .S KMPMTYP=$P(KMPMCHK,"":"",KMPI)")
 D MDEF.Implementation.WriteLine("    .K ^KMPTMP(""KMPV"",KMPMTYP)")
 D MDEF.Implementation.WriteLine("    .W ""<BR>Data deleted: "",KMPMTYP")
 D MDEF.Implementation.WriteLine("    .D STOPMON^KMPVCBG(KMPMTYP,1,0)")
 D MDEF.Implementation.WriteLine("    .W ""<BR>Monitor stopped: "",KMPMTYP")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
 ;
GETPAT(MDEF) ;
 D MDEF.Implementation.WriteLine("    N $ESTACK,$ETRAP S $ETRAP=""D ^%ZTER,UNWIND^%ZTER""")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetPatientListEvent"")")
 D MDEF.Implementation.WriteLine("    I $P($$VERSION^%ZOSV(0),""."") < 2017 Q $$$ERROR(""Invalid Cache Version"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Access-Control-Allow-Origin"",""*"")")
 D MDEF.Implementation.WriteLine("    Do %response.SetHeader(""Allow"",""HEAD,GET,POST,PUT,DELETE,OPTIONS"")")
 D MDEF.Implementation.WriteLine("    S KMPRET=##class(%DynamicObject).%New()")
 D MDEF.Implementation.WriteLine("    S KMPREQ=##class(%DynamicAbstractObject).%FromJSON(%request.Content)")
 D MDEF.Implementation.WriteLine("    I KMPREQ.Function'=""GetPatientList"" D  Quit $$$OK")
 D MDEF.Implementation.WriteLine("    .S KMPRET.ResultText=""Incorrect Function Type""")
 D MDEF.Implementation.WriteLine("    .W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D SITE^KMPUTLW(KMPRET)")
 D MDEF.Implementation.WriteLine("    D PATLIST^KMPSYNTH(KMPRET,KMPREQ.Count)")
 D MDEF.Implementation.WriteLine("    S KMPRET.Function=KMPREQ.Function")
 D MDEF.Implementation.WriteLine("    W KMPRET.%ToJSON()")
 D MDEF.Implementation.WriteLine("    D RU^%ZOSVKR(""KMP GetPatientListHandler"")")
 D MDEF.Implementation.WriteLine("    Quit $$$OK")
 Q
